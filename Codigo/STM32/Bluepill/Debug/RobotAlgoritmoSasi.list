
RobotAlgoritmoSasi.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007e80  08000110  08000110  00010110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000058  08007f90  08007f90  00017f90  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007fe8  08007fe8  000200ac  2**0
                  CONTENTS
  4 .ARM          00000000  08007fe8  08007fe8  000200ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  08007fe8  08007fe8  000200ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007fe8  08007fe8  00017fe8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08007fec  08007fec  00017fec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000ac  20000000  08007ff0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00002b60  200000ac  0800809c  000200ac  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20002c0c  0800809c  00022c0c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000200ac  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000dc7d  00000000  00000000  000200d5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000027fd  00000000  00000000  0002dd52  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000ed8  00000000  00000000  00030550  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000db0  00000000  00000000  00031428  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000197c4  00000000  00000000  000321d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001192e  00000000  00000000  0004b99c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00090c24  00000000  00000000  0005d2ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000edeee  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00004210  00000000  00000000  000edf40  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200000ac 	.word	0x200000ac
 800012c:	00000000 	.word	0x00000000
 8000130:	08007f78 	.word	0x08007f78

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200000b0 	.word	0x200000b0
 800014c:	08007f78 	.word	0x08007f78

08000150 <__aeabi_drsub>:
 8000150:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000154:	e002      	b.n	800015c <__adddf3>
 8000156:	bf00      	nop

08000158 <__aeabi_dsub>:
 8000158:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800015c <__adddf3>:
 800015c:	b530      	push	{r4, r5, lr}
 800015e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000162:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000166:	ea94 0f05 	teq	r4, r5
 800016a:	bf08      	it	eq
 800016c:	ea90 0f02 	teqeq	r0, r2
 8000170:	bf1f      	itttt	ne
 8000172:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000176:	ea55 0c02 	orrsne.w	ip, r5, r2
 800017a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800017e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000182:	f000 80e2 	beq.w	800034a <__adddf3+0x1ee>
 8000186:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800018a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800018e:	bfb8      	it	lt
 8000190:	426d      	neglt	r5, r5
 8000192:	dd0c      	ble.n	80001ae <__adddf3+0x52>
 8000194:	442c      	add	r4, r5
 8000196:	ea80 0202 	eor.w	r2, r0, r2
 800019a:	ea81 0303 	eor.w	r3, r1, r3
 800019e:	ea82 0000 	eor.w	r0, r2, r0
 80001a2:	ea83 0101 	eor.w	r1, r3, r1
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	2d36      	cmp	r5, #54	; 0x36
 80001b0:	bf88      	it	hi
 80001b2:	bd30      	pophi	{r4, r5, pc}
 80001b4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001bc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001c0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001c4:	d002      	beq.n	80001cc <__adddf3+0x70>
 80001c6:	4240      	negs	r0, r0
 80001c8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001cc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80001d0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001d4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001d8:	d002      	beq.n	80001e0 <__adddf3+0x84>
 80001da:	4252      	negs	r2, r2
 80001dc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001e0:	ea94 0f05 	teq	r4, r5
 80001e4:	f000 80a7 	beq.w	8000336 <__adddf3+0x1da>
 80001e8:	f1a4 0401 	sub.w	r4, r4, #1
 80001ec:	f1d5 0e20 	rsbs	lr, r5, #32
 80001f0:	db0d      	blt.n	800020e <__adddf3+0xb2>
 80001f2:	fa02 fc0e 	lsl.w	ip, r2, lr
 80001f6:	fa22 f205 	lsr.w	r2, r2, r5
 80001fa:	1880      	adds	r0, r0, r2
 80001fc:	f141 0100 	adc.w	r1, r1, #0
 8000200:	fa03 f20e 	lsl.w	r2, r3, lr
 8000204:	1880      	adds	r0, r0, r2
 8000206:	fa43 f305 	asr.w	r3, r3, r5
 800020a:	4159      	adcs	r1, r3
 800020c:	e00e      	b.n	800022c <__adddf3+0xd0>
 800020e:	f1a5 0520 	sub.w	r5, r5, #32
 8000212:	f10e 0e20 	add.w	lr, lr, #32
 8000216:	2a01      	cmp	r2, #1
 8000218:	fa03 fc0e 	lsl.w	ip, r3, lr
 800021c:	bf28      	it	cs
 800021e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000222:	fa43 f305 	asr.w	r3, r3, r5
 8000226:	18c0      	adds	r0, r0, r3
 8000228:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800022c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000230:	d507      	bpl.n	8000242 <__adddf3+0xe6>
 8000232:	f04f 0e00 	mov.w	lr, #0
 8000236:	f1dc 0c00 	rsbs	ip, ip, #0
 800023a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800023e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000242:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000246:	d31b      	bcc.n	8000280 <__adddf3+0x124>
 8000248:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800024c:	d30c      	bcc.n	8000268 <__adddf3+0x10c>
 800024e:	0849      	lsrs	r1, r1, #1
 8000250:	ea5f 0030 	movs.w	r0, r0, rrx
 8000254:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000258:	f104 0401 	add.w	r4, r4, #1
 800025c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000260:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000264:	f080 809a 	bcs.w	800039c <__adddf3+0x240>
 8000268:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800026c:	bf08      	it	eq
 800026e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000272:	f150 0000 	adcs.w	r0, r0, #0
 8000276:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800027a:	ea41 0105 	orr.w	r1, r1, r5
 800027e:	bd30      	pop	{r4, r5, pc}
 8000280:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000284:	4140      	adcs	r0, r0
 8000286:	eb41 0101 	adc.w	r1, r1, r1
 800028a:	3c01      	subs	r4, #1
 800028c:	bf28      	it	cs
 800028e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000292:	d2e9      	bcs.n	8000268 <__adddf3+0x10c>
 8000294:	f091 0f00 	teq	r1, #0
 8000298:	bf04      	itt	eq
 800029a:	4601      	moveq	r1, r0
 800029c:	2000      	moveq	r0, #0
 800029e:	fab1 f381 	clz	r3, r1
 80002a2:	bf08      	it	eq
 80002a4:	3320      	addeq	r3, #32
 80002a6:	f1a3 030b 	sub.w	r3, r3, #11
 80002aa:	f1b3 0220 	subs.w	r2, r3, #32
 80002ae:	da0c      	bge.n	80002ca <__adddf3+0x16e>
 80002b0:	320c      	adds	r2, #12
 80002b2:	dd08      	ble.n	80002c6 <__adddf3+0x16a>
 80002b4:	f102 0c14 	add.w	ip, r2, #20
 80002b8:	f1c2 020c 	rsb	r2, r2, #12
 80002bc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002c0:	fa21 f102 	lsr.w	r1, r1, r2
 80002c4:	e00c      	b.n	80002e0 <__adddf3+0x184>
 80002c6:	f102 0214 	add.w	r2, r2, #20
 80002ca:	bfd8      	it	le
 80002cc:	f1c2 0c20 	rsble	ip, r2, #32
 80002d0:	fa01 f102 	lsl.w	r1, r1, r2
 80002d4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002d8:	bfdc      	itt	le
 80002da:	ea41 010c 	orrle.w	r1, r1, ip
 80002de:	4090      	lslle	r0, r2
 80002e0:	1ae4      	subs	r4, r4, r3
 80002e2:	bfa2      	ittt	ge
 80002e4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002e8:	4329      	orrge	r1, r5
 80002ea:	bd30      	popge	{r4, r5, pc}
 80002ec:	ea6f 0404 	mvn.w	r4, r4
 80002f0:	3c1f      	subs	r4, #31
 80002f2:	da1c      	bge.n	800032e <__adddf3+0x1d2>
 80002f4:	340c      	adds	r4, #12
 80002f6:	dc0e      	bgt.n	8000316 <__adddf3+0x1ba>
 80002f8:	f104 0414 	add.w	r4, r4, #20
 80002fc:	f1c4 0220 	rsb	r2, r4, #32
 8000300:	fa20 f004 	lsr.w	r0, r0, r4
 8000304:	fa01 f302 	lsl.w	r3, r1, r2
 8000308:	ea40 0003 	orr.w	r0, r0, r3
 800030c:	fa21 f304 	lsr.w	r3, r1, r4
 8000310:	ea45 0103 	orr.w	r1, r5, r3
 8000314:	bd30      	pop	{r4, r5, pc}
 8000316:	f1c4 040c 	rsb	r4, r4, #12
 800031a:	f1c4 0220 	rsb	r2, r4, #32
 800031e:	fa20 f002 	lsr.w	r0, r0, r2
 8000322:	fa01 f304 	lsl.w	r3, r1, r4
 8000326:	ea40 0003 	orr.w	r0, r0, r3
 800032a:	4629      	mov	r1, r5
 800032c:	bd30      	pop	{r4, r5, pc}
 800032e:	fa21 f004 	lsr.w	r0, r1, r4
 8000332:	4629      	mov	r1, r5
 8000334:	bd30      	pop	{r4, r5, pc}
 8000336:	f094 0f00 	teq	r4, #0
 800033a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800033e:	bf06      	itte	eq
 8000340:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000344:	3401      	addeq	r4, #1
 8000346:	3d01      	subne	r5, #1
 8000348:	e74e      	b.n	80001e8 <__adddf3+0x8c>
 800034a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800034e:	bf18      	it	ne
 8000350:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000354:	d029      	beq.n	80003aa <__adddf3+0x24e>
 8000356:	ea94 0f05 	teq	r4, r5
 800035a:	bf08      	it	eq
 800035c:	ea90 0f02 	teqeq	r0, r2
 8000360:	d005      	beq.n	800036e <__adddf3+0x212>
 8000362:	ea54 0c00 	orrs.w	ip, r4, r0
 8000366:	bf04      	itt	eq
 8000368:	4619      	moveq	r1, r3
 800036a:	4610      	moveq	r0, r2
 800036c:	bd30      	pop	{r4, r5, pc}
 800036e:	ea91 0f03 	teq	r1, r3
 8000372:	bf1e      	ittt	ne
 8000374:	2100      	movne	r1, #0
 8000376:	2000      	movne	r0, #0
 8000378:	bd30      	popne	{r4, r5, pc}
 800037a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800037e:	d105      	bne.n	800038c <__adddf3+0x230>
 8000380:	0040      	lsls	r0, r0, #1
 8000382:	4149      	adcs	r1, r1
 8000384:	bf28      	it	cs
 8000386:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800038a:	bd30      	pop	{r4, r5, pc}
 800038c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000390:	bf3c      	itt	cc
 8000392:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000396:	bd30      	popcc	{r4, r5, pc}
 8000398:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800039c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003a0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003a4:	f04f 0000 	mov.w	r0, #0
 80003a8:	bd30      	pop	{r4, r5, pc}
 80003aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003ae:	bf1a      	itte	ne
 80003b0:	4619      	movne	r1, r3
 80003b2:	4610      	movne	r0, r2
 80003b4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003b8:	bf1c      	itt	ne
 80003ba:	460b      	movne	r3, r1
 80003bc:	4602      	movne	r2, r0
 80003be:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003c2:	bf06      	itte	eq
 80003c4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003c8:	ea91 0f03 	teqeq	r1, r3
 80003cc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80003d0:	bd30      	pop	{r4, r5, pc}
 80003d2:	bf00      	nop

080003d4 <__aeabi_ui2d>:
 80003d4:	f090 0f00 	teq	r0, #0
 80003d8:	bf04      	itt	eq
 80003da:	2100      	moveq	r1, #0
 80003dc:	4770      	bxeq	lr
 80003de:	b530      	push	{r4, r5, lr}
 80003e0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80003e4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80003e8:	f04f 0500 	mov.w	r5, #0
 80003ec:	f04f 0100 	mov.w	r1, #0
 80003f0:	e750      	b.n	8000294 <__adddf3+0x138>
 80003f2:	bf00      	nop

080003f4 <__aeabi_i2d>:
 80003f4:	f090 0f00 	teq	r0, #0
 80003f8:	bf04      	itt	eq
 80003fa:	2100      	moveq	r1, #0
 80003fc:	4770      	bxeq	lr
 80003fe:	b530      	push	{r4, r5, lr}
 8000400:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000404:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000408:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800040c:	bf48      	it	mi
 800040e:	4240      	negmi	r0, r0
 8000410:	f04f 0100 	mov.w	r1, #0
 8000414:	e73e      	b.n	8000294 <__adddf3+0x138>
 8000416:	bf00      	nop

08000418 <__aeabi_f2d>:
 8000418:	0042      	lsls	r2, r0, #1
 800041a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800041e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000422:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000426:	bf1f      	itttt	ne
 8000428:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800042c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000430:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000434:	4770      	bxne	lr
 8000436:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800043a:	bf08      	it	eq
 800043c:	4770      	bxeq	lr
 800043e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000442:	bf04      	itt	eq
 8000444:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000448:	4770      	bxeq	lr
 800044a:	b530      	push	{r4, r5, lr}
 800044c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000450:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000454:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000458:	e71c      	b.n	8000294 <__adddf3+0x138>
 800045a:	bf00      	nop

0800045c <__aeabi_ul2d>:
 800045c:	ea50 0201 	orrs.w	r2, r0, r1
 8000460:	bf08      	it	eq
 8000462:	4770      	bxeq	lr
 8000464:	b530      	push	{r4, r5, lr}
 8000466:	f04f 0500 	mov.w	r5, #0
 800046a:	e00a      	b.n	8000482 <__aeabi_l2d+0x16>

0800046c <__aeabi_l2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800047a:	d502      	bpl.n	8000482 <__aeabi_l2d+0x16>
 800047c:	4240      	negs	r0, r0
 800047e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000482:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000486:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800048a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800048e:	f43f aed8 	beq.w	8000242 <__adddf3+0xe6>
 8000492:	f04f 0203 	mov.w	r2, #3
 8000496:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800049a:	bf18      	it	ne
 800049c:	3203      	addne	r2, #3
 800049e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004a2:	bf18      	it	ne
 80004a4:	3203      	addne	r2, #3
 80004a6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004aa:	f1c2 0320 	rsb	r3, r2, #32
 80004ae:	fa00 fc03 	lsl.w	ip, r0, r3
 80004b2:	fa20 f002 	lsr.w	r0, r0, r2
 80004b6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ba:	ea40 000e 	orr.w	r0, r0, lr
 80004be:	fa21 f102 	lsr.w	r1, r1, r2
 80004c2:	4414      	add	r4, r2
 80004c4:	e6bd      	b.n	8000242 <__adddf3+0xe6>
 80004c6:	bf00      	nop

080004c8 <__aeabi_dmul>:
 80004c8:	b570      	push	{r4, r5, r6, lr}
 80004ca:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004ce:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80004d2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004d6:	bf1d      	ittte	ne
 80004d8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004dc:	ea94 0f0c 	teqne	r4, ip
 80004e0:	ea95 0f0c 	teqne	r5, ip
 80004e4:	f000 f8de 	bleq	80006a4 <__aeabi_dmul+0x1dc>
 80004e8:	442c      	add	r4, r5
 80004ea:	ea81 0603 	eor.w	r6, r1, r3
 80004ee:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80004f2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80004f6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80004fa:	bf18      	it	ne
 80004fc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000500:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000504:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000508:	d038      	beq.n	800057c <__aeabi_dmul+0xb4>
 800050a:	fba0 ce02 	umull	ip, lr, r0, r2
 800050e:	f04f 0500 	mov.w	r5, #0
 8000512:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000516:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800051a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800051e:	f04f 0600 	mov.w	r6, #0
 8000522:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000526:	f09c 0f00 	teq	ip, #0
 800052a:	bf18      	it	ne
 800052c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000530:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000534:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000538:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800053c:	d204      	bcs.n	8000548 <__aeabi_dmul+0x80>
 800053e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000542:	416d      	adcs	r5, r5
 8000544:	eb46 0606 	adc.w	r6, r6, r6
 8000548:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800054c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000550:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000554:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000558:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800055c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000560:	bf88      	it	hi
 8000562:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000566:	d81e      	bhi.n	80005a6 <__aeabi_dmul+0xde>
 8000568:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800056c:	bf08      	it	eq
 800056e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000572:	f150 0000 	adcs.w	r0, r0, #0
 8000576:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800057a:	bd70      	pop	{r4, r5, r6, pc}
 800057c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000580:	ea46 0101 	orr.w	r1, r6, r1
 8000584:	ea40 0002 	orr.w	r0, r0, r2
 8000588:	ea81 0103 	eor.w	r1, r1, r3
 800058c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000590:	bfc2      	ittt	gt
 8000592:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000596:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800059a:	bd70      	popgt	{r4, r5, r6, pc}
 800059c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005a0:	f04f 0e00 	mov.w	lr, #0
 80005a4:	3c01      	subs	r4, #1
 80005a6:	f300 80ab 	bgt.w	8000700 <__aeabi_dmul+0x238>
 80005aa:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005ae:	bfde      	ittt	le
 80005b0:	2000      	movle	r0, #0
 80005b2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005b6:	bd70      	pople	{r4, r5, r6, pc}
 80005b8:	f1c4 0400 	rsb	r4, r4, #0
 80005bc:	3c20      	subs	r4, #32
 80005be:	da35      	bge.n	800062c <__aeabi_dmul+0x164>
 80005c0:	340c      	adds	r4, #12
 80005c2:	dc1b      	bgt.n	80005fc <__aeabi_dmul+0x134>
 80005c4:	f104 0414 	add.w	r4, r4, #20
 80005c8:	f1c4 0520 	rsb	r5, r4, #32
 80005cc:	fa00 f305 	lsl.w	r3, r0, r5
 80005d0:	fa20 f004 	lsr.w	r0, r0, r4
 80005d4:	fa01 f205 	lsl.w	r2, r1, r5
 80005d8:	ea40 0002 	orr.w	r0, r0, r2
 80005dc:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80005e0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005e4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005e8:	fa21 f604 	lsr.w	r6, r1, r4
 80005ec:	eb42 0106 	adc.w	r1, r2, r6
 80005f0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80005f4:	bf08      	it	eq
 80005f6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80005fa:	bd70      	pop	{r4, r5, r6, pc}
 80005fc:	f1c4 040c 	rsb	r4, r4, #12
 8000600:	f1c4 0520 	rsb	r5, r4, #32
 8000604:	fa00 f304 	lsl.w	r3, r0, r4
 8000608:	fa20 f005 	lsr.w	r0, r0, r5
 800060c:	fa01 f204 	lsl.w	r2, r1, r4
 8000610:	ea40 0002 	orr.w	r0, r0, r2
 8000614:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000618:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800061c:	f141 0100 	adc.w	r1, r1, #0
 8000620:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000624:	bf08      	it	eq
 8000626:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800062a:	bd70      	pop	{r4, r5, r6, pc}
 800062c:	f1c4 0520 	rsb	r5, r4, #32
 8000630:	fa00 f205 	lsl.w	r2, r0, r5
 8000634:	ea4e 0e02 	orr.w	lr, lr, r2
 8000638:	fa20 f304 	lsr.w	r3, r0, r4
 800063c:	fa01 f205 	lsl.w	r2, r1, r5
 8000640:	ea43 0302 	orr.w	r3, r3, r2
 8000644:	fa21 f004 	lsr.w	r0, r1, r4
 8000648:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800064c:	fa21 f204 	lsr.w	r2, r1, r4
 8000650:	ea20 0002 	bic.w	r0, r0, r2
 8000654:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000658:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800065c:	bf08      	it	eq
 800065e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000662:	bd70      	pop	{r4, r5, r6, pc}
 8000664:	f094 0f00 	teq	r4, #0
 8000668:	d10f      	bne.n	800068a <__aeabi_dmul+0x1c2>
 800066a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800066e:	0040      	lsls	r0, r0, #1
 8000670:	eb41 0101 	adc.w	r1, r1, r1
 8000674:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000678:	bf08      	it	eq
 800067a:	3c01      	subeq	r4, #1
 800067c:	d0f7      	beq.n	800066e <__aeabi_dmul+0x1a6>
 800067e:	ea41 0106 	orr.w	r1, r1, r6
 8000682:	f095 0f00 	teq	r5, #0
 8000686:	bf18      	it	ne
 8000688:	4770      	bxne	lr
 800068a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800068e:	0052      	lsls	r2, r2, #1
 8000690:	eb43 0303 	adc.w	r3, r3, r3
 8000694:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000698:	bf08      	it	eq
 800069a:	3d01      	subeq	r5, #1
 800069c:	d0f7      	beq.n	800068e <__aeabi_dmul+0x1c6>
 800069e:	ea43 0306 	orr.w	r3, r3, r6
 80006a2:	4770      	bx	lr
 80006a4:	ea94 0f0c 	teq	r4, ip
 80006a8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006ac:	bf18      	it	ne
 80006ae:	ea95 0f0c 	teqne	r5, ip
 80006b2:	d00c      	beq.n	80006ce <__aeabi_dmul+0x206>
 80006b4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006b8:	bf18      	it	ne
 80006ba:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006be:	d1d1      	bne.n	8000664 <__aeabi_dmul+0x19c>
 80006c0:	ea81 0103 	eor.w	r1, r1, r3
 80006c4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006c8:	f04f 0000 	mov.w	r0, #0
 80006cc:	bd70      	pop	{r4, r5, r6, pc}
 80006ce:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006d2:	bf06      	itte	eq
 80006d4:	4610      	moveq	r0, r2
 80006d6:	4619      	moveq	r1, r3
 80006d8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006dc:	d019      	beq.n	8000712 <__aeabi_dmul+0x24a>
 80006de:	ea94 0f0c 	teq	r4, ip
 80006e2:	d102      	bne.n	80006ea <__aeabi_dmul+0x222>
 80006e4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006e8:	d113      	bne.n	8000712 <__aeabi_dmul+0x24a>
 80006ea:	ea95 0f0c 	teq	r5, ip
 80006ee:	d105      	bne.n	80006fc <__aeabi_dmul+0x234>
 80006f0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80006f4:	bf1c      	itt	ne
 80006f6:	4610      	movne	r0, r2
 80006f8:	4619      	movne	r1, r3
 80006fa:	d10a      	bne.n	8000712 <__aeabi_dmul+0x24a>
 80006fc:	ea81 0103 	eor.w	r1, r1, r3
 8000700:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000704:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000708:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800070c:	f04f 0000 	mov.w	r0, #0
 8000710:	bd70      	pop	{r4, r5, r6, pc}
 8000712:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000716:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800071a:	bd70      	pop	{r4, r5, r6, pc}

0800071c <__aeabi_ddiv>:
 800071c:	b570      	push	{r4, r5, r6, lr}
 800071e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000722:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000726:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800072a:	bf1d      	ittte	ne
 800072c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000730:	ea94 0f0c 	teqne	r4, ip
 8000734:	ea95 0f0c 	teqne	r5, ip
 8000738:	f000 f8a7 	bleq	800088a <__aeabi_ddiv+0x16e>
 800073c:	eba4 0405 	sub.w	r4, r4, r5
 8000740:	ea81 0e03 	eor.w	lr, r1, r3
 8000744:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000748:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800074c:	f000 8088 	beq.w	8000860 <__aeabi_ddiv+0x144>
 8000750:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000754:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000758:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800075c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000760:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000764:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000768:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800076c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000770:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000774:	429d      	cmp	r5, r3
 8000776:	bf08      	it	eq
 8000778:	4296      	cmpeq	r6, r2
 800077a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800077e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000782:	d202      	bcs.n	800078a <__aeabi_ddiv+0x6e>
 8000784:	085b      	lsrs	r3, r3, #1
 8000786:	ea4f 0232 	mov.w	r2, r2, rrx
 800078a:	1ab6      	subs	r6, r6, r2
 800078c:	eb65 0503 	sbc.w	r5, r5, r3
 8000790:	085b      	lsrs	r3, r3, #1
 8000792:	ea4f 0232 	mov.w	r2, r2, rrx
 8000796:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800079a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800079e:	ebb6 0e02 	subs.w	lr, r6, r2
 80007a2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007a6:	bf22      	ittt	cs
 80007a8:	1ab6      	subcs	r6, r6, r2
 80007aa:	4675      	movcs	r5, lr
 80007ac:	ea40 000c 	orrcs.w	r0, r0, ip
 80007b0:	085b      	lsrs	r3, r3, #1
 80007b2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007b6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ba:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007be:	bf22      	ittt	cs
 80007c0:	1ab6      	subcs	r6, r6, r2
 80007c2:	4675      	movcs	r5, lr
 80007c4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007c8:	085b      	lsrs	r3, r3, #1
 80007ca:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80007d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007d6:	bf22      	ittt	cs
 80007d8:	1ab6      	subcs	r6, r6, r2
 80007da:	4675      	movcs	r5, lr
 80007dc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007e0:	085b      	lsrs	r3, r3, #1
 80007e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ee:	bf22      	ittt	cs
 80007f0:	1ab6      	subcs	r6, r6, r2
 80007f2:	4675      	movcs	r5, lr
 80007f4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80007f8:	ea55 0e06 	orrs.w	lr, r5, r6
 80007fc:	d018      	beq.n	8000830 <__aeabi_ddiv+0x114>
 80007fe:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000802:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000806:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800080a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800080e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000812:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000816:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800081a:	d1c0      	bne.n	800079e <__aeabi_ddiv+0x82>
 800081c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000820:	d10b      	bne.n	800083a <__aeabi_ddiv+0x11e>
 8000822:	ea41 0100 	orr.w	r1, r1, r0
 8000826:	f04f 0000 	mov.w	r0, #0
 800082a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800082e:	e7b6      	b.n	800079e <__aeabi_ddiv+0x82>
 8000830:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000834:	bf04      	itt	eq
 8000836:	4301      	orreq	r1, r0
 8000838:	2000      	moveq	r0, #0
 800083a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800083e:	bf88      	it	hi
 8000840:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000844:	f63f aeaf 	bhi.w	80005a6 <__aeabi_dmul+0xde>
 8000848:	ebb5 0c03 	subs.w	ip, r5, r3
 800084c:	bf04      	itt	eq
 800084e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000852:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000856:	f150 0000 	adcs.w	r0, r0, #0
 800085a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800085e:	bd70      	pop	{r4, r5, r6, pc}
 8000860:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000864:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000868:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800086c:	bfc2      	ittt	gt
 800086e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000872:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000876:	bd70      	popgt	{r4, r5, r6, pc}
 8000878:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800087c:	f04f 0e00 	mov.w	lr, #0
 8000880:	3c01      	subs	r4, #1
 8000882:	e690      	b.n	80005a6 <__aeabi_dmul+0xde>
 8000884:	ea45 0e06 	orr.w	lr, r5, r6
 8000888:	e68d      	b.n	80005a6 <__aeabi_dmul+0xde>
 800088a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800088e:	ea94 0f0c 	teq	r4, ip
 8000892:	bf08      	it	eq
 8000894:	ea95 0f0c 	teqeq	r5, ip
 8000898:	f43f af3b 	beq.w	8000712 <__aeabi_dmul+0x24a>
 800089c:	ea94 0f0c 	teq	r4, ip
 80008a0:	d10a      	bne.n	80008b8 <__aeabi_ddiv+0x19c>
 80008a2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008a6:	f47f af34 	bne.w	8000712 <__aeabi_dmul+0x24a>
 80008aa:	ea95 0f0c 	teq	r5, ip
 80008ae:	f47f af25 	bne.w	80006fc <__aeabi_dmul+0x234>
 80008b2:	4610      	mov	r0, r2
 80008b4:	4619      	mov	r1, r3
 80008b6:	e72c      	b.n	8000712 <__aeabi_dmul+0x24a>
 80008b8:	ea95 0f0c 	teq	r5, ip
 80008bc:	d106      	bne.n	80008cc <__aeabi_ddiv+0x1b0>
 80008be:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008c2:	f43f aefd 	beq.w	80006c0 <__aeabi_dmul+0x1f8>
 80008c6:	4610      	mov	r0, r2
 80008c8:	4619      	mov	r1, r3
 80008ca:	e722      	b.n	8000712 <__aeabi_dmul+0x24a>
 80008cc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008d0:	bf18      	it	ne
 80008d2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008d6:	f47f aec5 	bne.w	8000664 <__aeabi_dmul+0x19c>
 80008da:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008de:	f47f af0d 	bne.w	80006fc <__aeabi_dmul+0x234>
 80008e2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008e6:	f47f aeeb 	bne.w	80006c0 <__aeabi_dmul+0x1f8>
 80008ea:	e712      	b.n	8000712 <__aeabi_dmul+0x24a>

080008ec <__gedf2>:
 80008ec:	f04f 3cff 	mov.w	ip, #4294967295
 80008f0:	e006      	b.n	8000900 <__cmpdf2+0x4>
 80008f2:	bf00      	nop

080008f4 <__ledf2>:
 80008f4:	f04f 0c01 	mov.w	ip, #1
 80008f8:	e002      	b.n	8000900 <__cmpdf2+0x4>
 80008fa:	bf00      	nop

080008fc <__cmpdf2>:
 80008fc:	f04f 0c01 	mov.w	ip, #1
 8000900:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000904:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000908:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800090c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000910:	bf18      	it	ne
 8000912:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000916:	d01b      	beq.n	8000950 <__cmpdf2+0x54>
 8000918:	b001      	add	sp, #4
 800091a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800091e:	bf0c      	ite	eq
 8000920:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000924:	ea91 0f03 	teqne	r1, r3
 8000928:	bf02      	ittt	eq
 800092a:	ea90 0f02 	teqeq	r0, r2
 800092e:	2000      	moveq	r0, #0
 8000930:	4770      	bxeq	lr
 8000932:	f110 0f00 	cmn.w	r0, #0
 8000936:	ea91 0f03 	teq	r1, r3
 800093a:	bf58      	it	pl
 800093c:	4299      	cmppl	r1, r3
 800093e:	bf08      	it	eq
 8000940:	4290      	cmpeq	r0, r2
 8000942:	bf2c      	ite	cs
 8000944:	17d8      	asrcs	r0, r3, #31
 8000946:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800094a:	f040 0001 	orr.w	r0, r0, #1
 800094e:	4770      	bx	lr
 8000950:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000954:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000958:	d102      	bne.n	8000960 <__cmpdf2+0x64>
 800095a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800095e:	d107      	bne.n	8000970 <__cmpdf2+0x74>
 8000960:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d1d6      	bne.n	8000918 <__cmpdf2+0x1c>
 800096a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800096e:	d0d3      	beq.n	8000918 <__cmpdf2+0x1c>
 8000970:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000974:	4770      	bx	lr
 8000976:	bf00      	nop

08000978 <__aeabi_cdrcmple>:
 8000978:	4684      	mov	ip, r0
 800097a:	4610      	mov	r0, r2
 800097c:	4662      	mov	r2, ip
 800097e:	468c      	mov	ip, r1
 8000980:	4619      	mov	r1, r3
 8000982:	4663      	mov	r3, ip
 8000984:	e000      	b.n	8000988 <__aeabi_cdcmpeq>
 8000986:	bf00      	nop

08000988 <__aeabi_cdcmpeq>:
 8000988:	b501      	push	{r0, lr}
 800098a:	f7ff ffb7 	bl	80008fc <__cmpdf2>
 800098e:	2800      	cmp	r0, #0
 8000990:	bf48      	it	mi
 8000992:	f110 0f00 	cmnmi.w	r0, #0
 8000996:	bd01      	pop	{r0, pc}

08000998 <__aeabi_dcmpeq>:
 8000998:	f84d ed08 	str.w	lr, [sp, #-8]!
 800099c:	f7ff fff4 	bl	8000988 <__aeabi_cdcmpeq>
 80009a0:	bf0c      	ite	eq
 80009a2:	2001      	moveq	r0, #1
 80009a4:	2000      	movne	r0, #0
 80009a6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009aa:	bf00      	nop

080009ac <__aeabi_dcmplt>:
 80009ac:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009b0:	f7ff ffea 	bl	8000988 <__aeabi_cdcmpeq>
 80009b4:	bf34      	ite	cc
 80009b6:	2001      	movcc	r0, #1
 80009b8:	2000      	movcs	r0, #0
 80009ba:	f85d fb08 	ldr.w	pc, [sp], #8
 80009be:	bf00      	nop

080009c0 <__aeabi_dcmple>:
 80009c0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c4:	f7ff ffe0 	bl	8000988 <__aeabi_cdcmpeq>
 80009c8:	bf94      	ite	ls
 80009ca:	2001      	movls	r0, #1
 80009cc:	2000      	movhi	r0, #0
 80009ce:	f85d fb08 	ldr.w	pc, [sp], #8
 80009d2:	bf00      	nop

080009d4 <__aeabi_dcmpge>:
 80009d4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d8:	f7ff ffce 	bl	8000978 <__aeabi_cdrcmple>
 80009dc:	bf94      	ite	ls
 80009de:	2001      	movls	r0, #1
 80009e0:	2000      	movhi	r0, #0
 80009e2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e6:	bf00      	nop

080009e8 <__aeabi_dcmpgt>:
 80009e8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ec:	f7ff ffc4 	bl	8000978 <__aeabi_cdrcmple>
 80009f0:	bf34      	ite	cc
 80009f2:	2001      	movcc	r0, #1
 80009f4:	2000      	movcs	r0, #0
 80009f6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009fa:	bf00      	nop

080009fc <__aeabi_dcmpun>:
 80009fc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a00:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a04:	d102      	bne.n	8000a0c <__aeabi_dcmpun+0x10>
 8000a06:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a0a:	d10a      	bne.n	8000a22 <__aeabi_dcmpun+0x26>
 8000a0c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x20>
 8000a16:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a1a:	d102      	bne.n	8000a22 <__aeabi_dcmpun+0x26>
 8000a1c:	f04f 0000 	mov.w	r0, #0
 8000a20:	4770      	bx	lr
 8000a22:	f04f 0001 	mov.w	r0, #1
 8000a26:	4770      	bx	lr

08000a28 <__aeabi_d2f>:
 8000a28:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a2c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000a30:	bf24      	itt	cs
 8000a32:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000a36:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000a3a:	d90d      	bls.n	8000a58 <__aeabi_d2f+0x30>
 8000a3c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000a40:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000a44:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000a48:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000a4c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000a50:	bf08      	it	eq
 8000a52:	f020 0001 	biceq.w	r0, r0, #1
 8000a56:	4770      	bx	lr
 8000a58:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000a5c:	d121      	bne.n	8000aa2 <__aeabi_d2f+0x7a>
 8000a5e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000a62:	bfbc      	itt	lt
 8000a64:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000a68:	4770      	bxlt	lr
 8000a6a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a6e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000a72:	f1c2 0218 	rsb	r2, r2, #24
 8000a76:	f1c2 0c20 	rsb	ip, r2, #32
 8000a7a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000a7e:	fa20 f002 	lsr.w	r0, r0, r2
 8000a82:	bf18      	it	ne
 8000a84:	f040 0001 	orrne.w	r0, r0, #1
 8000a88:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a8c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000a90:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000a94:	ea40 000c 	orr.w	r0, r0, ip
 8000a98:	fa23 f302 	lsr.w	r3, r3, r2
 8000a9c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000aa0:	e7cc      	b.n	8000a3c <__aeabi_d2f+0x14>
 8000aa2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000aa6:	d107      	bne.n	8000ab8 <__aeabi_d2f+0x90>
 8000aa8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000aac:	bf1e      	ittt	ne
 8000aae:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000ab2:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000ab6:	4770      	bxne	lr
 8000ab8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000abc:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000ac0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ac4:	4770      	bx	lr
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_frsub>:
 8000ac8:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000acc:	e002      	b.n	8000ad4 <__addsf3>
 8000ace:	bf00      	nop

08000ad0 <__aeabi_fsub>:
 8000ad0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000ad4 <__addsf3>:
 8000ad4:	0042      	lsls	r2, r0, #1
 8000ad6:	bf1f      	itttt	ne
 8000ad8:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000adc:	ea92 0f03 	teqne	r2, r3
 8000ae0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000ae4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000ae8:	d06a      	beq.n	8000bc0 <__addsf3+0xec>
 8000aea:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000aee:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000af2:	bfc1      	itttt	gt
 8000af4:	18d2      	addgt	r2, r2, r3
 8000af6:	4041      	eorgt	r1, r0
 8000af8:	4048      	eorgt	r0, r1
 8000afa:	4041      	eorgt	r1, r0
 8000afc:	bfb8      	it	lt
 8000afe:	425b      	neglt	r3, r3
 8000b00:	2b19      	cmp	r3, #25
 8000b02:	bf88      	it	hi
 8000b04:	4770      	bxhi	lr
 8000b06:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000b0a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b0e:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000b12:	bf18      	it	ne
 8000b14:	4240      	negne	r0, r0
 8000b16:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b1a:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000b1e:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000b22:	bf18      	it	ne
 8000b24:	4249      	negne	r1, r1
 8000b26:	ea92 0f03 	teq	r2, r3
 8000b2a:	d03f      	beq.n	8000bac <__addsf3+0xd8>
 8000b2c:	f1a2 0201 	sub.w	r2, r2, #1
 8000b30:	fa41 fc03 	asr.w	ip, r1, r3
 8000b34:	eb10 000c 	adds.w	r0, r0, ip
 8000b38:	f1c3 0320 	rsb	r3, r3, #32
 8000b3c:	fa01 f103 	lsl.w	r1, r1, r3
 8000b40:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000b44:	d502      	bpl.n	8000b4c <__addsf3+0x78>
 8000b46:	4249      	negs	r1, r1
 8000b48:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000b4c:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000b50:	d313      	bcc.n	8000b7a <__addsf3+0xa6>
 8000b52:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000b56:	d306      	bcc.n	8000b66 <__addsf3+0x92>
 8000b58:	0840      	lsrs	r0, r0, #1
 8000b5a:	ea4f 0131 	mov.w	r1, r1, rrx
 8000b5e:	f102 0201 	add.w	r2, r2, #1
 8000b62:	2afe      	cmp	r2, #254	; 0xfe
 8000b64:	d251      	bcs.n	8000c0a <__addsf3+0x136>
 8000b66:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000b6a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000b6e:	bf08      	it	eq
 8000b70:	f020 0001 	biceq.w	r0, r0, #1
 8000b74:	ea40 0003 	orr.w	r0, r0, r3
 8000b78:	4770      	bx	lr
 8000b7a:	0049      	lsls	r1, r1, #1
 8000b7c:	eb40 0000 	adc.w	r0, r0, r0
 8000b80:	3a01      	subs	r2, #1
 8000b82:	bf28      	it	cs
 8000b84:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000b88:	d2ed      	bcs.n	8000b66 <__addsf3+0x92>
 8000b8a:	fab0 fc80 	clz	ip, r0
 8000b8e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000b92:	ebb2 020c 	subs.w	r2, r2, ip
 8000b96:	fa00 f00c 	lsl.w	r0, r0, ip
 8000b9a:	bfaa      	itet	ge
 8000b9c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000ba0:	4252      	neglt	r2, r2
 8000ba2:	4318      	orrge	r0, r3
 8000ba4:	bfbc      	itt	lt
 8000ba6:	40d0      	lsrlt	r0, r2
 8000ba8:	4318      	orrlt	r0, r3
 8000baa:	4770      	bx	lr
 8000bac:	f092 0f00 	teq	r2, #0
 8000bb0:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000bb4:	bf06      	itte	eq
 8000bb6:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000bba:	3201      	addeq	r2, #1
 8000bbc:	3b01      	subne	r3, #1
 8000bbe:	e7b5      	b.n	8000b2c <__addsf3+0x58>
 8000bc0:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000bc4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000bc8:	bf18      	it	ne
 8000bca:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000bce:	d021      	beq.n	8000c14 <__addsf3+0x140>
 8000bd0:	ea92 0f03 	teq	r2, r3
 8000bd4:	d004      	beq.n	8000be0 <__addsf3+0x10c>
 8000bd6:	f092 0f00 	teq	r2, #0
 8000bda:	bf08      	it	eq
 8000bdc:	4608      	moveq	r0, r1
 8000bde:	4770      	bx	lr
 8000be0:	ea90 0f01 	teq	r0, r1
 8000be4:	bf1c      	itt	ne
 8000be6:	2000      	movne	r0, #0
 8000be8:	4770      	bxne	lr
 8000bea:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000bee:	d104      	bne.n	8000bfa <__addsf3+0x126>
 8000bf0:	0040      	lsls	r0, r0, #1
 8000bf2:	bf28      	it	cs
 8000bf4:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000bf8:	4770      	bx	lr
 8000bfa:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000bfe:	bf3c      	itt	cc
 8000c00:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000c04:	4770      	bxcc	lr
 8000c06:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000c0a:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000c0e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c12:	4770      	bx	lr
 8000c14:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000c18:	bf16      	itet	ne
 8000c1a:	4608      	movne	r0, r1
 8000c1c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000c20:	4601      	movne	r1, r0
 8000c22:	0242      	lsls	r2, r0, #9
 8000c24:	bf06      	itte	eq
 8000c26:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000c2a:	ea90 0f01 	teqeq	r0, r1
 8000c2e:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000c32:	4770      	bx	lr

08000c34 <__aeabi_ui2f>:
 8000c34:	f04f 0300 	mov.w	r3, #0
 8000c38:	e004      	b.n	8000c44 <__aeabi_i2f+0x8>
 8000c3a:	bf00      	nop

08000c3c <__aeabi_i2f>:
 8000c3c:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000c40:	bf48      	it	mi
 8000c42:	4240      	negmi	r0, r0
 8000c44:	ea5f 0c00 	movs.w	ip, r0
 8000c48:	bf08      	it	eq
 8000c4a:	4770      	bxeq	lr
 8000c4c:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000c50:	4601      	mov	r1, r0
 8000c52:	f04f 0000 	mov.w	r0, #0
 8000c56:	e01c      	b.n	8000c92 <__aeabi_l2f+0x2a>

08000c58 <__aeabi_ul2f>:
 8000c58:	ea50 0201 	orrs.w	r2, r0, r1
 8000c5c:	bf08      	it	eq
 8000c5e:	4770      	bxeq	lr
 8000c60:	f04f 0300 	mov.w	r3, #0
 8000c64:	e00a      	b.n	8000c7c <__aeabi_l2f+0x14>
 8000c66:	bf00      	nop

08000c68 <__aeabi_l2f>:
 8000c68:	ea50 0201 	orrs.w	r2, r0, r1
 8000c6c:	bf08      	it	eq
 8000c6e:	4770      	bxeq	lr
 8000c70:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000c74:	d502      	bpl.n	8000c7c <__aeabi_l2f+0x14>
 8000c76:	4240      	negs	r0, r0
 8000c78:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c7c:	ea5f 0c01 	movs.w	ip, r1
 8000c80:	bf02      	ittt	eq
 8000c82:	4684      	moveq	ip, r0
 8000c84:	4601      	moveq	r1, r0
 8000c86:	2000      	moveq	r0, #0
 8000c88:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000c8c:	bf08      	it	eq
 8000c8e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000c92:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000c96:	fabc f28c 	clz	r2, ip
 8000c9a:	3a08      	subs	r2, #8
 8000c9c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000ca0:	db10      	blt.n	8000cc4 <__aeabi_l2f+0x5c>
 8000ca2:	fa01 fc02 	lsl.w	ip, r1, r2
 8000ca6:	4463      	add	r3, ip
 8000ca8:	fa00 fc02 	lsl.w	ip, r0, r2
 8000cac:	f1c2 0220 	rsb	r2, r2, #32
 8000cb0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000cb4:	fa20 f202 	lsr.w	r2, r0, r2
 8000cb8:	eb43 0002 	adc.w	r0, r3, r2
 8000cbc:	bf08      	it	eq
 8000cbe:	f020 0001 	biceq.w	r0, r0, #1
 8000cc2:	4770      	bx	lr
 8000cc4:	f102 0220 	add.w	r2, r2, #32
 8000cc8:	fa01 fc02 	lsl.w	ip, r1, r2
 8000ccc:	f1c2 0220 	rsb	r2, r2, #32
 8000cd0:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000cd4:	fa21 f202 	lsr.w	r2, r1, r2
 8000cd8:	eb43 0002 	adc.w	r0, r3, r2
 8000cdc:	bf08      	it	eq
 8000cde:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000ce2:	4770      	bx	lr

08000ce4 <__aeabi_fmul>:
 8000ce4:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000ce8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000cec:	bf1e      	ittt	ne
 8000cee:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000cf2:	ea92 0f0c 	teqne	r2, ip
 8000cf6:	ea93 0f0c 	teqne	r3, ip
 8000cfa:	d06f      	beq.n	8000ddc <__aeabi_fmul+0xf8>
 8000cfc:	441a      	add	r2, r3
 8000cfe:	ea80 0c01 	eor.w	ip, r0, r1
 8000d02:	0240      	lsls	r0, r0, #9
 8000d04:	bf18      	it	ne
 8000d06:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000d0a:	d01e      	beq.n	8000d4a <__aeabi_fmul+0x66>
 8000d0c:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000d10:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000d14:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000d18:	fba0 3101 	umull	r3, r1, r0, r1
 8000d1c:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000d20:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000d24:	bf3e      	ittt	cc
 8000d26:	0049      	lslcc	r1, r1, #1
 8000d28:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000d2c:	005b      	lslcc	r3, r3, #1
 8000d2e:	ea40 0001 	orr.w	r0, r0, r1
 8000d32:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000d36:	2afd      	cmp	r2, #253	; 0xfd
 8000d38:	d81d      	bhi.n	8000d76 <__aeabi_fmul+0x92>
 8000d3a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000d3e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000d42:	bf08      	it	eq
 8000d44:	f020 0001 	biceq.w	r0, r0, #1
 8000d48:	4770      	bx	lr
 8000d4a:	f090 0f00 	teq	r0, #0
 8000d4e:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000d52:	bf08      	it	eq
 8000d54:	0249      	lsleq	r1, r1, #9
 8000d56:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000d5a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000d5e:	3a7f      	subs	r2, #127	; 0x7f
 8000d60:	bfc2      	ittt	gt
 8000d62:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000d66:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000d6a:	4770      	bxgt	lr
 8000d6c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000d70:	f04f 0300 	mov.w	r3, #0
 8000d74:	3a01      	subs	r2, #1
 8000d76:	dc5d      	bgt.n	8000e34 <__aeabi_fmul+0x150>
 8000d78:	f112 0f19 	cmn.w	r2, #25
 8000d7c:	bfdc      	itt	le
 8000d7e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000d82:	4770      	bxle	lr
 8000d84:	f1c2 0200 	rsb	r2, r2, #0
 8000d88:	0041      	lsls	r1, r0, #1
 8000d8a:	fa21 f102 	lsr.w	r1, r1, r2
 8000d8e:	f1c2 0220 	rsb	r2, r2, #32
 8000d92:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d96:	ea5f 0031 	movs.w	r0, r1, rrx
 8000d9a:	f140 0000 	adc.w	r0, r0, #0
 8000d9e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000da2:	bf08      	it	eq
 8000da4:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000da8:	4770      	bx	lr
 8000daa:	f092 0f00 	teq	r2, #0
 8000dae:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000db2:	bf02      	ittt	eq
 8000db4:	0040      	lsleq	r0, r0, #1
 8000db6:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000dba:	3a01      	subeq	r2, #1
 8000dbc:	d0f9      	beq.n	8000db2 <__aeabi_fmul+0xce>
 8000dbe:	ea40 000c 	orr.w	r0, r0, ip
 8000dc2:	f093 0f00 	teq	r3, #0
 8000dc6:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000dca:	bf02      	ittt	eq
 8000dcc:	0049      	lsleq	r1, r1, #1
 8000dce:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000dd2:	3b01      	subeq	r3, #1
 8000dd4:	d0f9      	beq.n	8000dca <__aeabi_fmul+0xe6>
 8000dd6:	ea41 010c 	orr.w	r1, r1, ip
 8000dda:	e78f      	b.n	8000cfc <__aeabi_fmul+0x18>
 8000ddc:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000de0:	ea92 0f0c 	teq	r2, ip
 8000de4:	bf18      	it	ne
 8000de6:	ea93 0f0c 	teqne	r3, ip
 8000dea:	d00a      	beq.n	8000e02 <__aeabi_fmul+0x11e>
 8000dec:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000df0:	bf18      	it	ne
 8000df2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000df6:	d1d8      	bne.n	8000daa <__aeabi_fmul+0xc6>
 8000df8:	ea80 0001 	eor.w	r0, r0, r1
 8000dfc:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000e00:	4770      	bx	lr
 8000e02:	f090 0f00 	teq	r0, #0
 8000e06:	bf17      	itett	ne
 8000e08:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000e0c:	4608      	moveq	r0, r1
 8000e0e:	f091 0f00 	teqne	r1, #0
 8000e12:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000e16:	d014      	beq.n	8000e42 <__aeabi_fmul+0x15e>
 8000e18:	ea92 0f0c 	teq	r2, ip
 8000e1c:	d101      	bne.n	8000e22 <__aeabi_fmul+0x13e>
 8000e1e:	0242      	lsls	r2, r0, #9
 8000e20:	d10f      	bne.n	8000e42 <__aeabi_fmul+0x15e>
 8000e22:	ea93 0f0c 	teq	r3, ip
 8000e26:	d103      	bne.n	8000e30 <__aeabi_fmul+0x14c>
 8000e28:	024b      	lsls	r3, r1, #9
 8000e2a:	bf18      	it	ne
 8000e2c:	4608      	movne	r0, r1
 8000e2e:	d108      	bne.n	8000e42 <__aeabi_fmul+0x15e>
 8000e30:	ea80 0001 	eor.w	r0, r0, r1
 8000e34:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000e38:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000e3c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000e40:	4770      	bx	lr
 8000e42:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000e46:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000e4a:	4770      	bx	lr

08000e4c <__aeabi_fdiv>:
 8000e4c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000e50:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000e54:	bf1e      	ittt	ne
 8000e56:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000e5a:	ea92 0f0c 	teqne	r2, ip
 8000e5e:	ea93 0f0c 	teqne	r3, ip
 8000e62:	d069      	beq.n	8000f38 <__aeabi_fdiv+0xec>
 8000e64:	eba2 0203 	sub.w	r2, r2, r3
 8000e68:	ea80 0c01 	eor.w	ip, r0, r1
 8000e6c:	0249      	lsls	r1, r1, #9
 8000e6e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000e72:	d037      	beq.n	8000ee4 <__aeabi_fdiv+0x98>
 8000e74:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000e78:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000e7c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000e80:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000e84:	428b      	cmp	r3, r1
 8000e86:	bf38      	it	cc
 8000e88:	005b      	lslcc	r3, r3, #1
 8000e8a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000e8e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000e92:	428b      	cmp	r3, r1
 8000e94:	bf24      	itt	cs
 8000e96:	1a5b      	subcs	r3, r3, r1
 8000e98:	ea40 000c 	orrcs.w	r0, r0, ip
 8000e9c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000ea0:	bf24      	itt	cs
 8000ea2:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000ea6:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000eaa:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000eae:	bf24      	itt	cs
 8000eb0:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000eb4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000eb8:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000ebc:	bf24      	itt	cs
 8000ebe:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000ec2:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000ec6:	011b      	lsls	r3, r3, #4
 8000ec8:	bf18      	it	ne
 8000eca:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000ece:	d1e0      	bne.n	8000e92 <__aeabi_fdiv+0x46>
 8000ed0:	2afd      	cmp	r2, #253	; 0xfd
 8000ed2:	f63f af50 	bhi.w	8000d76 <__aeabi_fmul+0x92>
 8000ed6:	428b      	cmp	r3, r1
 8000ed8:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000edc:	bf08      	it	eq
 8000ede:	f020 0001 	biceq.w	r0, r0, #1
 8000ee2:	4770      	bx	lr
 8000ee4:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000ee8:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000eec:	327f      	adds	r2, #127	; 0x7f
 8000eee:	bfc2      	ittt	gt
 8000ef0:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000ef4:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000ef8:	4770      	bxgt	lr
 8000efa:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000efe:	f04f 0300 	mov.w	r3, #0
 8000f02:	3a01      	subs	r2, #1
 8000f04:	e737      	b.n	8000d76 <__aeabi_fmul+0x92>
 8000f06:	f092 0f00 	teq	r2, #0
 8000f0a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000f0e:	bf02      	ittt	eq
 8000f10:	0040      	lsleq	r0, r0, #1
 8000f12:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000f16:	3a01      	subeq	r2, #1
 8000f18:	d0f9      	beq.n	8000f0e <__aeabi_fdiv+0xc2>
 8000f1a:	ea40 000c 	orr.w	r0, r0, ip
 8000f1e:	f093 0f00 	teq	r3, #0
 8000f22:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000f26:	bf02      	ittt	eq
 8000f28:	0049      	lsleq	r1, r1, #1
 8000f2a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000f2e:	3b01      	subeq	r3, #1
 8000f30:	d0f9      	beq.n	8000f26 <__aeabi_fdiv+0xda>
 8000f32:	ea41 010c 	orr.w	r1, r1, ip
 8000f36:	e795      	b.n	8000e64 <__aeabi_fdiv+0x18>
 8000f38:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000f3c:	ea92 0f0c 	teq	r2, ip
 8000f40:	d108      	bne.n	8000f54 <__aeabi_fdiv+0x108>
 8000f42:	0242      	lsls	r2, r0, #9
 8000f44:	f47f af7d 	bne.w	8000e42 <__aeabi_fmul+0x15e>
 8000f48:	ea93 0f0c 	teq	r3, ip
 8000f4c:	f47f af70 	bne.w	8000e30 <__aeabi_fmul+0x14c>
 8000f50:	4608      	mov	r0, r1
 8000f52:	e776      	b.n	8000e42 <__aeabi_fmul+0x15e>
 8000f54:	ea93 0f0c 	teq	r3, ip
 8000f58:	d104      	bne.n	8000f64 <__aeabi_fdiv+0x118>
 8000f5a:	024b      	lsls	r3, r1, #9
 8000f5c:	f43f af4c 	beq.w	8000df8 <__aeabi_fmul+0x114>
 8000f60:	4608      	mov	r0, r1
 8000f62:	e76e      	b.n	8000e42 <__aeabi_fmul+0x15e>
 8000f64:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000f68:	bf18      	it	ne
 8000f6a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000f6e:	d1ca      	bne.n	8000f06 <__aeabi_fdiv+0xba>
 8000f70:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8000f74:	f47f af5c 	bne.w	8000e30 <__aeabi_fmul+0x14c>
 8000f78:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8000f7c:	f47f af3c 	bne.w	8000df8 <__aeabi_fmul+0x114>
 8000f80:	e75f      	b.n	8000e42 <__aeabi_fmul+0x15e>
 8000f82:	bf00      	nop

08000f84 <__gesf2>:
 8000f84:	f04f 3cff 	mov.w	ip, #4294967295
 8000f88:	e006      	b.n	8000f98 <__cmpsf2+0x4>
 8000f8a:	bf00      	nop

08000f8c <__lesf2>:
 8000f8c:	f04f 0c01 	mov.w	ip, #1
 8000f90:	e002      	b.n	8000f98 <__cmpsf2+0x4>
 8000f92:	bf00      	nop

08000f94 <__cmpsf2>:
 8000f94:	f04f 0c01 	mov.w	ip, #1
 8000f98:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000f9c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000fa0:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000fa4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000fa8:	bf18      	it	ne
 8000faa:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000fae:	d011      	beq.n	8000fd4 <__cmpsf2+0x40>
 8000fb0:	b001      	add	sp, #4
 8000fb2:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8000fb6:	bf18      	it	ne
 8000fb8:	ea90 0f01 	teqne	r0, r1
 8000fbc:	bf58      	it	pl
 8000fbe:	ebb2 0003 	subspl.w	r0, r2, r3
 8000fc2:	bf88      	it	hi
 8000fc4:	17c8      	asrhi	r0, r1, #31
 8000fc6:	bf38      	it	cc
 8000fc8:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8000fcc:	bf18      	it	ne
 8000fce:	f040 0001 	orrne.w	r0, r0, #1
 8000fd2:	4770      	bx	lr
 8000fd4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000fd8:	d102      	bne.n	8000fe0 <__cmpsf2+0x4c>
 8000fda:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8000fde:	d105      	bne.n	8000fec <__cmpsf2+0x58>
 8000fe0:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8000fe4:	d1e4      	bne.n	8000fb0 <__cmpsf2+0x1c>
 8000fe6:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8000fea:	d0e1      	beq.n	8000fb0 <__cmpsf2+0x1c>
 8000fec:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ff0:	4770      	bx	lr
 8000ff2:	bf00      	nop

08000ff4 <__aeabi_cfrcmple>:
 8000ff4:	4684      	mov	ip, r0
 8000ff6:	4608      	mov	r0, r1
 8000ff8:	4661      	mov	r1, ip
 8000ffa:	e7ff      	b.n	8000ffc <__aeabi_cfcmpeq>

08000ffc <__aeabi_cfcmpeq>:
 8000ffc:	b50f      	push	{r0, r1, r2, r3, lr}
 8000ffe:	f7ff ffc9 	bl	8000f94 <__cmpsf2>
 8001002:	2800      	cmp	r0, #0
 8001004:	bf48      	it	mi
 8001006:	f110 0f00 	cmnmi.w	r0, #0
 800100a:	bd0f      	pop	{r0, r1, r2, r3, pc}

0800100c <__aeabi_fcmpeq>:
 800100c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001010:	f7ff fff4 	bl	8000ffc <__aeabi_cfcmpeq>
 8001014:	bf0c      	ite	eq
 8001016:	2001      	moveq	r0, #1
 8001018:	2000      	movne	r0, #0
 800101a:	f85d fb08 	ldr.w	pc, [sp], #8
 800101e:	bf00      	nop

08001020 <__aeabi_fcmplt>:
 8001020:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001024:	f7ff ffea 	bl	8000ffc <__aeabi_cfcmpeq>
 8001028:	bf34      	ite	cc
 800102a:	2001      	movcc	r0, #1
 800102c:	2000      	movcs	r0, #0
 800102e:	f85d fb08 	ldr.w	pc, [sp], #8
 8001032:	bf00      	nop

08001034 <__aeabi_fcmple>:
 8001034:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001038:	f7ff ffe0 	bl	8000ffc <__aeabi_cfcmpeq>
 800103c:	bf94      	ite	ls
 800103e:	2001      	movls	r0, #1
 8001040:	2000      	movhi	r0, #0
 8001042:	f85d fb08 	ldr.w	pc, [sp], #8
 8001046:	bf00      	nop

08001048 <__aeabi_fcmpge>:
 8001048:	f84d ed08 	str.w	lr, [sp, #-8]!
 800104c:	f7ff ffd2 	bl	8000ff4 <__aeabi_cfrcmple>
 8001050:	bf94      	ite	ls
 8001052:	2001      	movls	r0, #1
 8001054:	2000      	movhi	r0, #0
 8001056:	f85d fb08 	ldr.w	pc, [sp], #8
 800105a:	bf00      	nop

0800105c <__aeabi_fcmpgt>:
 800105c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001060:	f7ff ffc8 	bl	8000ff4 <__aeabi_cfrcmple>
 8001064:	bf34      	ite	cc
 8001066:	2001      	movcc	r0, #1
 8001068:	2000      	movcs	r0, #0
 800106a:	f85d fb08 	ldr.w	pc, [sp], #8
 800106e:	bf00      	nop

08001070 <__aeabi_f2iz>:
 8001070:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001074:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8001078:	d30f      	bcc.n	800109a <__aeabi_f2iz+0x2a>
 800107a:	f04f 039e 	mov.w	r3, #158	; 0x9e
 800107e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8001082:	d90d      	bls.n	80010a0 <__aeabi_f2iz+0x30>
 8001084:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8001088:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800108c:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8001090:	fa23 f002 	lsr.w	r0, r3, r2
 8001094:	bf18      	it	ne
 8001096:	4240      	negne	r0, r0
 8001098:	4770      	bx	lr
 800109a:	f04f 0000 	mov.w	r0, #0
 800109e:	4770      	bx	lr
 80010a0:	f112 0f61 	cmn.w	r2, #97	; 0x61
 80010a4:	d101      	bne.n	80010aa <__aeabi_f2iz+0x3a>
 80010a6:	0242      	lsls	r2, r0, #9
 80010a8:	d105      	bne.n	80010b6 <__aeabi_f2iz+0x46>
 80010aa:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 80010ae:	bf08      	it	eq
 80010b0:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 80010b4:	4770      	bx	lr
 80010b6:	f04f 0000 	mov.w	r0, #0
 80010ba:	4770      	bx	lr

080010bc <MX_ADC1_Init>:
ADC_HandleTypeDef hadc1;
DMA_HandleTypeDef hdma_adc1;

/* ADC1 init function */
void MX_ADC1_Init(void)
{
 80010bc:	b580      	push	{r7, lr}
 80010be:	b084      	sub	sp, #16
 80010c0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80010c2:	1d3b      	adds	r3, r7, #4
 80010c4:	2200      	movs	r2, #0
 80010c6:	601a      	str	r2, [r3, #0]
 80010c8:	605a      	str	r2, [r3, #4]
 80010ca:	609a      	str	r2, [r3, #8]

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 80010cc:	4b2e      	ldr	r3, [pc, #184]	; (8001188 <MX_ADC1_Init+0xcc>)
 80010ce:	4a2f      	ldr	r2, [pc, #188]	; (800118c <MX_ADC1_Init+0xd0>)
 80010d0:	601a      	str	r2, [r3, #0]
  hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 80010d2:	4b2d      	ldr	r3, [pc, #180]	; (8001188 <MX_ADC1_Init+0xcc>)
 80010d4:	f44f 7280 	mov.w	r2, #256	; 0x100
 80010d8:	609a      	str	r2, [r3, #8]
  hadc1.Init.ContinuousConvMode = ENABLE;
 80010da:	4b2b      	ldr	r3, [pc, #172]	; (8001188 <MX_ADC1_Init+0xcc>)
 80010dc:	2201      	movs	r2, #1
 80010de:	731a      	strb	r2, [r3, #12]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80010e0:	4b29      	ldr	r3, [pc, #164]	; (8001188 <MX_ADC1_Init+0xcc>)
 80010e2:	2200      	movs	r2, #0
 80010e4:	751a      	strb	r2, [r3, #20]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80010e6:	4b28      	ldr	r3, [pc, #160]	; (8001188 <MX_ADC1_Init+0xcc>)
 80010e8:	f44f 2260 	mov.w	r2, #917504	; 0xe0000
 80010ec:	61da      	str	r2, [r3, #28]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80010ee:	4b26      	ldr	r3, [pc, #152]	; (8001188 <MX_ADC1_Init+0xcc>)
 80010f0:	2200      	movs	r2, #0
 80010f2:	605a      	str	r2, [r3, #4]
  hadc1.Init.NbrOfConversion = 4;
 80010f4:	4b24      	ldr	r3, [pc, #144]	; (8001188 <MX_ADC1_Init+0xcc>)
 80010f6:	2204      	movs	r2, #4
 80010f8:	611a      	str	r2, [r3, #16]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80010fa:	4823      	ldr	r0, [pc, #140]	; (8001188 <MX_ADC1_Init+0xcc>)
 80010fc:	f003 f812 	bl	8004124 <HAL_ADC_Init>
 8001100:	4603      	mov	r3, r0
 8001102:	2b00      	cmp	r3, #0
 8001104:	d001      	beq.n	800110a <MX_ADC1_Init+0x4e>
  {
    Error_Handler();
 8001106:	f002 fb19 	bl	800373c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_0;
 800110a:	2300      	movs	r3, #0
 800110c:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 800110e:	2301      	movs	r3, #1
 8001110:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_28CYCLES_5;
 8001112:	2303      	movs	r3, #3
 8001114:	60fb      	str	r3, [r7, #12]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001116:	1d3b      	adds	r3, r7, #4
 8001118:	4619      	mov	r1, r3
 800111a:	481b      	ldr	r0, [pc, #108]	; (8001188 <MX_ADC1_Init+0xcc>)
 800111c:	f003 f9ca 	bl	80044b4 <HAL_ADC_ConfigChannel>
 8001120:	4603      	mov	r3, r0
 8001122:	2b00      	cmp	r3, #0
 8001124:	d001      	beq.n	800112a <MX_ADC1_Init+0x6e>
  {
    Error_Handler();
 8001126:	f002 fb09 	bl	800373c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_1;
 800112a:	2301      	movs	r3, #1
 800112c:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_2;
 800112e:	2302      	movs	r3, #2
 8001130:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001132:	1d3b      	adds	r3, r7, #4
 8001134:	4619      	mov	r1, r3
 8001136:	4814      	ldr	r0, [pc, #80]	; (8001188 <MX_ADC1_Init+0xcc>)
 8001138:	f003 f9bc 	bl	80044b4 <HAL_ADC_ConfigChannel>
 800113c:	4603      	mov	r3, r0
 800113e:	2b00      	cmp	r3, #0
 8001140:	d001      	beq.n	8001146 <MX_ADC1_Init+0x8a>
  {
    Error_Handler();
 8001142:	f002 fafb 	bl	800373c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_2;
 8001146:	2302      	movs	r3, #2
 8001148:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_3;
 800114a:	2303      	movs	r3, #3
 800114c:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800114e:	1d3b      	adds	r3, r7, #4
 8001150:	4619      	mov	r1, r3
 8001152:	480d      	ldr	r0, [pc, #52]	; (8001188 <MX_ADC1_Init+0xcc>)
 8001154:	f003 f9ae 	bl	80044b4 <HAL_ADC_ConfigChannel>
 8001158:	4603      	mov	r3, r0
 800115a:	2b00      	cmp	r3, #0
 800115c:	d001      	beq.n	8001162 <MX_ADC1_Init+0xa6>
  {
    Error_Handler();
 800115e:	f002 faed 	bl	800373c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_3;
 8001162:	2303      	movs	r3, #3
 8001164:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_4;
 8001166:	2304      	movs	r3, #4
 8001168:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800116a:	1d3b      	adds	r3, r7, #4
 800116c:	4619      	mov	r1, r3
 800116e:	4806      	ldr	r0, [pc, #24]	; (8001188 <MX_ADC1_Init+0xcc>)
 8001170:	f003 f9a0 	bl	80044b4 <HAL_ADC_ConfigChannel>
 8001174:	4603      	mov	r3, r0
 8001176:	2b00      	cmp	r3, #0
 8001178:	d001      	beq.n	800117e <MX_ADC1_Init+0xc2>
  {
    Error_Handler();
 800117a:	f002 fadf 	bl	800373c <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 800117e:	bf00      	nop
 8001180:	3710      	adds	r7, #16
 8001182:	46bd      	mov	sp, r7
 8001184:	bd80      	pop	{r7, pc}
 8001186:	bf00      	nop
 8001188:	200000c8 	.word	0x200000c8
 800118c:	40012400 	.word	0x40012400

08001190 <HAL_ADC_MspInit>:

void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 8001190:	b580      	push	{r7, lr}
 8001192:	b088      	sub	sp, #32
 8001194:	af00      	add	r7, sp, #0
 8001196:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001198:	f107 0310 	add.w	r3, r7, #16
 800119c:	2200      	movs	r2, #0
 800119e:	601a      	str	r2, [r3, #0]
 80011a0:	605a      	str	r2, [r3, #4]
 80011a2:	609a      	str	r2, [r3, #8]
 80011a4:	60da      	str	r2, [r3, #12]
  if(adcHandle->Instance==ADC1)
 80011a6:	687b      	ldr	r3, [r7, #4]
 80011a8:	681b      	ldr	r3, [r3, #0]
 80011aa:	4a28      	ldr	r2, [pc, #160]	; (800124c <HAL_ADC_MspInit+0xbc>)
 80011ac:	4293      	cmp	r3, r2
 80011ae:	d149      	bne.n	8001244 <HAL_ADC_MspInit+0xb4>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* ADC1 clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80011b0:	4b27      	ldr	r3, [pc, #156]	; (8001250 <HAL_ADC_MspInit+0xc0>)
 80011b2:	699b      	ldr	r3, [r3, #24]
 80011b4:	4a26      	ldr	r2, [pc, #152]	; (8001250 <HAL_ADC_MspInit+0xc0>)
 80011b6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80011ba:	6193      	str	r3, [r2, #24]
 80011bc:	4b24      	ldr	r3, [pc, #144]	; (8001250 <HAL_ADC_MspInit+0xc0>)
 80011be:	699b      	ldr	r3, [r3, #24]
 80011c0:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80011c4:	60fb      	str	r3, [r7, #12]
 80011c6:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80011c8:	4b21      	ldr	r3, [pc, #132]	; (8001250 <HAL_ADC_MspInit+0xc0>)
 80011ca:	699b      	ldr	r3, [r3, #24]
 80011cc:	4a20      	ldr	r2, [pc, #128]	; (8001250 <HAL_ADC_MspInit+0xc0>)
 80011ce:	f043 0304 	orr.w	r3, r3, #4
 80011d2:	6193      	str	r3, [r2, #24]
 80011d4:	4b1e      	ldr	r3, [pc, #120]	; (8001250 <HAL_ADC_MspInit+0xc0>)
 80011d6:	699b      	ldr	r3, [r3, #24]
 80011d8:	f003 0304 	and.w	r3, r3, #4
 80011dc:	60bb      	str	r3, [r7, #8]
 80011de:	68bb      	ldr	r3, [r7, #8]
    PA0-WKUP     ------> ADC1_IN0
    PA1     ------> ADC1_IN1
    PA2     ------> ADC1_IN2
    PA3     ------> ADC1_IN3
    */
    GPIO_InitStruct.Pin = CNY70_Pin|SHARP_D_Pin|SHARP_C_Pin|SHARP_I_Pin;
 80011e0:	230f      	movs	r3, #15
 80011e2:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80011e4:	2303      	movs	r3, #3
 80011e6:	617b      	str	r3, [r7, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80011e8:	f107 0310 	add.w	r3, r7, #16
 80011ec:	4619      	mov	r1, r3
 80011ee:	4819      	ldr	r0, [pc, #100]	; (8001254 <HAL_ADC_MspInit+0xc4>)
 80011f0:	f003 ff06 	bl	8005000 <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA1_Channel1;
 80011f4:	4b18      	ldr	r3, [pc, #96]	; (8001258 <HAL_ADC_MspInit+0xc8>)
 80011f6:	4a19      	ldr	r2, [pc, #100]	; (800125c <HAL_ADC_MspInit+0xcc>)
 80011f8:	601a      	str	r2, [r3, #0]
    hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80011fa:	4b17      	ldr	r3, [pc, #92]	; (8001258 <HAL_ADC_MspInit+0xc8>)
 80011fc:	2200      	movs	r2, #0
 80011fe:	605a      	str	r2, [r3, #4]
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 8001200:	4b15      	ldr	r3, [pc, #84]	; (8001258 <HAL_ADC_MspInit+0xc8>)
 8001202:	2200      	movs	r2, #0
 8001204:	609a      	str	r2, [r3, #8]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 8001206:	4b14      	ldr	r3, [pc, #80]	; (8001258 <HAL_ADC_MspInit+0xc8>)
 8001208:	2280      	movs	r2, #128	; 0x80
 800120a:	60da      	str	r2, [r3, #12]
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 800120c:	4b12      	ldr	r3, [pc, #72]	; (8001258 <HAL_ADC_MspInit+0xc8>)
 800120e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001212:	611a      	str	r2, [r3, #16]
    hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 8001214:	4b10      	ldr	r3, [pc, #64]	; (8001258 <HAL_ADC_MspInit+0xc8>)
 8001216:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800121a:	615a      	str	r2, [r3, #20]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 800121c:	4b0e      	ldr	r3, [pc, #56]	; (8001258 <HAL_ADC_MspInit+0xc8>)
 800121e:	2220      	movs	r2, #32
 8001220:	619a      	str	r2, [r3, #24]
    hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 8001222:	4b0d      	ldr	r3, [pc, #52]	; (8001258 <HAL_ADC_MspInit+0xc8>)
 8001224:	2200      	movs	r2, #0
 8001226:	61da      	str	r2, [r3, #28]
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 8001228:	480b      	ldr	r0, [pc, #44]	; (8001258 <HAL_ADC_MspInit+0xc8>)
 800122a:	f003 fc4b 	bl	8004ac4 <HAL_DMA_Init>
 800122e:	4603      	mov	r3, r0
 8001230:	2b00      	cmp	r3, #0
 8001232:	d001      	beq.n	8001238 <HAL_ADC_MspInit+0xa8>
    {
      Error_Handler();
 8001234:	f002 fa82 	bl	800373c <Error_Handler>
    }

    __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 8001238:	687b      	ldr	r3, [r7, #4]
 800123a:	4a07      	ldr	r2, [pc, #28]	; (8001258 <HAL_ADC_MspInit+0xc8>)
 800123c:	621a      	str	r2, [r3, #32]
 800123e:	4a06      	ldr	r2, [pc, #24]	; (8001258 <HAL_ADC_MspInit+0xc8>)
 8001240:	687b      	ldr	r3, [r7, #4]
 8001242:	6253      	str	r3, [r2, #36]	; 0x24

  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }
}
 8001244:	bf00      	nop
 8001246:	3720      	adds	r7, #32
 8001248:	46bd      	mov	sp, r7
 800124a:	bd80      	pop	{r7, pc}
 800124c:	40012400 	.word	0x40012400
 8001250:	40021000 	.word	0x40021000
 8001254:	40010800 	.word	0x40010800
 8001258:	200000f8 	.word	0x200000f8
 800125c:	40020008 	.word	0x40020008

08001260 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
void MX_DMA_Init(void)
{
 8001260:	b580      	push	{r7, lr}
 8001262:	b082      	sub	sp, #8
 8001264:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001266:	4b0c      	ldr	r3, [pc, #48]	; (8001298 <MX_DMA_Init+0x38>)
 8001268:	695b      	ldr	r3, [r3, #20]
 800126a:	4a0b      	ldr	r2, [pc, #44]	; (8001298 <MX_DMA_Init+0x38>)
 800126c:	f043 0301 	orr.w	r3, r3, #1
 8001270:	6153      	str	r3, [r2, #20]
 8001272:	4b09      	ldr	r3, [pc, #36]	; (8001298 <MX_DMA_Init+0x38>)
 8001274:	695b      	ldr	r3, [r3, #20]
 8001276:	f003 0301 	and.w	r3, r3, #1
 800127a:	607b      	str	r3, [r7, #4]
 800127c:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Channel1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 800127e:	2200      	movs	r2, #0
 8001280:	2100      	movs	r1, #0
 8001282:	200b      	movs	r0, #11
 8001284:	f003 fbe7 	bl	8004a56 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 8001288:	200b      	movs	r0, #11
 800128a:	f003 fc00 	bl	8004a8e <HAL_NVIC_EnableIRQ>

}
 800128e:	bf00      	nop
 8001290:	3708      	adds	r7, #8
 8001292:	46bd      	mov	sp, r7
 8001294:	bd80      	pop	{r7, pc}
 8001296:	bf00      	nop
 8001298:	40021000 	.word	0x40021000

0800129c <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 800129c:	b580      	push	{r7, lr}
 800129e:	b088      	sub	sp, #32
 80012a0:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012a2:	f107 0310 	add.w	r3, r7, #16
 80012a6:	2200      	movs	r2, #0
 80012a8:	601a      	str	r2, [r3, #0]
 80012aa:	605a      	str	r2, [r3, #4]
 80012ac:	609a      	str	r2, [r3, #8]
 80012ae:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80012b0:	4b3f      	ldr	r3, [pc, #252]	; (80013b0 <MX_GPIO_Init+0x114>)
 80012b2:	699b      	ldr	r3, [r3, #24]
 80012b4:	4a3e      	ldr	r2, [pc, #248]	; (80013b0 <MX_GPIO_Init+0x114>)
 80012b6:	f043 0310 	orr.w	r3, r3, #16
 80012ba:	6193      	str	r3, [r2, #24]
 80012bc:	4b3c      	ldr	r3, [pc, #240]	; (80013b0 <MX_GPIO_Init+0x114>)
 80012be:	699b      	ldr	r3, [r3, #24]
 80012c0:	f003 0310 	and.w	r3, r3, #16
 80012c4:	60fb      	str	r3, [r7, #12]
 80012c6:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80012c8:	4b39      	ldr	r3, [pc, #228]	; (80013b0 <MX_GPIO_Init+0x114>)
 80012ca:	699b      	ldr	r3, [r3, #24]
 80012cc:	4a38      	ldr	r2, [pc, #224]	; (80013b0 <MX_GPIO_Init+0x114>)
 80012ce:	f043 0320 	orr.w	r3, r3, #32
 80012d2:	6193      	str	r3, [r2, #24]
 80012d4:	4b36      	ldr	r3, [pc, #216]	; (80013b0 <MX_GPIO_Init+0x114>)
 80012d6:	699b      	ldr	r3, [r3, #24]
 80012d8:	f003 0320 	and.w	r3, r3, #32
 80012dc:	60bb      	str	r3, [r7, #8]
 80012de:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80012e0:	4b33      	ldr	r3, [pc, #204]	; (80013b0 <MX_GPIO_Init+0x114>)
 80012e2:	699b      	ldr	r3, [r3, #24]
 80012e4:	4a32      	ldr	r2, [pc, #200]	; (80013b0 <MX_GPIO_Init+0x114>)
 80012e6:	f043 0304 	orr.w	r3, r3, #4
 80012ea:	6193      	str	r3, [r2, #24]
 80012ec:	4b30      	ldr	r3, [pc, #192]	; (80013b0 <MX_GPIO_Init+0x114>)
 80012ee:	699b      	ldr	r3, [r3, #24]
 80012f0:	f003 0304 	and.w	r3, r3, #4
 80012f4:	607b      	str	r3, [r7, #4]
 80012f6:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80012f8:	4b2d      	ldr	r3, [pc, #180]	; (80013b0 <MX_GPIO_Init+0x114>)
 80012fa:	699b      	ldr	r3, [r3, #24]
 80012fc:	4a2c      	ldr	r2, [pc, #176]	; (80013b0 <MX_GPIO_Init+0x114>)
 80012fe:	f043 0308 	orr.w	r3, r3, #8
 8001302:	6193      	str	r3, [r2, #24]
 8001304:	4b2a      	ldr	r3, [pc, #168]	; (80013b0 <MX_GPIO_Init+0x114>)
 8001306:	699b      	ldr	r3, [r3, #24]
 8001308:	f003 0308 	and.w	r3, r3, #8
 800130c:	603b      	str	r3, [r7, #0]
 800130e:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 8001310:	2200      	movs	r2, #0
 8001312:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001316:	4827      	ldr	r0, [pc, #156]	; (80013b4 <MX_GPIO_Init+0x118>)
 8001318:	f004 f80d 	bl	8005336 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED_Pin|AIN1_Pin|AIN2_Pin, GPIO_PIN_RESET);
 800131c:	2200      	movs	r2, #0
 800131e:	f248 0118 	movw	r1, #32792	; 0x8018
 8001322:	4825      	ldr	r0, [pc, #148]	; (80013b8 <MX_GPIO_Init+0x11c>)
 8001324:	f004 f807 	bl	8005336 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, BIN2_Pin|BIN1_Pin|STBY_Pin, GPIO_PIN_RESET);
 8001328:	2200      	movs	r2, #0
 800132a:	f44f 4118 	mov.w	r1, #38912	; 0x9800
 800132e:	4823      	ldr	r0, [pc, #140]	; (80013bc <MX_GPIO_Init+0x120>)
 8001330:	f004 f801 	bl	8005336 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 8001334:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001338:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800133a:	2301      	movs	r3, #1
 800133c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800133e:	2300      	movs	r3, #0
 8001340:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001342:	2302      	movs	r3, #2
 8001344:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001346:	f107 0310 	add.w	r3, r7, #16
 800134a:	4619      	mov	r1, r3
 800134c:	4819      	ldr	r0, [pc, #100]	; (80013b4 <MX_GPIO_Init+0x118>)
 800134e:	f003 fe57 	bl	8005000 <HAL_GPIO_Init>

  /*Configure GPIO pins : PBPin PBPin PBPin */
  GPIO_InitStruct.Pin = BTN1_Pin|BTN2_Pin|BTN3_Pin;
 8001352:	f44f 43e0 	mov.w	r3, #28672	; 0x7000
 8001356:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001358:	2300      	movs	r3, #0
 800135a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800135c:	2300      	movs	r3, #0
 800135e:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001360:	f107 0310 	add.w	r3, r7, #16
 8001364:	4619      	mov	r1, r3
 8001366:	4814      	ldr	r0, [pc, #80]	; (80013b8 <MX_GPIO_Init+0x11c>)
 8001368:	f003 fe4a 	bl	8005000 <HAL_GPIO_Init>

  /*Configure GPIO pins : PBPin PBPin PBPin */
  GPIO_InitStruct.Pin = LED_Pin|AIN1_Pin|AIN2_Pin;
 800136c:	f248 0318 	movw	r3, #32792	; 0x8018
 8001370:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001372:	2301      	movs	r3, #1
 8001374:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001376:	2300      	movs	r3, #0
 8001378:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800137a:	2302      	movs	r3, #2
 800137c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800137e:	f107 0310 	add.w	r3, r7, #16
 8001382:	4619      	mov	r1, r3
 8001384:	480c      	ldr	r0, [pc, #48]	; (80013b8 <MX_GPIO_Init+0x11c>)
 8001386:	f003 fe3b 	bl	8005000 <HAL_GPIO_Init>

  /*Configure GPIO pins : PAPin PAPin PAPin */
  GPIO_InitStruct.Pin = BIN2_Pin|BIN1_Pin|STBY_Pin;
 800138a:	f44f 4318 	mov.w	r3, #38912	; 0x9800
 800138e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001390:	2301      	movs	r3, #1
 8001392:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001394:	2300      	movs	r3, #0
 8001396:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001398:	2302      	movs	r3, #2
 800139a:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800139c:	f107 0310 	add.w	r3, r7, #16
 80013a0:	4619      	mov	r1, r3
 80013a2:	4806      	ldr	r0, [pc, #24]	; (80013bc <MX_GPIO_Init+0x120>)
 80013a4:	f003 fe2c 	bl	8005000 <HAL_GPIO_Init>

}
 80013a8:	bf00      	nop
 80013aa:	3720      	adds	r7, #32
 80013ac:	46bd      	mov	sp, r7
 80013ae:	bd80      	pop	{r7, pc}
 80013b0:	40021000 	.word	0x40021000
 80013b4:	40011000 	.word	0x40011000
 80013b8:	40010c00 	.word	0x40010c00
 80013bc:	40010800 	.word	0x40010800

080013c0 <main>:

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void) {
 80013c0:	b580      	push	{r7, lr}
 80013c2:	af00      	add	r7, sp, #0
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 80013c4:	f002 fe4c 	bl	8004060 <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 80013c8:	f000 f898 	bl	80014fc <SystemClock_Config>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 80013cc:	f7ff ff66 	bl	800129c <MX_GPIO_Init>
	MX_DMA_Init();
 80013d0:	f7ff ff46 	bl	8001260 <MX_DMA_Init>
	MX_TIM4_Init();
 80013d4:	f002 fc72 	bl	8003cbc <MX_TIM4_Init>
	MX_TIM3_Init();
 80013d8:	f002 fc1c 	bl	8003c14 <MX_TIM3_Init>
	MX_ADC1_Init();
 80013dc:	f7ff fe6e 	bl	80010bc <MX_ADC1_Init>
	MX_USART1_UART_Init();
 80013e0:	f002 fd9a 	bl	8003f18 <MX_USART1_UART_Init>
	MX_TIM2_Init();
 80013e4:	f002 fbb2 	bl	8003b4c <MX_TIM2_Init>
	/* USER CODE BEGIN 2 */
	btns[0].Port = BTN1_GPIO_Port;
 80013e8:	4b39      	ldr	r3, [pc, #228]	; (80014d0 <main+0x110>)
 80013ea:	4a3a      	ldr	r2, [pc, #232]	; (80014d4 <main+0x114>)
 80013ec:	601a      	str	r2, [r3, #0]
	btns[0].pin = BTN1_Pin;
 80013ee:	4b38      	ldr	r3, [pc, #224]	; (80014d0 <main+0x110>)
 80013f0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80013f4:	809a      	strh	r2, [r3, #4]
	btns[0].estado = ESPERA;
 80013f6:	4b36      	ldr	r3, [pc, #216]	; (80014d0 <main+0x110>)
 80013f8:	2200      	movs	r2, #0
 80013fa:	609a      	str	r2, [r3, #8]
	btns[0].flag = 0;
 80013fc:	4b34      	ldr	r3, [pc, #208]	; (80014d0 <main+0x110>)
 80013fe:	2200      	movs	r2, #0
 8001400:	60da      	str	r2, [r3, #12]
	btns[1].Port = BTN2_GPIO_Port;
 8001402:	4b33      	ldr	r3, [pc, #204]	; (80014d0 <main+0x110>)
 8001404:	4a33      	ldr	r2, [pc, #204]	; (80014d4 <main+0x114>)
 8001406:	611a      	str	r2, [r3, #16]
	btns[1].pin = BTN2_Pin;
 8001408:	4b31      	ldr	r3, [pc, #196]	; (80014d0 <main+0x110>)
 800140a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800140e:	829a      	strh	r2, [r3, #20]
	btns[1].estado = ESPERA;
 8001410:	4b2f      	ldr	r3, [pc, #188]	; (80014d0 <main+0x110>)
 8001412:	2200      	movs	r2, #0
 8001414:	619a      	str	r2, [r3, #24]
	btns[1].flag = 0;
 8001416:	4b2e      	ldr	r3, [pc, #184]	; (80014d0 <main+0x110>)
 8001418:	2200      	movs	r2, #0
 800141a:	61da      	str	r2, [r3, #28]
	btns[2].Port = BTN3_GPIO_Port;
 800141c:	4b2c      	ldr	r3, [pc, #176]	; (80014d0 <main+0x110>)
 800141e:	4a2d      	ldr	r2, [pc, #180]	; (80014d4 <main+0x114>)
 8001420:	621a      	str	r2, [r3, #32]
	btns[2].pin = BTN3_Pin;
 8001422:	4b2b      	ldr	r3, [pc, #172]	; (80014d0 <main+0x110>)
 8001424:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8001428:	849a      	strh	r2, [r3, #36]	; 0x24
	btns[2].estado = ESPERA;
 800142a:	4b29      	ldr	r3, [pc, #164]	; (80014d0 <main+0x110>)
 800142c:	2200      	movs	r2, #0
 800142e:	629a      	str	r2, [r3, #40]	; 0x28
	btns[2].flag = 0;
 8001430:	4b27      	ldr	r3, [pc, #156]	; (80014d0 <main+0x110>)
 8001432:	2200      	movs	r2, #0
 8001434:	62da      	str	r2, [r3, #44]	; 0x2c
	HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);
 8001436:	2108      	movs	r1, #8
 8001438:	4827      	ldr	r0, [pc, #156]	; (80014d8 <main+0x118>)
 800143a:	f004 fcb5 	bl	8005da8 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_4);
 800143e:	210c      	movs	r1, #12
 8001440:	4825      	ldr	r0, [pc, #148]	; (80014d8 <main+0x118>)
 8001442:	f004 fcb1 	bl	8005da8 <HAL_TIM_PWM_Start>
	HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_ALL);
 8001446:	213c      	movs	r1, #60	; 0x3c
 8001448:	4824      	ldr	r0, [pc, #144]	; (80014dc <main+0x11c>)
 800144a:	f004 fdf1 	bl	8006030 <HAL_TIM_Encoder_Start>
	HAL_TIM_Encoder_Start(&htim3, TIM_CHANNEL_ALL);
 800144e:	213c      	movs	r1, #60	; 0x3c
 8001450:	4823      	ldr	r0, [pc, #140]	; (80014e0 <main+0x120>)
 8001452:	f004 fded 	bl	8006030 <HAL_TIM_Encoder_Start>
	HAL_GPIO_WritePin(STBY, GPIO_PIN_SET);
 8001456:	2201      	movs	r2, #1
 8001458:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800145c:	4821      	ldr	r0, [pc, #132]	; (80014e4 <main+0x124>)
 800145e:	f003 ff6a 	bl	8005336 <HAL_GPIO_WritePin>
	TIM2->CCR3 = 15000;
 8001462:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001466:	f643 2298 	movw	r2, #15000	; 0x3a98
 800146a:	63da      	str	r2, [r3, #60]	; 0x3c
	TIM2->CCR4 = 15000;
 800146c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001470:	f643 2298 	movw	r2, #15000	; 0x3a98
 8001474:	641a      	str	r2, [r3, #64]	; 0x40
	HAL_ADC_Start_DMA(&hadc1, (uint32_t*) adc_buf, ADC_BUF_LEN);
 8001476:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800147a:	491b      	ldr	r1, [pc, #108]	; (80014e8 <main+0x128>)
 800147c:	481b      	ldr	r0, [pc, #108]	; (80014ec <main+0x12c>)
 800147e:	f002 ff29 	bl	80042d4 <HAL_ADC_Start_DMA>
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, 0);
 8001482:	2200      	movs	r2, #0
 8001484:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001488:	4819      	ldr	r0, [pc, #100]	; (80014f0 <main+0x130>)
 800148a:	f003 ff54 	bl	8005336 <HAL_GPIO_WritePin>
	TIM3->CNT = 0;
 800148e:	4b19      	ldr	r3, [pc, #100]	; (80014f4 <main+0x134>)
 8001490:	2200      	movs	r2, #0
 8001492:	625a      	str	r2, [r3, #36]	; 0x24
	TIM4->CNT = 0;
 8001494:	4b18      	ldr	r3, [pc, #96]	; (80014f8 <main+0x138>)
 8001496:	2200      	movs	r2, #0
 8001498:	625a      	str	r2, [r3, #36]	; 0x24
	/* USER CODE BEGIN WHILE */
	while (1) {
		/* USER CODE END WHILE */

		/* USER CODE BEGIN 3 */
		mainMachine();
 800149a:	f000 f8fb 	bl	8001694 <mainMachine>
		intUartSend((int) calcularDistancia(TIM3->CNT) >> 1);
 800149e:	4b15      	ldr	r3, [pc, #84]	; (80014f4 <main+0x134>)
 80014a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80014a2:	4618      	mov	r0, r3
 80014a4:	f002 f950 	bl	8003748 <calcularDistancia>
 80014a8:	4603      	mov	r3, r0
 80014aa:	4618      	mov	r0, r3
 80014ac:	f7ff fde0 	bl	8001070 <__aeabi_f2iz>
 80014b0:	4603      	mov	r3, r0
 80014b2:	105b      	asrs	r3, r3, #1
 80014b4:	4618      	mov	r0, r3
 80014b6:	f000 f87d 	bl	80015b4 <intUartSend>
		btnMachine(0);
 80014ba:	2000      	movs	r0, #0
 80014bc:	f002 f892 	bl	80035e4 <btnMachine>
		btnMachine(1);
 80014c0:	2001      	movs	r0, #1
 80014c2:	f002 f88f 	bl	80035e4 <btnMachine>
		btnMachine(2);
 80014c6:	2002      	movs	r0, #2
 80014c8:	f002 f88c 	bl	80035e4 <btnMachine>
		mainMachine();
 80014cc:	e7e5      	b.n	800149a <main+0xda>
 80014ce:	bf00      	nop
 80014d0:	2000125c 	.word	0x2000125c
 80014d4:	40010c00 	.word	0x40010c00
 80014d8:	20002aec 	.word	0x20002aec
 80014dc:	20002b7c 	.word	0x20002b7c
 80014e0:	20002b34 	.word	0x20002b34
 80014e4:	40010800 	.word	0x40010800
 80014e8:	2000013c 	.word	0x2000013c
 80014ec:	200000c8 	.word	0x200000c8
 80014f0:	40011000 	.word	0x40011000
 80014f4:	40000400 	.word	0x40000400
 80014f8:	40000800 	.word	0x40000800

080014fc <SystemClock_Config>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 80014fc:	b580      	push	{r7, lr}
 80014fe:	b094      	sub	sp, #80	; 0x50
 8001500:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 8001502:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001506:	2228      	movs	r2, #40	; 0x28
 8001508:	2100      	movs	r1, #0
 800150a:	4618      	mov	r0, r3
 800150c:	f006 fd2c 	bl	8007f68 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 8001510:	f107 0314 	add.w	r3, r7, #20
 8001514:	2200      	movs	r2, #0
 8001516:	601a      	str	r2, [r3, #0]
 8001518:	605a      	str	r2, [r3, #4]
 800151a:	609a      	str	r2, [r3, #8]
 800151c:	60da      	str	r2, [r3, #12]
 800151e:	611a      	str	r2, [r3, #16]
	RCC_PeriphCLKInitTypeDef PeriphClkInit = { 0 };
 8001520:	1d3b      	adds	r3, r7, #4
 8001522:	2200      	movs	r2, #0
 8001524:	601a      	str	r2, [r3, #0]
 8001526:	605a      	str	r2, [r3, #4]
 8001528:	609a      	str	r2, [r3, #8]
 800152a:	60da      	str	r2, [r3, #12]

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800152c:	2301      	movs	r3, #1
 800152e:	62bb      	str	r3, [r7, #40]	; 0x28
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001530:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001534:	62fb      	str	r3, [r7, #44]	; 0x2c
	RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 8001536:	2300      	movs	r3, #0
 8001538:	633b      	str	r3, [r7, #48]	; 0x30
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800153a:	2301      	movs	r3, #1
 800153c:	63bb      	str	r3, [r7, #56]	; 0x38
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800153e:	2302      	movs	r3, #2
 8001540:	647b      	str	r3, [r7, #68]	; 0x44
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001542:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001546:	64bb      	str	r3, [r7, #72]	; 0x48
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 8001548:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 800154c:	64fb      	str	r3, [r7, #76]	; 0x4c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 800154e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001552:	4618      	mov	r0, r3
 8001554:	f003 ff08 	bl	8005368 <HAL_RCC_OscConfig>
 8001558:	4603      	mov	r3, r0
 800155a:	2b00      	cmp	r3, #0
 800155c:	d001      	beq.n	8001562 <SystemClock_Config+0x66>
		Error_Handler();
 800155e:	f002 f8ed 	bl	800373c <Error_Handler>
	}

	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 8001562:	230f      	movs	r3, #15
 8001564:	617b      	str	r3, [r7, #20]
			| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001566:	2302      	movs	r3, #2
 8001568:	61bb      	str	r3, [r7, #24]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800156a:	2300      	movs	r3, #0
 800156c:	61fb      	str	r3, [r7, #28]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 800156e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001572:	623b      	str	r3, [r7, #32]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001574:	2300      	movs	r3, #0
 8001576:	627b      	str	r3, [r7, #36]	; 0x24

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK) {
 8001578:	f107 0314 	add.w	r3, r7, #20
 800157c:	2102      	movs	r1, #2
 800157e:	4618      	mov	r0, r3
 8001580:	f004 f974 	bl	800586c <HAL_RCC_ClockConfig>
 8001584:	4603      	mov	r3, r0
 8001586:	2b00      	cmp	r3, #0
 8001588:	d001      	beq.n	800158e <SystemClock_Config+0x92>
		Error_Handler();
 800158a:	f002 f8d7 	bl	800373c <Error_Handler>
	}
	PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 800158e:	2302      	movs	r3, #2
 8001590:	607b      	str	r3, [r7, #4]
	PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 8001592:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8001596:	60fb      	str	r3, [r7, #12]
	if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 8001598:	1d3b      	adds	r3, r7, #4
 800159a:	4618      	mov	r0, r3
 800159c:	f004 fafe 	bl	8005b9c <HAL_RCCEx_PeriphCLKConfig>
 80015a0:	4603      	mov	r3, r0
 80015a2:	2b00      	cmp	r3, #0
 80015a4:	d001      	beq.n	80015aa <SystemClock_Config+0xae>
		Error_Handler();
 80015a6:	f002 f8c9 	bl	800373c <Error_Handler>
	}
}
 80015aa:	bf00      	nop
 80015ac:	3750      	adds	r7, #80	; 0x50
 80015ae:	46bd      	mov	sp, r7
 80015b0:	bd80      	pop	{r7, pc}
	...

080015b4 <intUartSend>:

/* USER CODE BEGIN 4 */
void intUartSend(int entero) {
 80015b4:	b580      	push	{r7, lr}
 80015b6:	b086      	sub	sp, #24
 80015b8:	af00      	add	r7, sp, #0
 80015ba:	6078      	str	r0, [r7, #4]
	int m;
	int c;
	int d;
	int u;

	m = entero / 1000;
 80015bc:	687b      	ldr	r3, [r7, #4]
 80015be:	4a30      	ldr	r2, [pc, #192]	; (8001680 <intUartSend+0xcc>)
 80015c0:	fb82 1203 	smull	r1, r2, r2, r3
 80015c4:	1192      	asrs	r2, r2, #6
 80015c6:	17db      	asrs	r3, r3, #31
 80015c8:	1ad3      	subs	r3, r2, r3
 80015ca:	617b      	str	r3, [r7, #20]
	c = entero / 100 - m * 10;
 80015cc:	687b      	ldr	r3, [r7, #4]
 80015ce:	4a2d      	ldr	r2, [pc, #180]	; (8001684 <intUartSend+0xd0>)
 80015d0:	fb82 1203 	smull	r1, r2, r2, r3
 80015d4:	1152      	asrs	r2, r2, #5
 80015d6:	17db      	asrs	r3, r3, #31
 80015d8:	1ad2      	subs	r2, r2, r3
 80015da:	697b      	ldr	r3, [r7, #20]
 80015dc:	f06f 0109 	mvn.w	r1, #9
 80015e0:	fb01 f303 	mul.w	r3, r1, r3
 80015e4:	4413      	add	r3, r2
 80015e6:	613b      	str	r3, [r7, #16]
	d = entero / 10 - (m * 100 + c * 10);
 80015e8:	687b      	ldr	r3, [r7, #4]
 80015ea:	4a27      	ldr	r2, [pc, #156]	; (8001688 <intUartSend+0xd4>)
 80015ec:	fb82 1203 	smull	r1, r2, r2, r3
 80015f0:	1092      	asrs	r2, r2, #2
 80015f2:	17db      	asrs	r3, r3, #31
 80015f4:	1ad1      	subs	r1, r2, r3
 80015f6:	697b      	ldr	r3, [r7, #20]
 80015f8:	2264      	movs	r2, #100	; 0x64
 80015fa:	fb02 f003 	mul.w	r0, r2, r3
 80015fe:	693a      	ldr	r2, [r7, #16]
 8001600:	4613      	mov	r3, r2
 8001602:	009b      	lsls	r3, r3, #2
 8001604:	4413      	add	r3, r2
 8001606:	005b      	lsls	r3, r3, #1
 8001608:	4403      	add	r3, r0
 800160a:	1acb      	subs	r3, r1, r3
 800160c:	60fb      	str	r3, [r7, #12]
	u = entero - (m * 1000 + c * 100 + d * 10);
 800160e:	697b      	ldr	r3, [r7, #20]
 8001610:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001614:	fb03 f202 	mul.w	r2, r3, r2
 8001618:	693b      	ldr	r3, [r7, #16]
 800161a:	2164      	movs	r1, #100	; 0x64
 800161c:	fb01 f303 	mul.w	r3, r1, r3
 8001620:	18d1      	adds	r1, r2, r3
 8001622:	68fa      	ldr	r2, [r7, #12]
 8001624:	4613      	mov	r3, r2
 8001626:	009b      	lsls	r3, r3, #2
 8001628:	4413      	add	r3, r2
 800162a:	005b      	lsls	r3, r3, #1
 800162c:	440b      	add	r3, r1
 800162e:	687a      	ldr	r2, [r7, #4]
 8001630:	1ad3      	subs	r3, r2, r3
 8001632:	60bb      	str	r3, [r7, #8]

	TX_BUFFER[0] = m + '0';
 8001634:	697b      	ldr	r3, [r7, #20]
 8001636:	b2db      	uxtb	r3, r3
 8001638:	3330      	adds	r3, #48	; 0x30
 800163a:	b2da      	uxtb	r2, r3
 800163c:	4b13      	ldr	r3, [pc, #76]	; (800168c <intUartSend+0xd8>)
 800163e:	701a      	strb	r2, [r3, #0]
	TX_BUFFER[1] = c + '0';
 8001640:	693b      	ldr	r3, [r7, #16]
 8001642:	b2db      	uxtb	r3, r3
 8001644:	3330      	adds	r3, #48	; 0x30
 8001646:	b2da      	uxtb	r2, r3
 8001648:	4b10      	ldr	r3, [pc, #64]	; (800168c <intUartSend+0xd8>)
 800164a:	705a      	strb	r2, [r3, #1]
	TX_BUFFER[2] = d + '0';
 800164c:	68fb      	ldr	r3, [r7, #12]
 800164e:	b2db      	uxtb	r3, r3
 8001650:	3330      	adds	r3, #48	; 0x30
 8001652:	b2da      	uxtb	r2, r3
 8001654:	4b0d      	ldr	r3, [pc, #52]	; (800168c <intUartSend+0xd8>)
 8001656:	709a      	strb	r2, [r3, #2]
	TX_BUFFER[3] = u + '0';
 8001658:	68bb      	ldr	r3, [r7, #8]
 800165a:	b2db      	uxtb	r3, r3
 800165c:	3330      	adds	r3, #48	; 0x30
 800165e:	b2da      	uxtb	r2, r3
 8001660:	4b0a      	ldr	r3, [pc, #40]	; (800168c <intUartSend+0xd8>)
 8001662:	70da      	strb	r2, [r3, #3]
	TX_BUFFER[4] = '\n';
 8001664:	4b09      	ldr	r3, [pc, #36]	; (800168c <intUartSend+0xd8>)
 8001666:	220a      	movs	r2, #10
 8001668:	711a      	strb	r2, [r3, #4]
	HAL_UART_Transmit(&huart1, TX_BUFFER, 5, 100);
 800166a:	2364      	movs	r3, #100	; 0x64
 800166c:	2205      	movs	r2, #5
 800166e:	4907      	ldr	r1, [pc, #28]	; (800168c <intUartSend+0xd8>)
 8001670:	4807      	ldr	r0, [pc, #28]	; (8001690 <intUartSend+0xdc>)
 8001672:	f005 f8e2 	bl	800683a <HAL_UART_Transmit>
}
 8001676:	bf00      	nop
 8001678:	3718      	adds	r7, #24
 800167a:	46bd      	mov	sp, r7
 800167c:	bd80      	pop	{r7, pc}
 800167e:	bf00      	nop
 8001680:	10624dd3 	.word	0x10624dd3
 8001684:	51eb851f 	.word	0x51eb851f
 8001688:	66666667 	.word	0x66666667
 800168c:	2000121c 	.word	0x2000121c
 8001690:	20002bc4 	.word	0x20002bc4

08001694 <mainMachine>:

void mainMachine() {
 8001694:	b580      	push	{r7, lr}
 8001696:	af00      	add	r7, sp, #0
	switch (mainState) {
 8001698:	4b84      	ldr	r3, [pc, #528]	; (80018ac <mainMachine+0x218>)
 800169a:	681b      	ldr	r3, [r3, #0]
 800169c:	2b04      	cmp	r3, #4
 800169e:	f200 8103 	bhi.w	80018a8 <mainMachine+0x214>
 80016a2:	a201      	add	r2, pc, #4	; (adr r2, 80016a8 <mainMachine+0x14>)
 80016a4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80016a8:	080016bd 	.word	0x080016bd
 80016ac:	080017bd 	.word	0x080017bd
 80016b0:	08001825 	.word	0x08001825
 80016b4:	0800189f 	.word	0x0800189f
 80016b8:	080017b7 	.word	0x080017b7
	case SETUP:
		actual.x = ALTO;
 80016bc:	4b7c      	ldr	r3, [pc, #496]	; (80018b0 <mainMachine+0x21c>)
 80016be:	2208      	movs	r2, #8
 80016c0:	601a      	str	r2, [r3, #0]
		actual.y = ANCHO;
 80016c2:	4b7b      	ldr	r3, [pc, #492]	; (80018b0 <mainMachine+0x21c>)
 80016c4:	2208      	movs	r2, #8
 80016c6:	605a      	str	r2, [r3, #4]
		/*visual.x = 0;
		 visual.y = 0;*/
		resetAxis();
 80016c8:	f001 fcc8 	bl	800305c <resetAxis>
		movimientoFlag = 0;
 80016cc:	4b79      	ldr	r3, [pc, #484]	; (80018b4 <mainMachine+0x220>)
 80016ce:	2200      	movs	r2, #0
 80016d0:	601a      	str	r2, [r3, #0]
		finishFlag = 0;
 80016d2:	4b79      	ldr	r3, [pc, #484]	; (80018b8 <mainMachine+0x224>)
 80016d4:	2200      	movs	r2, #0
 80016d6:	601a      	str	r2, [r3, #0]
		if (btns[0].flag == 1) {
 80016d8:	4b78      	ldr	r3, [pc, #480]	; (80018bc <mainMachine+0x228>)
 80016da:	68db      	ldr	r3, [r3, #12]
 80016dc:	2b01      	cmp	r3, #1
 80016de:	d12e      	bne.n	800173e <mainMachine+0xaa>
			// Set The LED ON!
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 80016e0:	2200      	movs	r2, #0
 80016e2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80016e6:	4876      	ldr	r0, [pc, #472]	; (80018c0 <mainMachine+0x22c>)
 80016e8:	f003 fe25 	bl	8005336 <HAL_GPIO_WritePin>
			choice = SLOW;
 80016ec:	4b75      	ldr	r3, [pc, #468]	; (80018c4 <mainMachine+0x230>)
 80016ee:	2200      	movs	r2, #0
 80016f0:	601a      	str	r2, [r3, #0]
			velocity = velocityChoice[SLOW];
 80016f2:	4b75      	ldr	r3, [pc, #468]	; (80018c8 <mainMachine+0x234>)
 80016f4:	681b      	ldr	r3, [r3, #0]
 80016f6:	4a75      	ldr	r2, [pc, #468]	; (80018cc <mainMachine+0x238>)
 80016f8:	6013      	str	r3, [r2, #0]
			TIM2->CCR3 = baseChoice[SLOW];
 80016fa:	4b75      	ldr	r3, [pc, #468]	; (80018d0 <mainMachine+0x23c>)
 80016fc:	681a      	ldr	r2, [r3, #0]
 80016fe:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001702:	63da      	str	r2, [r3, #60]	; 0x3c
			TIM2->CCR4 = baseChoice[SLOW];
 8001704:	4b72      	ldr	r3, [pc, #456]	; (80018d0 <mainMachine+0x23c>)
 8001706:	681a      	ldr	r2, [r3, #0]
 8001708:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800170c:	641a      	str	r2, [r3, #64]	; 0x40
			KP = KPchoice[SLOW];
 800170e:	4b71      	ldr	r3, [pc, #452]	; (80018d4 <mainMachine+0x240>)
 8001710:	681b      	ldr	r3, [r3, #0]
 8001712:	4a71      	ldr	r2, [pc, #452]	; (80018d8 <mainMachine+0x244>)
 8001714:	6013      	str	r3, [r2, #0]
			KD = KDchoice[SLOW];
 8001716:	4b71      	ldr	r3, [pc, #452]	; (80018dc <mainMachine+0x248>)
 8001718:	681b      	ldr	r3, [r3, #0]
 800171a:	4a71      	ldr	r2, [pc, #452]	; (80018e0 <mainMachine+0x24c>)
 800171c:	6013      	str	r3, [r2, #0]
			if (q == 0) {
 800171e:	4b71      	ldr	r3, [pc, #452]	; (80018e4 <mainMachine+0x250>)
 8001720:	681b      	ldr	r3, [r3, #0]
 8001722:	2b00      	cmp	r3, #0
 8001724:	d108      	bne.n	8001738 <mainMachine+0xa4>
				mainState = CALIBRATE;
 8001726:	4b61      	ldr	r3, [pc, #388]	; (80018ac <mainMachine+0x218>)
 8001728:	2204      	movs	r2, #4
 800172a:	601a      	str	r2, [r3, #0]
				q++;
 800172c:	4b6d      	ldr	r3, [pc, #436]	; (80018e4 <mainMachine+0x250>)
 800172e:	681b      	ldr	r3, [r3, #0]
 8001730:	3301      	adds	r3, #1
 8001732:	4a6c      	ldr	r2, [pc, #432]	; (80018e4 <mainMachine+0x250>)
 8001734:	6013      	str	r3, [r2, #0]
 8001736:	e002      	b.n	800173e <mainMachine+0xaa>
			} else {
				mainState = MAPPING;
 8001738:	4b5c      	ldr	r3, [pc, #368]	; (80018ac <mainMachine+0x218>)
 800173a:	2201      	movs	r2, #1
 800173c:	601a      	str	r2, [r3, #0]
			}

		}
		if (btns[1].flag == 1) {
 800173e:	4b5f      	ldr	r3, [pc, #380]	; (80018bc <mainMachine+0x228>)
 8001740:	69db      	ldr	r3, [r3, #28]
 8001742:	2b01      	cmp	r3, #1
 8001744:	d102      	bne.n	800174c <mainMachine+0xb8>
			// Set The LED ON!
			mainState = RACING;
 8001746:	4b59      	ldr	r3, [pc, #356]	; (80018ac <mainMachine+0x218>)
 8001748:	2203      	movs	r2, #3
 800174a:	601a      	str	r2, [r3, #0]
			//directions = ReadRun();
			//ShowRun();
		}
		if (btns[2].flag == 1) {
 800174c:	4b5b      	ldr	r3, [pc, #364]	; (80018bc <mainMachine+0x228>)
 800174e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001750:	2b01      	cmp	r3, #1
 8001752:	f040 80a8 	bne.w	80018a6 <mainMachine+0x212>
			// Set The LED ON!
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 8001756:	2200      	movs	r2, #0
 8001758:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800175c:	4858      	ldr	r0, [pc, #352]	; (80018c0 <mainMachine+0x22c>)
 800175e:	f003 fdea 	bl	8005336 <HAL_GPIO_WritePin>
			choice = FAST;
 8001762:	4b58      	ldr	r3, [pc, #352]	; (80018c4 <mainMachine+0x230>)
 8001764:	2201      	movs	r2, #1
 8001766:	601a      	str	r2, [r3, #0]
			velocity = velocityChoice[FAST];
 8001768:	4b57      	ldr	r3, [pc, #348]	; (80018c8 <mainMachine+0x234>)
 800176a:	685b      	ldr	r3, [r3, #4]
 800176c:	4a57      	ldr	r2, [pc, #348]	; (80018cc <mainMachine+0x238>)
 800176e:	6013      	str	r3, [r2, #0]
			TIM2->CCR3 = baseChoice[FAST];
 8001770:	4b57      	ldr	r3, [pc, #348]	; (80018d0 <mainMachine+0x23c>)
 8001772:	685a      	ldr	r2, [r3, #4]
 8001774:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001778:	63da      	str	r2, [r3, #60]	; 0x3c
			TIM2->CCR4 = baseChoice[FAST];
 800177a:	4b55      	ldr	r3, [pc, #340]	; (80018d0 <mainMachine+0x23c>)
 800177c:	685a      	ldr	r2, [r3, #4]
 800177e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001782:	641a      	str	r2, [r3, #64]	; 0x40
			KP = KPchoice[FAST];
 8001784:	4b53      	ldr	r3, [pc, #332]	; (80018d4 <mainMachine+0x240>)
 8001786:	685b      	ldr	r3, [r3, #4]
 8001788:	4a53      	ldr	r2, [pc, #332]	; (80018d8 <mainMachine+0x244>)
 800178a:	6013      	str	r3, [r2, #0]
			KD = KDchoice[FAST];
 800178c:	4b53      	ldr	r3, [pc, #332]	; (80018dc <mainMachine+0x248>)
 800178e:	685b      	ldr	r3, [r3, #4]
 8001790:	4a53      	ldr	r2, [pc, #332]	; (80018e0 <mainMachine+0x24c>)
 8001792:	6013      	str	r3, [r2, #0]
			if (q == 0) {
 8001794:	4b53      	ldr	r3, [pc, #332]	; (80018e4 <mainMachine+0x250>)
 8001796:	681b      	ldr	r3, [r3, #0]
 8001798:	2b00      	cmp	r3, #0
 800179a:	d108      	bne.n	80017ae <mainMachine+0x11a>
				mainState = CALIBRATE;
 800179c:	4b43      	ldr	r3, [pc, #268]	; (80018ac <mainMachine+0x218>)
 800179e:	2204      	movs	r2, #4
 80017a0:	601a      	str	r2, [r3, #0]
				q++;
 80017a2:	4b50      	ldr	r3, [pc, #320]	; (80018e4 <mainMachine+0x250>)
 80017a4:	681b      	ldr	r3, [r3, #0]
 80017a6:	3301      	adds	r3, #1
 80017a8:	4a4e      	ldr	r2, [pc, #312]	; (80018e4 <mainMachine+0x250>)
 80017aa:	6013      	str	r3, [r2, #0]
			} else {
				mainState = MAPPING;
			}
		}
		//confirmacionCentrado();
		break;
 80017ac:	e07b      	b.n	80018a6 <mainMachine+0x212>
				mainState = MAPPING;
 80017ae:	4b3f      	ldr	r3, [pc, #252]	; (80018ac <mainMachine+0x218>)
 80017b0:	2201      	movs	r2, #1
 80017b2:	601a      	str	r2, [r3, #0]
		break;
 80017b4:	e077      	b.n	80018a6 <mainMachine+0x212>
	case CALIBRATE:
		calibrateMachine();
 80017b6:	f000 f89f 	bl	80018f8 <calibrateMachine>
		//HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
		break;
 80017ba:	e075      	b.n	80018a8 <mainMachine+0x214>
	case MAPPING:
		if (finishFlag == 0) {
 80017bc:	4b3e      	ldr	r3, [pc, #248]	; (80018b8 <mainMachine+0x224>)
 80017be:	681b      	ldr	r3, [r3, #0]
 80017c0:	2b00      	cmp	r3, #0
 80017c2:	d102      	bne.n	80017ca <mainMachine+0x136>
			robotMachine();
 80017c4:	f000 f99a 	bl	8001afc <robotMachine>
			finishFlag = 0;
			resetAxis();
			PrintMap();
			mainState = RESOLUTION;
		}
		break;
 80017c8:	e06e      	b.n	80018a8 <mainMachine+0x214>
			TX_BUFFER[0] = 'X';
 80017ca:	4b47      	ldr	r3, [pc, #284]	; (80018e8 <mainMachine+0x254>)
 80017cc:	2258      	movs	r2, #88	; 0x58
 80017ce:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(&huart1, TX_BUFFER, 1, 100);
 80017d0:	2364      	movs	r3, #100	; 0x64
 80017d2:	2201      	movs	r2, #1
 80017d4:	4944      	ldr	r1, [pc, #272]	; (80018e8 <mainMachine+0x254>)
 80017d6:	4845      	ldr	r0, [pc, #276]	; (80018ec <mainMachine+0x258>)
 80017d8:	f005 f82f 	bl	800683a <HAL_UART_Transmit>
			intUartSend(actual.x);
 80017dc:	4b34      	ldr	r3, [pc, #208]	; (80018b0 <mainMachine+0x21c>)
 80017de:	681b      	ldr	r3, [r3, #0]
 80017e0:	4618      	mov	r0, r3
 80017e2:	f7ff fee7 	bl	80015b4 <intUartSend>
			TX_BUFFER[0] = 'Y';
 80017e6:	4b40      	ldr	r3, [pc, #256]	; (80018e8 <mainMachine+0x254>)
 80017e8:	2259      	movs	r2, #89	; 0x59
 80017ea:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(&huart1, TX_BUFFER, 1, 100);
 80017ec:	2364      	movs	r3, #100	; 0x64
 80017ee:	2201      	movs	r2, #1
 80017f0:	493d      	ldr	r1, [pc, #244]	; (80018e8 <mainMachine+0x254>)
 80017f2:	483e      	ldr	r0, [pc, #248]	; (80018ec <mainMachine+0x258>)
 80017f4:	f005 f821 	bl	800683a <HAL_UART_Transmit>
			intUartSend(actual.y);
 80017f8:	4b2d      	ldr	r3, [pc, #180]	; (80018b0 <mainMachine+0x21c>)
 80017fa:	685b      	ldr	r3, [r3, #4]
 80017fc:	4618      	mov	r0, r3
 80017fe:	f7ff fed9 	bl	80015b4 <intUartSend>
			actual.x = ALTO;
 8001802:	4b2b      	ldr	r3, [pc, #172]	; (80018b0 <mainMachine+0x21c>)
 8001804:	2208      	movs	r2, #8
 8001806:	601a      	str	r2, [r3, #0]
			actual.y = ANCHO;
 8001808:	4b29      	ldr	r3, [pc, #164]	; (80018b0 <mainMachine+0x21c>)
 800180a:	2208      	movs	r2, #8
 800180c:	605a      	str	r2, [r3, #4]
			finishFlag = 0;
 800180e:	4b2a      	ldr	r3, [pc, #168]	; (80018b8 <mainMachine+0x224>)
 8001810:	2200      	movs	r2, #0
 8001812:	601a      	str	r2, [r3, #0]
			resetAxis();
 8001814:	f001 fc22 	bl	800305c <resetAxis>
			PrintMap();
 8001818:	f001 fc3a 	bl	8003090 <PrintMap>
			mainState = RESOLUTION;
 800181c:	4b23      	ldr	r3, [pc, #140]	; (80018ac <mainMachine+0x218>)
 800181e:	2202      	movs	r2, #2
 8001820:	601a      	str	r2, [r3, #0]
		break;
 8001822:	e041      	b.n	80018a8 <mainMachine+0x214>
	case RESOLUTION:
		if (Map[actual.x][actual.y].final == 0) {
 8001824:	4b22      	ldr	r3, [pc, #136]	; (80018b0 <mainMachine+0x21c>)
 8001826:	6819      	ldr	r1, [r3, #0]
 8001828:	4b21      	ldr	r3, [pc, #132]	; (80018b0 <mainMachine+0x21c>)
 800182a:	685b      	ldr	r3, [r3, #4]
 800182c:	4830      	ldr	r0, [pc, #192]	; (80018f0 <mainMachine+0x25c>)
 800182e:	461a      	mov	r2, r3
 8001830:	0052      	lsls	r2, r2, #1
 8001832:	441a      	add	r2, r3
 8001834:	00d3      	lsls	r3, r2, #3
 8001836:	461a      	mov	r2, r3
 8001838:	460b      	mov	r3, r1
 800183a:	005b      	lsls	r3, r3, #1
 800183c:	440b      	add	r3, r1
 800183e:	01db      	lsls	r3, r3, #7
 8001840:	4413      	add	r3, r2
 8001842:	4403      	add	r3, r0
 8001844:	3314      	adds	r3, #20
 8001846:	681b      	ldr	r3, [r3, #0]
 8001848:	2b00      	cmp	r3, #0
 800184a:	d124      	bne.n	8001896 <mainMachine+0x202>
			addDirection(actual.x, actual.y);
 800184c:	4b18      	ldr	r3, [pc, #96]	; (80018b0 <mainMachine+0x21c>)
 800184e:	681b      	ldr	r3, [r3, #0]
 8001850:	4a17      	ldr	r2, [pc, #92]	; (80018b0 <mainMachine+0x21c>)
 8001852:	6852      	ldr	r2, [r2, #4]
 8001854:	4611      	mov	r1, r2
 8001856:	4618      	mov	r0, r3
 8001858:	f000 fc84 	bl	8002164 <addDirection>
			TX_BUFFER[0] = 'X';
 800185c:	4b22      	ldr	r3, [pc, #136]	; (80018e8 <mainMachine+0x254>)
 800185e:	2258      	movs	r2, #88	; 0x58
 8001860:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(&huart1, TX_BUFFER, 1, 100);
 8001862:	2364      	movs	r3, #100	; 0x64
 8001864:	2201      	movs	r2, #1
 8001866:	4920      	ldr	r1, [pc, #128]	; (80018e8 <mainMachine+0x254>)
 8001868:	4820      	ldr	r0, [pc, #128]	; (80018ec <mainMachine+0x258>)
 800186a:	f004 ffe6 	bl	800683a <HAL_UART_Transmit>
			intUartSend(actual.x);
 800186e:	4b10      	ldr	r3, [pc, #64]	; (80018b0 <mainMachine+0x21c>)
 8001870:	681b      	ldr	r3, [r3, #0]
 8001872:	4618      	mov	r0, r3
 8001874:	f7ff fe9e 	bl	80015b4 <intUartSend>
			TX_BUFFER[0] = 'Y';
 8001878:	4b1b      	ldr	r3, [pc, #108]	; (80018e8 <mainMachine+0x254>)
 800187a:	2259      	movs	r2, #89	; 0x59
 800187c:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(&huart1, TX_BUFFER, 1, 100);
 800187e:	2364      	movs	r3, #100	; 0x64
 8001880:	2201      	movs	r2, #1
 8001882:	4919      	ldr	r1, [pc, #100]	; (80018e8 <mainMachine+0x254>)
 8001884:	4819      	ldr	r0, [pc, #100]	; (80018ec <mainMachine+0x258>)
 8001886:	f004 ffd8 	bl	800683a <HAL_UART_Transmit>
			intUartSend(actual.y);
 800188a:	4b09      	ldr	r3, [pc, #36]	; (80018b0 <mainMachine+0x21c>)
 800188c:	685b      	ldr	r3, [r3, #4]
 800188e:	4618      	mov	r0, r3
 8001890:	f7ff fe90 	bl	80015b4 <intUartSend>
			//SerialBT.println(directions);
			// UploadRun(directions);
			mainState = SETUP;
		}

		break;
 8001894:	e008      	b.n	80018a8 <mainMachine+0x214>
			mainState = SETUP;
 8001896:	4b05      	ldr	r3, [pc, #20]	; (80018ac <mainMachine+0x218>)
 8001898:	2200      	movs	r2, #0
 800189a:	601a      	str	r2, [r3, #0]
		break;
 800189c:	e004      	b.n	80018a8 <mainMachine+0x214>
	case RACING:
		runDirections(directions);
 800189e:	4815      	ldr	r0, [pc, #84]	; (80018f4 <mainMachine+0x260>)
 80018a0:	f000 fc12 	bl	80020c8 <runDirections>
		break;
 80018a4:	e000      	b.n	80018a8 <mainMachine+0x214>
		break;
 80018a6:	bf00      	nop
	}

}
 80018a8:	bf00      	nop
 80018aa:	bd80      	pop	{r7, pc}
 80018ac:	2000128c 	.word	0x2000128c
 80018b0:	200012b0 	.word	0x200012b0
 80018b4:	2000124c 	.word	0x2000124c
 80018b8:	20001248 	.word	0x20001248
 80018bc:	2000125c 	.word	0x2000125c
 80018c0:	40011000 	.word	0x40011000
 80018c4:	20001238 	.word	0x20001238
 80018c8:	20000010 	.word	0x20000010
 80018cc:	20001230 	.word	0x20001230
 80018d0:	20000018 	.word	0x20000018
 80018d4:	20000000 	.word	0x20000000
 80018d8:	20001228 	.word	0x20001228
 80018dc:	20000008 	.word	0x20000008
 80018e0:	2000122c 	.word	0x2000122c
 80018e4:	20002ae8 	.word	0x20002ae8
 80018e8:	2000121c 	.word	0x2000121c
 80018ec:	20002bc4 	.word	0x20002bc4
 80018f0:	200012c0 	.word	0x200012c0
 80018f4:	20001294 	.word	0x20001294

080018f8 <calibrateMachine>:

void calibrateMachine() {
 80018f8:	b580      	push	{r7, lr}
 80018fa:	af00      	add	r7, sp, #0
	switch (calState) {
 80018fc:	4b75      	ldr	r3, [pc, #468]	; (8001ad4 <calibrateMachine+0x1dc>)
 80018fe:	681b      	ldr	r3, [r3, #0]
 8001900:	2b03      	cmp	r3, #3
 8001902:	f200 80e5 	bhi.w	8001ad0 <calibrateMachine+0x1d8>
 8001906:	a201      	add	r2, pc, #4	; (adr r2, 800190c <calibrateMachine+0x14>)
 8001908:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800190c:	0800191d 	.word	0x0800191d
 8001910:	080019cd 	.word	0x080019cd
 8001914:	08001a1d 	.word	0x08001a1d
 8001918:	08001a6d 	.word	0x08001a6d
	case CENTER:
		intUartSend(abs(Sensors[1] - Sensors[3]));
 800191c:	4b6e      	ldr	r3, [pc, #440]	; (8001ad8 <calibrateMachine+0x1e0>)
 800191e:	685b      	ldr	r3, [r3, #4]
 8001920:	4a6d      	ldr	r2, [pc, #436]	; (8001ad8 <calibrateMachine+0x1e0>)
 8001922:	68d2      	ldr	r2, [r2, #12]
 8001924:	4611      	mov	r1, r2
 8001926:	4618      	mov	r0, r3
 8001928:	f7ff f8d2 	bl	8000ad0 <__aeabi_fsub>
 800192c:	4603      	mov	r3, r0
 800192e:	4618      	mov	r0, r3
 8001930:	f7ff fb9e 	bl	8001070 <__aeabi_f2iz>
 8001934:	4603      	mov	r3, r0
 8001936:	2b00      	cmp	r3, #0
 8001938:	bfb8      	it	lt
 800193a:	425b      	neglt	r3, r3
 800193c:	4618      	mov	r0, r3
 800193e:	f7ff fe39 	bl	80015b4 <intUartSend>
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 8001942:	2201      	movs	r2, #1
 8001944:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001948:	4864      	ldr	r0, [pc, #400]	; (8001adc <calibrateMachine+0x1e4>)
 800194a:	f003 fcf4 	bl	8005336 <HAL_GPIO_WritePin>
		if (abs(Sensors[1] - Sensors[3]) < 0.5) {
 800194e:	4b62      	ldr	r3, [pc, #392]	; (8001ad8 <calibrateMachine+0x1e0>)
 8001950:	685b      	ldr	r3, [r3, #4]
 8001952:	4a61      	ldr	r2, [pc, #388]	; (8001ad8 <calibrateMachine+0x1e0>)
 8001954:	68d2      	ldr	r2, [r2, #12]
 8001956:	4611      	mov	r1, r2
 8001958:	4618      	mov	r0, r3
 800195a:	f7ff f8b9 	bl	8000ad0 <__aeabi_fsub>
 800195e:	4603      	mov	r3, r0
 8001960:	4618      	mov	r0, r3
 8001962:	f7ff fb85 	bl	8001070 <__aeabi_f2iz>
 8001966:	4603      	mov	r3, r0
 8001968:	2b00      	cmp	r3, #0
 800196a:	f2c0 80aa 	blt.w	8001ac2 <calibrateMachine+0x1ca>
 800196e:	4b5a      	ldr	r3, [pc, #360]	; (8001ad8 <calibrateMachine+0x1e0>)
 8001970:	685b      	ldr	r3, [r3, #4]
 8001972:	4a59      	ldr	r2, [pc, #356]	; (8001ad8 <calibrateMachine+0x1e0>)
 8001974:	68d2      	ldr	r2, [r2, #12]
 8001976:	4611      	mov	r1, r2
 8001978:	4618      	mov	r0, r3
 800197a:	f7ff f8a9 	bl	8000ad0 <__aeabi_fsub>
 800197e:	4603      	mov	r3, r0
 8001980:	4618      	mov	r0, r3
 8001982:	f7ff fb75 	bl	8001070 <__aeabi_f2iz>
 8001986:	4603      	mov	r3, r0
 8001988:	2b00      	cmp	r3, #0
 800198a:	f300 809a 	bgt.w	8001ac2 <calibrateMachine+0x1ca>
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 800198e:	2200      	movs	r2, #0
 8001990:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001994:	4851      	ldr	r0, [pc, #324]	; (8001adc <calibrateMachine+0x1e4>)
 8001996:	f003 fcce 	bl	8005336 <HAL_GPIO_WritePin>
			if (btns[0].flag == 1) {
 800199a:	4b51      	ldr	r3, [pc, #324]	; (8001ae0 <calibrateMachine+0x1e8>)
 800199c:	68db      	ldr	r3, [r3, #12]
 800199e:	2b01      	cmp	r3, #1
 80019a0:	f040 808f 	bne.w	8001ac2 <calibrateMachine+0x1ca>
				CenterDistanceRight = Sensors[3];
 80019a4:	4b4c      	ldr	r3, [pc, #304]	; (8001ad8 <calibrateMachine+0x1e0>)
 80019a6:	68db      	ldr	r3, [r3, #12]
 80019a8:	4618      	mov	r0, r3
 80019aa:	f7ff fb61 	bl	8001070 <__aeabi_f2iz>
 80019ae:	4603      	mov	r3, r0
 80019b0:	4a4c      	ldr	r2, [pc, #304]	; (8001ae4 <calibrateMachine+0x1ec>)
 80019b2:	6013      	str	r3, [r2, #0]
				CenterDistanceLeft = Sensors[1];
 80019b4:	4b48      	ldr	r3, [pc, #288]	; (8001ad8 <calibrateMachine+0x1e0>)
 80019b6:	685b      	ldr	r3, [r3, #4]
 80019b8:	4618      	mov	r0, r3
 80019ba:	f7ff fb59 	bl	8001070 <__aeabi_f2iz>
 80019be:	4603      	mov	r3, r0
 80019c0:	4a49      	ldr	r2, [pc, #292]	; (8001ae8 <calibrateMachine+0x1f0>)
 80019c2:	6013      	str	r3, [r2, #0]
				calState = LEFT;
 80019c4:	4b43      	ldr	r3, [pc, #268]	; (8001ad4 <calibrateMachine+0x1dc>)
 80019c6:	2201      	movs	r2, #1
 80019c8:	601a      	str	r2, [r3, #0]
			}
		}
		break;
 80019ca:	e07a      	b.n	8001ac2 <calibrateMachine+0x1ca>
	case LEFT:
		intUartSend(abs(Sensors[1]));
 80019cc:	4b42      	ldr	r3, [pc, #264]	; (8001ad8 <calibrateMachine+0x1e0>)
 80019ce:	685b      	ldr	r3, [r3, #4]
 80019d0:	4618      	mov	r0, r3
 80019d2:	f7ff fb4d 	bl	8001070 <__aeabi_f2iz>
 80019d6:	4603      	mov	r3, r0
 80019d8:	2b00      	cmp	r3, #0
 80019da:	bfb8      	it	lt
 80019dc:	425b      	neglt	r3, r3
 80019de:	4618      	mov	r0, r3
 80019e0:	f7ff fde8 	bl	80015b4 <intUartSend>
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 80019e4:	2201      	movs	r2, #1
 80019e6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80019ea:	483c      	ldr	r0, [pc, #240]	; (8001adc <calibrateMachine+0x1e4>)
 80019ec:	f003 fca3 	bl	8005336 <HAL_GPIO_WritePin>
		if (btns[0].flag == 1) {
 80019f0:	4b3b      	ldr	r3, [pc, #236]	; (8001ae0 <calibrateMachine+0x1e8>)
 80019f2:	68db      	ldr	r3, [r3, #12]
 80019f4:	2b01      	cmp	r3, #1
 80019f6:	d166      	bne.n	8001ac6 <calibrateMachine+0x1ce>
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 80019f8:	2200      	movs	r2, #0
 80019fa:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80019fe:	4837      	ldr	r0, [pc, #220]	; (8001adc <calibrateMachine+0x1e4>)
 8001a00:	f003 fc99 	bl	8005336 <HAL_GPIO_WritePin>
			MaxLeftDistance = Sensors[1];
 8001a04:	4b34      	ldr	r3, [pc, #208]	; (8001ad8 <calibrateMachine+0x1e0>)
 8001a06:	685b      	ldr	r3, [r3, #4]
 8001a08:	4618      	mov	r0, r3
 8001a0a:	f7ff fb31 	bl	8001070 <__aeabi_f2iz>
 8001a0e:	4603      	mov	r3, r0
 8001a10:	4a36      	ldr	r2, [pc, #216]	; (8001aec <calibrateMachine+0x1f4>)
 8001a12:	6013      	str	r3, [r2, #0]
			calState = RIGHT;
 8001a14:	4b2f      	ldr	r3, [pc, #188]	; (8001ad4 <calibrateMachine+0x1dc>)
 8001a16:	2202      	movs	r2, #2
 8001a18:	601a      	str	r2, [r3, #0]
		}
		break;
 8001a1a:	e054      	b.n	8001ac6 <calibrateMachine+0x1ce>
	case RIGHT:
		intUartSend(abs(Sensors[3]));
 8001a1c:	4b2e      	ldr	r3, [pc, #184]	; (8001ad8 <calibrateMachine+0x1e0>)
 8001a1e:	68db      	ldr	r3, [r3, #12]
 8001a20:	4618      	mov	r0, r3
 8001a22:	f7ff fb25 	bl	8001070 <__aeabi_f2iz>
 8001a26:	4603      	mov	r3, r0
 8001a28:	2b00      	cmp	r3, #0
 8001a2a:	bfb8      	it	lt
 8001a2c:	425b      	neglt	r3, r3
 8001a2e:	4618      	mov	r0, r3
 8001a30:	f7ff fdc0 	bl	80015b4 <intUartSend>
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 8001a34:	2201      	movs	r2, #1
 8001a36:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a3a:	4828      	ldr	r0, [pc, #160]	; (8001adc <calibrateMachine+0x1e4>)
 8001a3c:	f003 fc7b 	bl	8005336 <HAL_GPIO_WritePin>
		if (btns[0].flag == 1) {
 8001a40:	4b27      	ldr	r3, [pc, #156]	; (8001ae0 <calibrateMachine+0x1e8>)
 8001a42:	68db      	ldr	r3, [r3, #12]
 8001a44:	2b01      	cmp	r3, #1
 8001a46:	d140      	bne.n	8001aca <calibrateMachine+0x1d2>
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a48:	2200      	movs	r2, #0
 8001a4a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a4e:	4823      	ldr	r0, [pc, #140]	; (8001adc <calibrateMachine+0x1e4>)
 8001a50:	f003 fc71 	bl	8005336 <HAL_GPIO_WritePin>
			MaxRightDistance = Sensors[3];
 8001a54:	4b20      	ldr	r3, [pc, #128]	; (8001ad8 <calibrateMachine+0x1e0>)
 8001a56:	68db      	ldr	r3, [r3, #12]
 8001a58:	4618      	mov	r0, r3
 8001a5a:	f7ff fb09 	bl	8001070 <__aeabi_f2iz>
 8001a5e:	4603      	mov	r3, r0
 8001a60:	4a23      	ldr	r2, [pc, #140]	; (8001af0 <calibrateMachine+0x1f8>)
 8001a62:	6013      	str	r3, [r2, #0]
			calState = FORWARD;
 8001a64:	4b1b      	ldr	r3, [pc, #108]	; (8001ad4 <calibrateMachine+0x1dc>)
 8001a66:	2203      	movs	r2, #3
 8001a68:	601a      	str	r2, [r3, #0]
		}
		break;
 8001a6a:	e02e      	b.n	8001aca <calibrateMachine+0x1d2>
	case FORWARD:
		intUartSend(abs(Sensors[2]));
 8001a6c:	4b1a      	ldr	r3, [pc, #104]	; (8001ad8 <calibrateMachine+0x1e0>)
 8001a6e:	689b      	ldr	r3, [r3, #8]
 8001a70:	4618      	mov	r0, r3
 8001a72:	f7ff fafd 	bl	8001070 <__aeabi_f2iz>
 8001a76:	4603      	mov	r3, r0
 8001a78:	2b00      	cmp	r3, #0
 8001a7a:	bfb8      	it	lt
 8001a7c:	425b      	neglt	r3, r3
 8001a7e:	4618      	mov	r0, r3
 8001a80:	f7ff fd98 	bl	80015b4 <intUartSend>
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 8001a84:	2201      	movs	r2, #1
 8001a86:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a8a:	4814      	ldr	r0, [pc, #80]	; (8001adc <calibrateMachine+0x1e4>)
 8001a8c:	f003 fc53 	bl	8005336 <HAL_GPIO_WritePin>
		if (btns[0].flag == 1) {
 8001a90:	4b13      	ldr	r3, [pc, #76]	; (8001ae0 <calibrateMachine+0x1e8>)
 8001a92:	68db      	ldr	r3, [r3, #12]
 8001a94:	2b01      	cmp	r3, #1
 8001a96:	d11a      	bne.n	8001ace <calibrateMachine+0x1d6>
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a98:	2200      	movs	r2, #0
 8001a9a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a9e:	480f      	ldr	r0, [pc, #60]	; (8001adc <calibrateMachine+0x1e4>)
 8001aa0:	f003 fc49 	bl	8005336 <HAL_GPIO_WritePin>
			MaxCenterDistance = Sensors[2];
 8001aa4:	4b0c      	ldr	r3, [pc, #48]	; (8001ad8 <calibrateMachine+0x1e0>)
 8001aa6:	689b      	ldr	r3, [r3, #8]
 8001aa8:	4618      	mov	r0, r3
 8001aaa:	f7ff fae1 	bl	8001070 <__aeabi_f2iz>
 8001aae:	4603      	mov	r3, r0
 8001ab0:	4a10      	ldr	r2, [pc, #64]	; (8001af4 <calibrateMachine+0x1fc>)
 8001ab2:	6013      	str	r3, [r2, #0]
			mainState = SETUP;
 8001ab4:	4b10      	ldr	r3, [pc, #64]	; (8001af8 <calibrateMachine+0x200>)
 8001ab6:	2200      	movs	r2, #0
 8001ab8:	601a      	str	r2, [r3, #0]
			calState = CENTER;
 8001aba:	4b06      	ldr	r3, [pc, #24]	; (8001ad4 <calibrateMachine+0x1dc>)
 8001abc:	2200      	movs	r2, #0
 8001abe:	601a      	str	r2, [r3, #0]
		}
		break;
 8001ac0:	e005      	b.n	8001ace <calibrateMachine+0x1d6>
		break;
 8001ac2:	bf00      	nop
 8001ac4:	e004      	b.n	8001ad0 <calibrateMachine+0x1d8>
		break;
 8001ac6:	bf00      	nop
 8001ac8:	e002      	b.n	8001ad0 <calibrateMachine+0x1d8>
		break;
 8001aca:	bf00      	nop
 8001acc:	e000      	b.n	8001ad0 <calibrateMachine+0x1d8>
		break;
 8001ace:	bf00      	nop
	}
}
 8001ad0:	bf00      	nop
 8001ad2:	bd80      	pop	{r7, pc}
 8001ad4:	200011fc 	.word	0x200011fc
 8001ad8:	200011dc 	.word	0x200011dc
 8001adc:	40011000 	.word	0x40011000
 8001ae0:	2000125c 	.word	0x2000125c
 8001ae4:	20001200 	.word	0x20001200
 8001ae8:	20001204 	.word	0x20001204
 8001aec:	2000120c 	.word	0x2000120c
 8001af0:	20001208 	.word	0x20001208
 8001af4:	20001210 	.word	0x20001210
 8001af8:	2000128c 	.word	0x2000128c

08001afc <robotMachine>:

void robotMachine() {
 8001afc:	b5b0      	push	{r4, r5, r7, lr}
 8001afe:	af00      	add	r7, sp, #0
	switch (robotState) {
 8001b00:	4b06      	ldr	r3, [pc, #24]	; (8001b1c <robotMachine+0x20>)
 8001b02:	681b      	ldr	r3, [r3, #0]
 8001b04:	2b02      	cmp	r3, #2
 8001b06:	f000 82ae 	beq.w	8002066 <robotMachine+0x56a>
 8001b0a:	2b02      	cmp	r3, #2
 8001b0c:	f300 82be 	bgt.w	800208c <robotMachine+0x590>
 8001b10:	2b00      	cmp	r3, #0
 8001b12:	d005      	beq.n	8001b20 <robotMachine+0x24>
 8001b14:	2b01      	cmp	r3, #1
 8001b16:	f000 81d9 	beq.w	8001ecc <robotMachine+0x3d0>
		if (movimientoFlag == 1) {
			robotState = READING;
		}
		break;
	}
}
 8001b1a:	e2b7      	b.n	800208c <robotMachine+0x590>
 8001b1c:	20001290 	.word	0x20001290
		TX_BUFFER[0] = 'X';
 8001b20:	4bb9      	ldr	r3, [pc, #740]	; (8001e08 <robotMachine+0x30c>)
 8001b22:	2258      	movs	r2, #88	; 0x58
 8001b24:	701a      	strb	r2, [r3, #0]
		TX_BUFFER[1] = actual.x + '0';
 8001b26:	4bb9      	ldr	r3, [pc, #740]	; (8001e0c <robotMachine+0x310>)
 8001b28:	681b      	ldr	r3, [r3, #0]
 8001b2a:	b2db      	uxtb	r3, r3
 8001b2c:	3330      	adds	r3, #48	; 0x30
 8001b2e:	b2da      	uxtb	r2, r3
 8001b30:	4bb5      	ldr	r3, [pc, #724]	; (8001e08 <robotMachine+0x30c>)
 8001b32:	705a      	strb	r2, [r3, #1]
		TX_BUFFER[2] = '\n';
 8001b34:	4bb4      	ldr	r3, [pc, #720]	; (8001e08 <robotMachine+0x30c>)
 8001b36:	220a      	movs	r2, #10
 8001b38:	709a      	strb	r2, [r3, #2]
		TX_BUFFER[3] = 'Y';
 8001b3a:	4bb3      	ldr	r3, [pc, #716]	; (8001e08 <robotMachine+0x30c>)
 8001b3c:	2259      	movs	r2, #89	; 0x59
 8001b3e:	70da      	strb	r2, [r3, #3]
		TX_BUFFER[4] = actual.y + '0';
 8001b40:	4bb2      	ldr	r3, [pc, #712]	; (8001e0c <robotMachine+0x310>)
 8001b42:	685b      	ldr	r3, [r3, #4]
 8001b44:	b2db      	uxtb	r3, r3
 8001b46:	3330      	adds	r3, #48	; 0x30
 8001b48:	b2da      	uxtb	r2, r3
 8001b4a:	4baf      	ldr	r3, [pc, #700]	; (8001e08 <robotMachine+0x30c>)
 8001b4c:	711a      	strb	r2, [r3, #4]
		TX_BUFFER[5] = '\n';
 8001b4e:	4bae      	ldr	r3, [pc, #696]	; (8001e08 <robotMachine+0x30c>)
 8001b50:	220a      	movs	r2, #10
 8001b52:	715a      	strb	r2, [r3, #5]
		HAL_UART_Transmit(&huart1, TX_BUFFER, 6, 100);
 8001b54:	2364      	movs	r3, #100	; 0x64
 8001b56:	2206      	movs	r2, #6
 8001b58:	49ab      	ldr	r1, [pc, #684]	; (8001e08 <robotMachine+0x30c>)
 8001b5a:	48ad      	ldr	r0, [pc, #692]	; (8001e10 <robotMachine+0x314>)
 8001b5c:	f004 fe6d 	bl	800683a <HAL_UART_Transmit>
		Map[actual.x][actual.y].visitado++;
 8001b60:	4baa      	ldr	r3, [pc, #680]	; (8001e0c <robotMachine+0x310>)
 8001b62:	6819      	ldr	r1, [r3, #0]
 8001b64:	4ba9      	ldr	r3, [pc, #676]	; (8001e0c <robotMachine+0x310>)
 8001b66:	6858      	ldr	r0, [r3, #4]
 8001b68:	4caa      	ldr	r4, [pc, #680]	; (8001e14 <robotMachine+0x318>)
 8001b6a:	4602      	mov	r2, r0
 8001b6c:	0052      	lsls	r2, r2, #1
 8001b6e:	4402      	add	r2, r0
 8001b70:	00d3      	lsls	r3, r2, #3
 8001b72:	461a      	mov	r2, r3
 8001b74:	460b      	mov	r3, r1
 8001b76:	005b      	lsls	r3, r3, #1
 8001b78:	440b      	add	r3, r1
 8001b7a:	01db      	lsls	r3, r3, #7
 8001b7c:	4413      	add	r3, r2
 8001b7e:	4423      	add	r3, r4
 8001b80:	3310      	adds	r3, #16
 8001b82:	681b      	ldr	r3, [r3, #0]
 8001b84:	1c5c      	adds	r4, r3, #1
 8001b86:	4da3      	ldr	r5, [pc, #652]	; (8001e14 <robotMachine+0x318>)
 8001b88:	4602      	mov	r2, r0
 8001b8a:	0052      	lsls	r2, r2, #1
 8001b8c:	4402      	add	r2, r0
 8001b8e:	00d3      	lsls	r3, r2, #3
 8001b90:	461a      	mov	r2, r3
 8001b92:	460b      	mov	r3, r1
 8001b94:	005b      	lsls	r3, r3, #1
 8001b96:	440b      	add	r3, r1
 8001b98:	01db      	lsls	r3, r3, #7
 8001b9a:	4413      	add	r3, r2
 8001b9c:	442b      	add	r3, r5
 8001b9e:	3310      	adds	r3, #16
 8001ba0:	601c      	str	r4, [r3, #0]
		if (Map[actual.x][actual.y].visitado == 1) {
 8001ba2:	4b9a      	ldr	r3, [pc, #616]	; (8001e0c <robotMachine+0x310>)
 8001ba4:	6819      	ldr	r1, [r3, #0]
 8001ba6:	4b99      	ldr	r3, [pc, #612]	; (8001e0c <robotMachine+0x310>)
 8001ba8:	685b      	ldr	r3, [r3, #4]
 8001baa:	489a      	ldr	r0, [pc, #616]	; (8001e14 <robotMachine+0x318>)
 8001bac:	461a      	mov	r2, r3
 8001bae:	0052      	lsls	r2, r2, #1
 8001bb0:	441a      	add	r2, r3
 8001bb2:	00d3      	lsls	r3, r2, #3
 8001bb4:	461a      	mov	r2, r3
 8001bb6:	460b      	mov	r3, r1
 8001bb8:	005b      	lsls	r3, r3, #1
 8001bba:	440b      	add	r3, r1
 8001bbc:	01db      	lsls	r3, r3, #7
 8001bbe:	4413      	add	r3, r2
 8001bc0:	4403      	add	r3, r0
 8001bc2:	3310      	adds	r3, #16
 8001bc4:	681b      	ldr	r3, [r3, #0]
 8001bc6:	2b01      	cmp	r3, #1
 8001bc8:	f040 80bf 	bne.w	8001d4a <robotMachine+0x24e>
			runMotor(OFF, MOTOR_A);
 8001bcc:	2100      	movs	r1, #0
 8001bce:	2005      	movs	r0, #5
 8001bd0:	f001 fde0 	bl	8003794 <runMotor>
			runMotor(OFF, MOTOR_B);
 8001bd4:	2101      	movs	r1, #1
 8001bd6:	2005      	movs	r0, #5
 8001bd8:	f001 fddc 	bl	8003794 <runMotor>
			CreateNode(actual.x, actual.y);
 8001bdc:	4b8b      	ldr	r3, [pc, #556]	; (8001e0c <robotMachine+0x310>)
 8001bde:	681b      	ldr	r3, [r3, #0]
 8001be0:	4a8a      	ldr	r2, [pc, #552]	; (8001e0c <robotMachine+0x310>)
 8001be2:	6852      	ldr	r2, [r2, #4]
 8001be4:	4611      	mov	r1, r2
 8001be6:	4618      	mov	r0, r3
 8001be8:	f001 f972 	bl	8002ed0 <CreateNode>
			TX_BUFFER[0] = 'D';
 8001bec:	4b86      	ldr	r3, [pc, #536]	; (8001e08 <robotMachine+0x30c>)
 8001bee:	2244      	movs	r2, #68	; 0x44
 8001bf0:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(&huart1, TX_BUFFER, 1, 100);
 8001bf2:	2364      	movs	r3, #100	; 0x64
 8001bf4:	2201      	movs	r2, #1
 8001bf6:	4984      	ldr	r1, [pc, #528]	; (8001e08 <robotMachine+0x30c>)
 8001bf8:	4885      	ldr	r0, [pc, #532]	; (8001e10 <robotMachine+0x314>)
 8001bfa:	f004 fe1e 	bl	800683a <HAL_UART_Transmit>
			intUartSend(Sensors[1]);
 8001bfe:	4b86      	ldr	r3, [pc, #536]	; (8001e18 <robotMachine+0x31c>)
 8001c00:	685b      	ldr	r3, [r3, #4]
 8001c02:	4618      	mov	r0, r3
 8001c04:	f7ff fa34 	bl	8001070 <__aeabi_f2iz>
 8001c08:	4603      	mov	r3, r0
 8001c0a:	4618      	mov	r0, r3
 8001c0c:	f7ff fcd2 	bl	80015b4 <intUartSend>
			TX_BUFFER[0] = 'C';
 8001c10:	4b7d      	ldr	r3, [pc, #500]	; (8001e08 <robotMachine+0x30c>)
 8001c12:	2243      	movs	r2, #67	; 0x43
 8001c14:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(&huart1, TX_BUFFER, 1, 100);
 8001c16:	2364      	movs	r3, #100	; 0x64
 8001c18:	2201      	movs	r2, #1
 8001c1a:	497b      	ldr	r1, [pc, #492]	; (8001e08 <robotMachine+0x30c>)
 8001c1c:	487c      	ldr	r0, [pc, #496]	; (8001e10 <robotMachine+0x314>)
 8001c1e:	f004 fe0c 	bl	800683a <HAL_UART_Transmit>
			intUartSend(Sensors[2]);
 8001c22:	4b7d      	ldr	r3, [pc, #500]	; (8001e18 <robotMachine+0x31c>)
 8001c24:	689b      	ldr	r3, [r3, #8]
 8001c26:	4618      	mov	r0, r3
 8001c28:	f7ff fa22 	bl	8001070 <__aeabi_f2iz>
 8001c2c:	4603      	mov	r3, r0
 8001c2e:	4618      	mov	r0, r3
 8001c30:	f7ff fcc0 	bl	80015b4 <intUartSend>
			TX_BUFFER[0] = 'I';
 8001c34:	4b74      	ldr	r3, [pc, #464]	; (8001e08 <robotMachine+0x30c>)
 8001c36:	2249      	movs	r2, #73	; 0x49
 8001c38:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(&huart1, TX_BUFFER, 1, 100);
 8001c3a:	2364      	movs	r3, #100	; 0x64
 8001c3c:	2201      	movs	r2, #1
 8001c3e:	4972      	ldr	r1, [pc, #456]	; (8001e08 <robotMachine+0x30c>)
 8001c40:	4873      	ldr	r0, [pc, #460]	; (8001e10 <robotMachine+0x314>)
 8001c42:	f004 fdfa 	bl	800683a <HAL_UART_Transmit>
			intUartSend(Sensors[3]);
 8001c46:	4b74      	ldr	r3, [pc, #464]	; (8001e18 <robotMachine+0x31c>)
 8001c48:	68db      	ldr	r3, [r3, #12]
 8001c4a:	4618      	mov	r0, r3
 8001c4c:	f7ff fa10 	bl	8001070 <__aeabi_f2iz>
 8001c50:	4603      	mov	r3, r0
 8001c52:	4618      	mov	r0, r3
 8001c54:	f7ff fcae 	bl	80015b4 <intUartSend>
			TX_BUFFER[0] = 'D';
 8001c58:	4b6b      	ldr	r3, [pc, #428]	; (8001e08 <robotMachine+0x30c>)
 8001c5a:	2244      	movs	r2, #68	; 0x44
 8001c5c:	701a      	strb	r2, [r3, #0]
			TX_BUFFER[1] = Map[actual.x][actual.y].Lados[DERECHA] + '0';
 8001c5e:	4b6b      	ldr	r3, [pc, #428]	; (8001e0c <robotMachine+0x310>)
 8001c60:	6819      	ldr	r1, [r3, #0]
 8001c62:	4b6a      	ldr	r3, [pc, #424]	; (8001e0c <robotMachine+0x310>)
 8001c64:	685b      	ldr	r3, [r3, #4]
 8001c66:	486b      	ldr	r0, [pc, #428]	; (8001e14 <robotMachine+0x318>)
 8001c68:	461a      	mov	r2, r3
 8001c6a:	0052      	lsls	r2, r2, #1
 8001c6c:	441a      	add	r2, r3
 8001c6e:	00d3      	lsls	r3, r2, #3
 8001c70:	461a      	mov	r2, r3
 8001c72:	460b      	mov	r3, r1
 8001c74:	005b      	lsls	r3, r3, #1
 8001c76:	440b      	add	r3, r1
 8001c78:	01db      	lsls	r3, r3, #7
 8001c7a:	4413      	add	r3, r2
 8001c7c:	4403      	add	r3, r0
 8001c7e:	330c      	adds	r3, #12
 8001c80:	681b      	ldr	r3, [r3, #0]
 8001c82:	b2db      	uxtb	r3, r3
 8001c84:	3330      	adds	r3, #48	; 0x30
 8001c86:	b2da      	uxtb	r2, r3
 8001c88:	4b5f      	ldr	r3, [pc, #380]	; (8001e08 <robotMachine+0x30c>)
 8001c8a:	705a      	strb	r2, [r3, #1]
			TX_BUFFER[2] = '\n';
 8001c8c:	4b5e      	ldr	r3, [pc, #376]	; (8001e08 <robotMachine+0x30c>)
 8001c8e:	220a      	movs	r2, #10
 8001c90:	709a      	strb	r2, [r3, #2]
			TX_BUFFER[3] = 'C';
 8001c92:	4b5d      	ldr	r3, [pc, #372]	; (8001e08 <robotMachine+0x30c>)
 8001c94:	2243      	movs	r2, #67	; 0x43
 8001c96:	70da      	strb	r2, [r3, #3]
			TX_BUFFER[4] = Map[actual.x][actual.y].Lados[ADELANTE] + '0';
 8001c98:	4b5c      	ldr	r3, [pc, #368]	; (8001e0c <robotMachine+0x310>)
 8001c9a:	6819      	ldr	r1, [r3, #0]
 8001c9c:	4b5b      	ldr	r3, [pc, #364]	; (8001e0c <robotMachine+0x310>)
 8001c9e:	685b      	ldr	r3, [r3, #4]
 8001ca0:	485c      	ldr	r0, [pc, #368]	; (8001e14 <robotMachine+0x318>)
 8001ca2:	461a      	mov	r2, r3
 8001ca4:	0052      	lsls	r2, r2, #1
 8001ca6:	441a      	add	r2, r3
 8001ca8:	00d3      	lsls	r3, r2, #3
 8001caa:	461a      	mov	r2, r3
 8001cac:	460b      	mov	r3, r1
 8001cae:	005b      	lsls	r3, r3, #1
 8001cb0:	440b      	add	r3, r1
 8001cb2:	01db      	lsls	r3, r3, #7
 8001cb4:	4413      	add	r3, r2
 8001cb6:	4403      	add	r3, r0
 8001cb8:	681b      	ldr	r3, [r3, #0]
 8001cba:	b2db      	uxtb	r3, r3
 8001cbc:	3330      	adds	r3, #48	; 0x30
 8001cbe:	b2da      	uxtb	r2, r3
 8001cc0:	4b51      	ldr	r3, [pc, #324]	; (8001e08 <robotMachine+0x30c>)
 8001cc2:	711a      	strb	r2, [r3, #4]
			TX_BUFFER[5] = '\n';
 8001cc4:	4b50      	ldr	r3, [pc, #320]	; (8001e08 <robotMachine+0x30c>)
 8001cc6:	220a      	movs	r2, #10
 8001cc8:	715a      	strb	r2, [r3, #5]
			TX_BUFFER[6] = 'I';
 8001cca:	4b4f      	ldr	r3, [pc, #316]	; (8001e08 <robotMachine+0x30c>)
 8001ccc:	2249      	movs	r2, #73	; 0x49
 8001cce:	719a      	strb	r2, [r3, #6]
			TX_BUFFER[7] = Map[actual.x][actual.y].Lados[IZQUIERDA] + '0';
 8001cd0:	4b4e      	ldr	r3, [pc, #312]	; (8001e0c <robotMachine+0x310>)
 8001cd2:	6819      	ldr	r1, [r3, #0]
 8001cd4:	4b4d      	ldr	r3, [pc, #308]	; (8001e0c <robotMachine+0x310>)
 8001cd6:	685b      	ldr	r3, [r3, #4]
 8001cd8:	484e      	ldr	r0, [pc, #312]	; (8001e14 <robotMachine+0x318>)
 8001cda:	461a      	mov	r2, r3
 8001cdc:	0052      	lsls	r2, r2, #1
 8001cde:	441a      	add	r2, r3
 8001ce0:	00d3      	lsls	r3, r2, #3
 8001ce2:	461a      	mov	r2, r3
 8001ce4:	460b      	mov	r3, r1
 8001ce6:	005b      	lsls	r3, r3, #1
 8001ce8:	440b      	add	r3, r1
 8001cea:	01db      	lsls	r3, r3, #7
 8001cec:	4413      	add	r3, r2
 8001cee:	4403      	add	r3, r0
 8001cf0:	3304      	adds	r3, #4
 8001cf2:	681b      	ldr	r3, [r3, #0]
 8001cf4:	b2db      	uxtb	r3, r3
 8001cf6:	3330      	adds	r3, #48	; 0x30
 8001cf8:	b2da      	uxtb	r2, r3
 8001cfa:	4b43      	ldr	r3, [pc, #268]	; (8001e08 <robotMachine+0x30c>)
 8001cfc:	71da      	strb	r2, [r3, #7]
			TX_BUFFER[8] = '\n';
 8001cfe:	4b42      	ldr	r3, [pc, #264]	; (8001e08 <robotMachine+0x30c>)
 8001d00:	220a      	movs	r2, #10
 8001d02:	721a      	strb	r2, [r3, #8]
			TX_BUFFER[9] = 'A';
 8001d04:	4b40      	ldr	r3, [pc, #256]	; (8001e08 <robotMachine+0x30c>)
 8001d06:	2241      	movs	r2, #65	; 0x41
 8001d08:	725a      	strb	r2, [r3, #9]
			TX_BUFFER[10] = Map[actual.x][actual.y].Lados[ATRAS] + '0';
 8001d0a:	4b40      	ldr	r3, [pc, #256]	; (8001e0c <robotMachine+0x310>)
 8001d0c:	6819      	ldr	r1, [r3, #0]
 8001d0e:	4b3f      	ldr	r3, [pc, #252]	; (8001e0c <robotMachine+0x310>)
 8001d10:	685b      	ldr	r3, [r3, #4]
 8001d12:	4840      	ldr	r0, [pc, #256]	; (8001e14 <robotMachine+0x318>)
 8001d14:	461a      	mov	r2, r3
 8001d16:	0052      	lsls	r2, r2, #1
 8001d18:	441a      	add	r2, r3
 8001d1a:	00d3      	lsls	r3, r2, #3
 8001d1c:	461a      	mov	r2, r3
 8001d1e:	460b      	mov	r3, r1
 8001d20:	005b      	lsls	r3, r3, #1
 8001d22:	440b      	add	r3, r1
 8001d24:	01db      	lsls	r3, r3, #7
 8001d26:	4413      	add	r3, r2
 8001d28:	4403      	add	r3, r0
 8001d2a:	3308      	adds	r3, #8
 8001d2c:	681b      	ldr	r3, [r3, #0]
 8001d2e:	b2db      	uxtb	r3, r3
 8001d30:	3330      	adds	r3, #48	; 0x30
 8001d32:	b2da      	uxtb	r2, r3
 8001d34:	4b34      	ldr	r3, [pc, #208]	; (8001e08 <robotMachine+0x30c>)
 8001d36:	729a      	strb	r2, [r3, #10]
			TX_BUFFER[11] = '\n';
 8001d38:	4b33      	ldr	r3, [pc, #204]	; (8001e08 <robotMachine+0x30c>)
 8001d3a:	220a      	movs	r2, #10
 8001d3c:	72da      	strb	r2, [r3, #11]
			HAL_UART_Transmit(&huart1, TX_BUFFER, 12, 100);
 8001d3e:	2364      	movs	r3, #100	; 0x64
 8001d40:	220c      	movs	r2, #12
 8001d42:	4931      	ldr	r1, [pc, #196]	; (8001e08 <robotMachine+0x30c>)
 8001d44:	4832      	ldr	r0, [pc, #200]	; (8001e10 <robotMachine+0x314>)
 8001d46:	f004 fd78 	bl	800683a <HAL_UART_Transmit>
		TX_BUFFER[0] = 'D';
 8001d4a:	4b2f      	ldr	r3, [pc, #188]	; (8001e08 <robotMachine+0x30c>)
 8001d4c:	2244      	movs	r2, #68	; 0x44
 8001d4e:	701a      	strb	r2, [r3, #0]
		TX_BUFFER[1] = Map[actual.x][actual.y].Lados[DERECHA] + '0';
 8001d50:	4b2e      	ldr	r3, [pc, #184]	; (8001e0c <robotMachine+0x310>)
 8001d52:	6819      	ldr	r1, [r3, #0]
 8001d54:	4b2d      	ldr	r3, [pc, #180]	; (8001e0c <robotMachine+0x310>)
 8001d56:	685b      	ldr	r3, [r3, #4]
 8001d58:	482e      	ldr	r0, [pc, #184]	; (8001e14 <robotMachine+0x318>)
 8001d5a:	461a      	mov	r2, r3
 8001d5c:	0052      	lsls	r2, r2, #1
 8001d5e:	441a      	add	r2, r3
 8001d60:	00d3      	lsls	r3, r2, #3
 8001d62:	461a      	mov	r2, r3
 8001d64:	460b      	mov	r3, r1
 8001d66:	005b      	lsls	r3, r3, #1
 8001d68:	440b      	add	r3, r1
 8001d6a:	01db      	lsls	r3, r3, #7
 8001d6c:	4413      	add	r3, r2
 8001d6e:	4403      	add	r3, r0
 8001d70:	330c      	adds	r3, #12
 8001d72:	681b      	ldr	r3, [r3, #0]
 8001d74:	b2db      	uxtb	r3, r3
 8001d76:	3330      	adds	r3, #48	; 0x30
 8001d78:	b2da      	uxtb	r2, r3
 8001d7a:	4b23      	ldr	r3, [pc, #140]	; (8001e08 <robotMachine+0x30c>)
 8001d7c:	705a      	strb	r2, [r3, #1]
		TX_BUFFER[2] = '\n';
 8001d7e:	4b22      	ldr	r3, [pc, #136]	; (8001e08 <robotMachine+0x30c>)
 8001d80:	220a      	movs	r2, #10
 8001d82:	709a      	strb	r2, [r3, #2]
		TX_BUFFER[3] = 'C';
 8001d84:	4b20      	ldr	r3, [pc, #128]	; (8001e08 <robotMachine+0x30c>)
 8001d86:	2243      	movs	r2, #67	; 0x43
 8001d88:	70da      	strb	r2, [r3, #3]
		TX_BUFFER[4] = Map[actual.x][actual.y].Lados[ADELANTE] + '0';
 8001d8a:	4b20      	ldr	r3, [pc, #128]	; (8001e0c <robotMachine+0x310>)
 8001d8c:	6819      	ldr	r1, [r3, #0]
 8001d8e:	4b1f      	ldr	r3, [pc, #124]	; (8001e0c <robotMachine+0x310>)
 8001d90:	685b      	ldr	r3, [r3, #4]
 8001d92:	4820      	ldr	r0, [pc, #128]	; (8001e14 <robotMachine+0x318>)
 8001d94:	461a      	mov	r2, r3
 8001d96:	0052      	lsls	r2, r2, #1
 8001d98:	441a      	add	r2, r3
 8001d9a:	00d3      	lsls	r3, r2, #3
 8001d9c:	461a      	mov	r2, r3
 8001d9e:	460b      	mov	r3, r1
 8001da0:	005b      	lsls	r3, r3, #1
 8001da2:	440b      	add	r3, r1
 8001da4:	01db      	lsls	r3, r3, #7
 8001da6:	4413      	add	r3, r2
 8001da8:	4403      	add	r3, r0
 8001daa:	681b      	ldr	r3, [r3, #0]
 8001dac:	b2db      	uxtb	r3, r3
 8001dae:	3330      	adds	r3, #48	; 0x30
 8001db0:	b2da      	uxtb	r2, r3
 8001db2:	4b15      	ldr	r3, [pc, #84]	; (8001e08 <robotMachine+0x30c>)
 8001db4:	711a      	strb	r2, [r3, #4]
		TX_BUFFER[5] = '\n';
 8001db6:	4b14      	ldr	r3, [pc, #80]	; (8001e08 <robotMachine+0x30c>)
 8001db8:	220a      	movs	r2, #10
 8001dba:	715a      	strb	r2, [r3, #5]
		TX_BUFFER[6] = 'I';
 8001dbc:	4b12      	ldr	r3, [pc, #72]	; (8001e08 <robotMachine+0x30c>)
 8001dbe:	2249      	movs	r2, #73	; 0x49
 8001dc0:	719a      	strb	r2, [r3, #6]
		TX_BUFFER[7] = Map[actual.x][actual.y].Lados[IZQUIERDA] + '0';
 8001dc2:	4b12      	ldr	r3, [pc, #72]	; (8001e0c <robotMachine+0x310>)
 8001dc4:	6819      	ldr	r1, [r3, #0]
 8001dc6:	4b11      	ldr	r3, [pc, #68]	; (8001e0c <robotMachine+0x310>)
 8001dc8:	685b      	ldr	r3, [r3, #4]
 8001dca:	4812      	ldr	r0, [pc, #72]	; (8001e14 <robotMachine+0x318>)
 8001dcc:	461a      	mov	r2, r3
 8001dce:	0052      	lsls	r2, r2, #1
 8001dd0:	441a      	add	r2, r3
 8001dd2:	00d3      	lsls	r3, r2, #3
 8001dd4:	461a      	mov	r2, r3
 8001dd6:	460b      	mov	r3, r1
 8001dd8:	005b      	lsls	r3, r3, #1
 8001dda:	440b      	add	r3, r1
 8001ddc:	01db      	lsls	r3, r3, #7
 8001dde:	4413      	add	r3, r2
 8001de0:	4403      	add	r3, r0
 8001de2:	3304      	adds	r3, #4
 8001de4:	681b      	ldr	r3, [r3, #0]
 8001de6:	b2db      	uxtb	r3, r3
 8001de8:	3330      	adds	r3, #48	; 0x30
 8001dea:	b2da      	uxtb	r2, r3
 8001dec:	4b06      	ldr	r3, [pc, #24]	; (8001e08 <robotMachine+0x30c>)
 8001dee:	71da      	strb	r2, [r3, #7]
		TX_BUFFER[8] = '\n';
 8001df0:	4b05      	ldr	r3, [pc, #20]	; (8001e08 <robotMachine+0x30c>)
 8001df2:	220a      	movs	r2, #10
 8001df4:	721a      	strb	r2, [r3, #8]
		TX_BUFFER[9] = 'A';
 8001df6:	4b04      	ldr	r3, [pc, #16]	; (8001e08 <robotMachine+0x30c>)
 8001df8:	2241      	movs	r2, #65	; 0x41
 8001dfa:	725a      	strb	r2, [r3, #9]
		TX_BUFFER[10] = Map[actual.x][actual.y].Lados[ATRAS] + '0';
 8001dfc:	4b03      	ldr	r3, [pc, #12]	; (8001e0c <robotMachine+0x310>)
 8001dfe:	6819      	ldr	r1, [r3, #0]
 8001e00:	4b02      	ldr	r3, [pc, #8]	; (8001e0c <robotMachine+0x310>)
 8001e02:	685b      	ldr	r3, [r3, #4]
 8001e04:	e00a      	b.n	8001e1c <robotMachine+0x320>
 8001e06:	bf00      	nop
 8001e08:	2000121c 	.word	0x2000121c
 8001e0c:	200012b0 	.word	0x200012b0
 8001e10:	20002bc4 	.word	0x20002bc4
 8001e14:	200012c0 	.word	0x200012c0
 8001e18:	200011dc 	.word	0x200011dc
 8001e1c:	489c      	ldr	r0, [pc, #624]	; (8002090 <robotMachine+0x594>)
 8001e1e:	461a      	mov	r2, r3
 8001e20:	0052      	lsls	r2, r2, #1
 8001e22:	441a      	add	r2, r3
 8001e24:	00d3      	lsls	r3, r2, #3
 8001e26:	461a      	mov	r2, r3
 8001e28:	460b      	mov	r3, r1
 8001e2a:	005b      	lsls	r3, r3, #1
 8001e2c:	440b      	add	r3, r1
 8001e2e:	01db      	lsls	r3, r3, #7
 8001e30:	4413      	add	r3, r2
 8001e32:	4403      	add	r3, r0
 8001e34:	3308      	adds	r3, #8
 8001e36:	681b      	ldr	r3, [r3, #0]
 8001e38:	b2db      	uxtb	r3, r3
 8001e3a:	3330      	adds	r3, #48	; 0x30
 8001e3c:	b2da      	uxtb	r2, r3
 8001e3e:	4b95      	ldr	r3, [pc, #596]	; (8002094 <robotMachine+0x598>)
 8001e40:	729a      	strb	r2, [r3, #10]
		TX_BUFFER[11] = '\n';
 8001e42:	4b94      	ldr	r3, [pc, #592]	; (8002094 <robotMachine+0x598>)
 8001e44:	220a      	movs	r2, #10
 8001e46:	72da      	strb	r2, [r3, #11]
		HAL_UART_Transmit(&huart1, TX_BUFFER, 12, 100);
 8001e48:	2364      	movs	r3, #100	; 0x64
 8001e4a:	220c      	movs	r2, #12
 8001e4c:	4991      	ldr	r1, [pc, #580]	; (8002094 <robotMachine+0x598>)
 8001e4e:	4892      	ldr	r0, [pc, #584]	; (8002098 <robotMachine+0x59c>)
 8001e50:	f004 fcf3 	bl	800683a <HAL_UART_Transmit>
		valueCNY = Sensors[0];
 8001e54:	4b91      	ldr	r3, [pc, #580]	; (800209c <robotMachine+0x5a0>)
 8001e56:	681b      	ldr	r3, [r3, #0]
 8001e58:	4618      	mov	r0, r3
 8001e5a:	f7ff f909 	bl	8001070 <__aeabi_f2iz>
 8001e5e:	4603      	mov	r3, r0
 8001e60:	4a8f      	ldr	r2, [pc, #572]	; (80020a0 <robotMachine+0x5a4>)
 8001e62:	6013      	str	r3, [r2, #0]
		if (valueCNY == BLANCO) {
 8001e64:	4b8e      	ldr	r3, [pc, #568]	; (80020a0 <robotMachine+0x5a4>)
 8001e66:	681b      	ldr	r3, [r3, #0]
 8001e68:	2b00      	cmp	r3, #0
 8001e6a:	d116      	bne.n	8001e9a <robotMachine+0x39e>
			Map[actual.x][actual.y].final = 1;
 8001e6c:	4b8d      	ldr	r3, [pc, #564]	; (80020a4 <robotMachine+0x5a8>)
 8001e6e:	6819      	ldr	r1, [r3, #0]
 8001e70:	4b8c      	ldr	r3, [pc, #560]	; (80020a4 <robotMachine+0x5a8>)
 8001e72:	685b      	ldr	r3, [r3, #4]
 8001e74:	4886      	ldr	r0, [pc, #536]	; (8002090 <robotMachine+0x594>)
 8001e76:	461a      	mov	r2, r3
 8001e78:	0052      	lsls	r2, r2, #1
 8001e7a:	441a      	add	r2, r3
 8001e7c:	00d3      	lsls	r3, r2, #3
 8001e7e:	461a      	mov	r2, r3
 8001e80:	460b      	mov	r3, r1
 8001e82:	005b      	lsls	r3, r3, #1
 8001e84:	440b      	add	r3, r1
 8001e86:	01db      	lsls	r3, r3, #7
 8001e88:	4413      	add	r3, r2
 8001e8a:	4403      	add	r3, r0
 8001e8c:	3314      	adds	r3, #20
 8001e8e:	2201      	movs	r2, #1
 8001e90:	601a      	str	r2, [r3, #0]
			finishFlag = 1;
 8001e92:	4b85      	ldr	r3, [pc, #532]	; (80020a8 <robotMachine+0x5ac>)
 8001e94:	2201      	movs	r2, #1
 8001e96:	601a      	str	r2, [r3, #0]
 8001e98:	e015      	b.n	8001ec6 <robotMachine+0x3ca>
			Map[actual.x][actual.y].final = 0;
 8001e9a:	4b82      	ldr	r3, [pc, #520]	; (80020a4 <robotMachine+0x5a8>)
 8001e9c:	6819      	ldr	r1, [r3, #0]
 8001e9e:	4b81      	ldr	r3, [pc, #516]	; (80020a4 <robotMachine+0x5a8>)
 8001ea0:	685b      	ldr	r3, [r3, #4]
 8001ea2:	487b      	ldr	r0, [pc, #492]	; (8002090 <robotMachine+0x594>)
 8001ea4:	461a      	mov	r2, r3
 8001ea6:	0052      	lsls	r2, r2, #1
 8001ea8:	441a      	add	r2, r3
 8001eaa:	00d3      	lsls	r3, r2, #3
 8001eac:	461a      	mov	r2, r3
 8001eae:	460b      	mov	r3, r1
 8001eb0:	005b      	lsls	r3, r3, #1
 8001eb2:	440b      	add	r3, r1
 8001eb4:	01db      	lsls	r3, r3, #7
 8001eb6:	4413      	add	r3, r2
 8001eb8:	4403      	add	r3, r0
 8001eba:	3314      	adds	r3, #20
 8001ebc:	2200      	movs	r2, #0
 8001ebe:	601a      	str	r2, [r3, #0]
			robotState = CHOOSING;
 8001ec0:	4b7a      	ldr	r3, [pc, #488]	; (80020ac <robotMachine+0x5b0>)
 8001ec2:	2201      	movs	r2, #1
 8001ec4:	601a      	str	r2, [r3, #0]
		PrintMap();
 8001ec6:	f001 f8e3 	bl	8003090 <PrintMap>
		break;
 8001eca:	e0df      	b.n	800208c <robotMachine+0x590>
		movimiento = ChooseNextNode(actual.x, actual.y);
 8001ecc:	4b75      	ldr	r3, [pc, #468]	; (80020a4 <robotMachine+0x5a8>)
 8001ece:	681b      	ldr	r3, [r3, #0]
 8001ed0:	4a74      	ldr	r2, [pc, #464]	; (80020a4 <robotMachine+0x5a8>)
 8001ed2:	6852      	ldr	r2, [r2, #4]
 8001ed4:	4611      	mov	r1, r2
 8001ed6:	4618      	mov	r0, r3
 8001ed8:	f000 fa44 	bl	8002364 <ChooseNextNode>
 8001edc:	4603      	mov	r3, r0
 8001ede:	4a74      	ldr	r2, [pc, #464]	; (80020b0 <robotMachine+0x5b4>)
 8001ee0:	6013      	str	r3, [r2, #0]
		TX_BUFFER[0] = 'M';
 8001ee2:	4b6c      	ldr	r3, [pc, #432]	; (8002094 <robotMachine+0x598>)
 8001ee4:	224d      	movs	r2, #77	; 0x4d
 8001ee6:	701a      	strb	r2, [r3, #0]
		TX_BUFFER[1] = movimiento + '0';
 8001ee8:	4b71      	ldr	r3, [pc, #452]	; (80020b0 <robotMachine+0x5b4>)
 8001eea:	681b      	ldr	r3, [r3, #0]
 8001eec:	b2db      	uxtb	r3, r3
 8001eee:	3330      	adds	r3, #48	; 0x30
 8001ef0:	b2da      	uxtb	r2, r3
 8001ef2:	4b68      	ldr	r3, [pc, #416]	; (8002094 <robotMachine+0x598>)
 8001ef4:	705a      	strb	r2, [r3, #1]
		TX_BUFFER[2] = '\n';
 8001ef6:	4b67      	ldr	r3, [pc, #412]	; (8002094 <robotMachine+0x598>)
 8001ef8:	220a      	movs	r2, #10
 8001efa:	709a      	strb	r2, [r3, #2]
		HAL_UART_Transmit(&huart1, TX_BUFFER, 3, 100);
 8001efc:	2364      	movs	r3, #100	; 0x64
 8001efe:	2203      	movs	r2, #3
 8001f00:	4964      	ldr	r1, [pc, #400]	; (8002094 <robotMachine+0x598>)
 8001f02:	4865      	ldr	r0, [pc, #404]	; (8002098 <robotMachine+0x59c>)
 8001f04:	f004 fc99 	bl	800683a <HAL_UART_Transmit>
		if (movimiento == IZQUIERDA) {
 8001f08:	4b69      	ldr	r3, [pc, #420]	; (80020b0 <robotMachine+0x5b4>)
 8001f0a:	681b      	ldr	r3, [r3, #0]
 8001f0c:	2b01      	cmp	r3, #1
 8001f0e:	d138      	bne.n	8001f82 <robotMachine+0x486>
			if (Map[actual.x][actual.y].Lados[direcciones[ATRAS]] != 1) {
 8001f10:	4b64      	ldr	r3, [pc, #400]	; (80020a4 <robotMachine+0x5a8>)
 8001f12:	6819      	ldr	r1, [r3, #0]
 8001f14:	4b63      	ldr	r3, [pc, #396]	; (80020a4 <robotMachine+0x5a8>)
 8001f16:	685b      	ldr	r3, [r3, #4]
 8001f18:	4a66      	ldr	r2, [pc, #408]	; (80020b4 <robotMachine+0x5b8>)
 8001f1a:	6890      	ldr	r0, [r2, #8]
 8001f1c:	4c5c      	ldr	r4, [pc, #368]	; (8002090 <robotMachine+0x594>)
 8001f1e:	461a      	mov	r2, r3
 8001f20:	0052      	lsls	r2, r2, #1
 8001f22:	441a      	add	r2, r3
 8001f24:	0053      	lsls	r3, r2, #1
 8001f26:	461a      	mov	r2, r3
 8001f28:	460b      	mov	r3, r1
 8001f2a:	005b      	lsls	r3, r3, #1
 8001f2c:	440b      	add	r3, r1
 8001f2e:	015b      	lsls	r3, r3, #5
 8001f30:	4413      	add	r3, r2
 8001f32:	4403      	add	r3, r0
 8001f34:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8001f38:	2b01      	cmp	r3, #1
 8001f3a:	d014      	beq.n	8001f66 <robotMachine+0x46a>
				Map[actual.x][actual.y].Lados[direcciones[ATRAS]] = 2;
 8001f3c:	4b59      	ldr	r3, [pc, #356]	; (80020a4 <robotMachine+0x5a8>)
 8001f3e:	6819      	ldr	r1, [r3, #0]
 8001f40:	4b58      	ldr	r3, [pc, #352]	; (80020a4 <robotMachine+0x5a8>)
 8001f42:	685b      	ldr	r3, [r3, #4]
 8001f44:	4a5b      	ldr	r2, [pc, #364]	; (80020b4 <robotMachine+0x5b8>)
 8001f46:	6890      	ldr	r0, [r2, #8]
 8001f48:	4c51      	ldr	r4, [pc, #324]	; (8002090 <robotMachine+0x594>)
 8001f4a:	461a      	mov	r2, r3
 8001f4c:	0052      	lsls	r2, r2, #1
 8001f4e:	441a      	add	r2, r3
 8001f50:	0053      	lsls	r3, r2, #1
 8001f52:	461a      	mov	r2, r3
 8001f54:	460b      	mov	r3, r1
 8001f56:	005b      	lsls	r3, r3, #1
 8001f58:	440b      	add	r3, r1
 8001f5a:	015b      	lsls	r3, r3, #5
 8001f5c:	4413      	add	r3, r2
 8001f5e:	4403      	add	r3, r0
 8001f60:	2202      	movs	r2, #2
 8001f62:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
			moveNode(direcciones[IZQUIERDA]);
 8001f66:	4b53      	ldr	r3, [pc, #332]	; (80020b4 <robotMachine+0x5b8>)
 8001f68:	685b      	ldr	r3, [r3, #4]
 8001f6a:	4618      	mov	r0, r3
 8001f6c:	f000 fe1e 	bl	8002bac <moveNode>
			rotateAxis(IZQUIERDA);
 8001f70:	2001      	movs	r0, #1
 8001f72:	f001 f825 	bl	8002fc0 <rotateAxis>
			counter--;
 8001f76:	4b50      	ldr	r3, [pc, #320]	; (80020b8 <robotMachine+0x5bc>)
 8001f78:	681b      	ldr	r3, [r3, #0]
 8001f7a:	3b01      	subs	r3, #1
 8001f7c:	4a4e      	ldr	r2, [pc, #312]	; (80020b8 <robotMachine+0x5bc>)
 8001f7e:	6013      	str	r3, [r2, #0]
 8001f80:	e055      	b.n	800202e <robotMachine+0x532>
		} else if (movimiento == DERECHA) {
 8001f82:	4b4b      	ldr	r3, [pc, #300]	; (80020b0 <robotMachine+0x5b4>)
 8001f84:	681b      	ldr	r3, [r3, #0]
 8001f86:	2b03      	cmp	r3, #3
 8001f88:	d138      	bne.n	8001ffc <robotMachine+0x500>
			if (Map[actual.x][actual.y].Lados[direcciones[ATRAS]] != 1) {
 8001f8a:	4b46      	ldr	r3, [pc, #280]	; (80020a4 <robotMachine+0x5a8>)
 8001f8c:	6819      	ldr	r1, [r3, #0]
 8001f8e:	4b45      	ldr	r3, [pc, #276]	; (80020a4 <robotMachine+0x5a8>)
 8001f90:	685b      	ldr	r3, [r3, #4]
 8001f92:	4a48      	ldr	r2, [pc, #288]	; (80020b4 <robotMachine+0x5b8>)
 8001f94:	6890      	ldr	r0, [r2, #8]
 8001f96:	4c3e      	ldr	r4, [pc, #248]	; (8002090 <robotMachine+0x594>)
 8001f98:	461a      	mov	r2, r3
 8001f9a:	0052      	lsls	r2, r2, #1
 8001f9c:	441a      	add	r2, r3
 8001f9e:	0053      	lsls	r3, r2, #1
 8001fa0:	461a      	mov	r2, r3
 8001fa2:	460b      	mov	r3, r1
 8001fa4:	005b      	lsls	r3, r3, #1
 8001fa6:	440b      	add	r3, r1
 8001fa8:	015b      	lsls	r3, r3, #5
 8001faa:	4413      	add	r3, r2
 8001fac:	4403      	add	r3, r0
 8001fae:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8001fb2:	2b01      	cmp	r3, #1
 8001fb4:	d014      	beq.n	8001fe0 <robotMachine+0x4e4>
				Map[actual.x][actual.y].Lados[direcciones[ATRAS]] = 2;
 8001fb6:	4b3b      	ldr	r3, [pc, #236]	; (80020a4 <robotMachine+0x5a8>)
 8001fb8:	6819      	ldr	r1, [r3, #0]
 8001fba:	4b3a      	ldr	r3, [pc, #232]	; (80020a4 <robotMachine+0x5a8>)
 8001fbc:	685b      	ldr	r3, [r3, #4]
 8001fbe:	4a3d      	ldr	r2, [pc, #244]	; (80020b4 <robotMachine+0x5b8>)
 8001fc0:	6890      	ldr	r0, [r2, #8]
 8001fc2:	4c33      	ldr	r4, [pc, #204]	; (8002090 <robotMachine+0x594>)
 8001fc4:	461a      	mov	r2, r3
 8001fc6:	0052      	lsls	r2, r2, #1
 8001fc8:	441a      	add	r2, r3
 8001fca:	0053      	lsls	r3, r2, #1
 8001fcc:	461a      	mov	r2, r3
 8001fce:	460b      	mov	r3, r1
 8001fd0:	005b      	lsls	r3, r3, #1
 8001fd2:	440b      	add	r3, r1
 8001fd4:	015b      	lsls	r3, r3, #5
 8001fd6:	4413      	add	r3, r2
 8001fd8:	4403      	add	r3, r0
 8001fda:	2202      	movs	r2, #2
 8001fdc:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
			moveNode(direcciones[DERECHA]);
 8001fe0:	4b34      	ldr	r3, [pc, #208]	; (80020b4 <robotMachine+0x5b8>)
 8001fe2:	68db      	ldr	r3, [r3, #12]
 8001fe4:	4618      	mov	r0, r3
 8001fe6:	f000 fde1 	bl	8002bac <moveNode>
			rotateAxis(DERECHA);
 8001fea:	2003      	movs	r0, #3
 8001fec:	f000 ffe8 	bl	8002fc0 <rotateAxis>
			counter++;
 8001ff0:	4b31      	ldr	r3, [pc, #196]	; (80020b8 <robotMachine+0x5bc>)
 8001ff2:	681b      	ldr	r3, [r3, #0]
 8001ff4:	3301      	adds	r3, #1
 8001ff6:	4a30      	ldr	r2, [pc, #192]	; (80020b8 <robotMachine+0x5bc>)
 8001ff8:	6013      	str	r3, [r2, #0]
 8001ffa:	e018      	b.n	800202e <robotMachine+0x532>
		} else if (movimiento == ATRAS) {
 8001ffc:	4b2c      	ldr	r3, [pc, #176]	; (80020b0 <robotMachine+0x5b4>)
 8001ffe:	681b      	ldr	r3, [r3, #0]
 8002000:	2b02      	cmp	r3, #2
 8002002:	d114      	bne.n	800202e <robotMachine+0x532>
			counter++;
 8002004:	4b2c      	ldr	r3, [pc, #176]	; (80020b8 <robotMachine+0x5bc>)
 8002006:	681b      	ldr	r3, [r3, #0]
 8002008:	3301      	adds	r3, #1
 800200a:	4a2b      	ldr	r2, [pc, #172]	; (80020b8 <robotMachine+0x5bc>)
 800200c:	6013      	str	r3, [r2, #0]
			counter++;
 800200e:	4b2a      	ldr	r3, [pc, #168]	; (80020b8 <robotMachine+0x5bc>)
 8002010:	681b      	ldr	r3, [r3, #0]
 8002012:	3301      	adds	r3, #1
 8002014:	4a28      	ldr	r2, [pc, #160]	; (80020b8 <robotMachine+0x5bc>)
 8002016:	6013      	str	r3, [r2, #0]
			moveNode(direcciones[ATRAS]);
 8002018:	4b26      	ldr	r3, [pc, #152]	; (80020b4 <robotMachine+0x5b8>)
 800201a:	689b      	ldr	r3, [r3, #8]
 800201c:	4618      	mov	r0, r3
 800201e:	f000 fdc5 	bl	8002bac <moveNode>
			rotateAxis(DERECHA);
 8002022:	2003      	movs	r0, #3
 8002024:	f000 ffcc 	bl	8002fc0 <rotateAxis>
			rotateAxis(DERECHA);
 8002028:	2003      	movs	r0, #3
 800202a:	f000 ffc9 	bl	8002fc0 <rotateAxis>
		TX_BUFFER[0] = '*';
 800202e:	4b19      	ldr	r3, [pc, #100]	; (8002094 <robotMachine+0x598>)
 8002030:	222a      	movs	r2, #42	; 0x2a
 8002032:	701a      	strb	r2, [r3, #0]
		TX_BUFFER[1] = '*';
 8002034:	4b17      	ldr	r3, [pc, #92]	; (8002094 <robotMachine+0x598>)
 8002036:	222a      	movs	r2, #42	; 0x2a
 8002038:	705a      	strb	r2, [r3, #1]
		TX_BUFFER[2] = '\n';
 800203a:	4b16      	ldr	r3, [pc, #88]	; (8002094 <robotMachine+0x598>)
 800203c:	220a      	movs	r2, #10
 800203e:	709a      	strb	r2, [r3, #2]
		HAL_UART_Transmit(&huart1, TX_BUFFER, 3, 100);
 8002040:	2364      	movs	r3, #100	; 0x64
 8002042:	2203      	movs	r2, #3
 8002044:	4913      	ldr	r1, [pc, #76]	; (8002094 <robotMachine+0x598>)
 8002046:	4814      	ldr	r0, [pc, #80]	; (8002098 <robotMachine+0x59c>)
 8002048:	f004 fbf7 	bl	800683a <HAL_UART_Transmit>
		movimientoFlag = 0;
 800204c:	4b1b      	ldr	r3, [pc, #108]	; (80020bc <robotMachine+0x5c0>)
 800204e:	2200      	movs	r2, #0
 8002050:	601a      	str	r2, [r3, #0]
		ticksNow = HAL_GetTick();
 8002052:	f002 f85d 	bl	8004110 <HAL_GetTick>
 8002056:	4603      	mov	r3, r0
 8002058:	461a      	mov	r2, r3
 800205a:	4b19      	ldr	r3, [pc, #100]	; (80020c0 <robotMachine+0x5c4>)
 800205c:	601a      	str	r2, [r3, #0]
		robotState = MOVING;
 800205e:	4b13      	ldr	r3, [pc, #76]	; (80020ac <robotMachine+0x5b0>)
 8002060:	2202      	movs	r2, #2
 8002062:	601a      	str	r2, [r3, #0]
		break;
 8002064:	e012      	b.n	800208c <robotMachine+0x590>
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 8002066:	2200      	movs	r2, #0
 8002068:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800206c:	4815      	ldr	r0, [pc, #84]	; (80020c4 <robotMachine+0x5c8>)
 800206e:	f003 f962 	bl	8005336 <HAL_GPIO_WritePin>
		movementMachine(movimiento);
 8002072:	4b0f      	ldr	r3, [pc, #60]	; (80020b0 <robotMachine+0x5b4>)
 8002074:	681b      	ldr	r3, [r3, #0]
 8002076:	4618      	mov	r0, r3
 8002078:	f000 fdca 	bl	8002c10 <movementMachine>
		if (movimientoFlag == 1) {
 800207c:	4b0f      	ldr	r3, [pc, #60]	; (80020bc <robotMachine+0x5c0>)
 800207e:	681b      	ldr	r3, [r3, #0]
 8002080:	2b01      	cmp	r3, #1
 8002082:	d102      	bne.n	800208a <robotMachine+0x58e>
			robotState = READING;
 8002084:	4b09      	ldr	r3, [pc, #36]	; (80020ac <robotMachine+0x5b0>)
 8002086:	2200      	movs	r2, #0
 8002088:	601a      	str	r2, [r3, #0]
		break;
 800208a:	bf00      	nop
}
 800208c:	bf00      	nop
 800208e:	bdb0      	pop	{r4, r5, r7, pc}
 8002090:	200012c0 	.word	0x200012c0
 8002094:	2000121c 	.word	0x2000121c
 8002098:	20002bc4 	.word	0x20002bc4
 800209c:	200011dc 	.word	0x200011dc
 80020a0:	20001250 	.word	0x20001250
 80020a4:	200012b0 	.word	0x200012b0
 80020a8:	20001248 	.word	0x20001248
 80020ac:	20001290 	.word	0x20001290
 80020b0:	20001244 	.word	0x20001244
 80020b4:	200011ec 	.word	0x200011ec
 80020b8:	20001258 	.word	0x20001258
 80020bc:	2000124c 	.word	0x2000124c
 80020c0:	20001234 	.word	0x20001234
 80020c4:	40011000 	.word	0x40011000

080020c8 <runDirections>:

void runDirections(char moves[25]) {
 80020c8:	b580      	push	{r7, lr}
 80020ca:	b082      	sub	sp, #8
 80020cc:	af00      	add	r7, sp, #0
 80020ce:	6078      	str	r0, [r7, #4]
	if (moves[m] == 'a') {
 80020d0:	4b20      	ldr	r3, [pc, #128]	; (8002154 <runDirections+0x8c>)
 80020d2:	681b      	ldr	r3, [r3, #0]
 80020d4:	461a      	mov	r2, r3
 80020d6:	687b      	ldr	r3, [r7, #4]
 80020d8:	4413      	add	r3, r2
 80020da:	781b      	ldrb	r3, [r3, #0]
 80020dc:	2b61      	cmp	r3, #97	; 0x61
 80020de:	d103      	bne.n	80020e8 <runDirections+0x20>
		movementMachine(ADELANTE);
 80020e0:	2000      	movs	r0, #0
 80020e2:	f000 fd95 	bl	8002c10 <movementMachine>
 80020e6:	e016      	b.n	8002116 <runDirections+0x4e>
	} else if (moves[m] == 'd') {
 80020e8:	4b1a      	ldr	r3, [pc, #104]	; (8002154 <runDirections+0x8c>)
 80020ea:	681b      	ldr	r3, [r3, #0]
 80020ec:	461a      	mov	r2, r3
 80020ee:	687b      	ldr	r3, [r7, #4]
 80020f0:	4413      	add	r3, r2
 80020f2:	781b      	ldrb	r3, [r3, #0]
 80020f4:	2b64      	cmp	r3, #100	; 0x64
 80020f6:	d103      	bne.n	8002100 <runDirections+0x38>
		movementMachine(DERECHA);
 80020f8:	2003      	movs	r0, #3
 80020fa:	f000 fd89 	bl	8002c10 <movementMachine>
 80020fe:	e00a      	b.n	8002116 <runDirections+0x4e>
	} else if (moves[m] == 'i') {
 8002100:	4b14      	ldr	r3, [pc, #80]	; (8002154 <runDirections+0x8c>)
 8002102:	681b      	ldr	r3, [r3, #0]
 8002104:	461a      	mov	r2, r3
 8002106:	687b      	ldr	r3, [r7, #4]
 8002108:	4413      	add	r3, r2
 800210a:	781b      	ldrb	r3, [r3, #0]
 800210c:	2b69      	cmp	r3, #105	; 0x69
 800210e:	d102      	bne.n	8002116 <runDirections+0x4e>
		movementMachine(IZQUIERDA);
 8002110:	2001      	movs	r0, #1
 8002112:	f000 fd7d 	bl	8002c10 <movementMachine>
	}/* else {
	 movementMachine(SUPER);
	 }*/
	TX_BUFFER[0] = moves[m];
 8002116:	4b0f      	ldr	r3, [pc, #60]	; (8002154 <runDirections+0x8c>)
 8002118:	681b      	ldr	r3, [r3, #0]
 800211a:	461a      	mov	r2, r3
 800211c:	687b      	ldr	r3, [r7, #4]
 800211e:	4413      	add	r3, r2
 8002120:	781a      	ldrb	r2, [r3, #0]
 8002122:	4b0d      	ldr	r3, [pc, #52]	; (8002158 <runDirections+0x90>)
 8002124:	701a      	strb	r2, [r3, #0]
	HAL_UART_Transmit(&huart1, TX_BUFFER, 1, 100);
 8002126:	2364      	movs	r3, #100	; 0x64
 8002128:	2201      	movs	r2, #1
 800212a:	490b      	ldr	r1, [pc, #44]	; (8002158 <runDirections+0x90>)
 800212c:	480b      	ldr	r0, [pc, #44]	; (800215c <runDirections+0x94>)
 800212e:	f004 fb84 	bl	800683a <HAL_UART_Transmit>
	if (movimientoFlag == 1) {
 8002132:	4b0b      	ldr	r3, [pc, #44]	; (8002160 <runDirections+0x98>)
 8002134:	681b      	ldr	r3, [r3, #0]
 8002136:	2b01      	cmp	r3, #1
 8002138:	d107      	bne.n	800214a <runDirections+0x82>
		m++;
 800213a:	4b06      	ldr	r3, [pc, #24]	; (8002154 <runDirections+0x8c>)
 800213c:	681b      	ldr	r3, [r3, #0]
 800213e:	3301      	adds	r3, #1
 8002140:	4a04      	ldr	r2, [pc, #16]	; (8002154 <runDirections+0x8c>)
 8002142:	6013      	str	r3, [r2, #0]
		movimientoFlag = 0;
 8002144:	4b06      	ldr	r3, [pc, #24]	; (8002160 <runDirections+0x98>)
 8002146:	2200      	movs	r2, #0
 8002148:	601a      	str	r2, [r3, #0]
	}
}
 800214a:	bf00      	nop
 800214c:	3708      	adds	r7, #8
 800214e:	46bd      	mov	sp, r7
 8002150:	bd80      	pop	{r7, pc}
 8002152:	bf00      	nop
 8002154:	2000123c 	.word	0x2000123c
 8002158:	2000121c 	.word	0x2000121c
 800215c:	20002bc4 	.word	0x20002bc4
 8002160:	2000124c 	.word	0x2000124c

08002164 <addDirection>:

void addDirection(int x, int y) {
 8002164:	b590      	push	{r4, r7, lr}
 8002166:	b083      	sub	sp, #12
 8002168:	af00      	add	r7, sp, #0
 800216a:	6078      	str	r0, [r7, #4]
 800216c:	6039      	str	r1, [r7, #0]

	if (Map[x][y].Lados[direcciones[ADELANTE]] != 1) {
 800216e:	4b77      	ldr	r3, [pc, #476]	; (800234c <addDirection+0x1e8>)
 8002170:	6818      	ldr	r0, [r3, #0]
 8002172:	4c77      	ldr	r4, [pc, #476]	; (8002350 <addDirection+0x1ec>)
 8002174:	683b      	ldr	r3, [r7, #0]
 8002176:	6879      	ldr	r1, [r7, #4]
 8002178:	461a      	mov	r2, r3
 800217a:	0052      	lsls	r2, r2, #1
 800217c:	441a      	add	r2, r3
 800217e:	0053      	lsls	r3, r2, #1
 8002180:	461a      	mov	r2, r3
 8002182:	460b      	mov	r3, r1
 8002184:	005b      	lsls	r3, r3, #1
 8002186:	440b      	add	r3, r1
 8002188:	015b      	lsls	r3, r3, #5
 800218a:	4413      	add	r3, r2
 800218c:	4403      	add	r3, r0
 800218e:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8002192:	2b01      	cmp	r3, #1
 8002194:	d01b      	beq.n	80021ce <addDirection+0x6a>
		Map[x][y].Lados[direcciones[ADELANTE]] = 2;
 8002196:	4b6d      	ldr	r3, [pc, #436]	; (800234c <addDirection+0x1e8>)
 8002198:	6818      	ldr	r0, [r3, #0]
 800219a:	4c6d      	ldr	r4, [pc, #436]	; (8002350 <addDirection+0x1ec>)
 800219c:	683b      	ldr	r3, [r7, #0]
 800219e:	6879      	ldr	r1, [r7, #4]
 80021a0:	461a      	mov	r2, r3
 80021a2:	0052      	lsls	r2, r2, #1
 80021a4:	441a      	add	r2, r3
 80021a6:	0053      	lsls	r3, r2, #1
 80021a8:	461a      	mov	r2, r3
 80021aa:	460b      	mov	r3, r1
 80021ac:	005b      	lsls	r3, r3, #1
 80021ae:	440b      	add	r3, r1
 80021b0:	015b      	lsls	r3, r3, #5
 80021b2:	4413      	add	r3, r2
 80021b4:	4403      	add	r3, r0
 80021b6:	2202      	movs	r2, #2
 80021b8:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
		moveNode(ADELANTE);
 80021bc:	2000      	movs	r0, #0
 80021be:	f000 fcf5 	bl	8002bac <moveNode>
		directions[directionsSize] = 'a';
 80021c2:	4b64      	ldr	r3, [pc, #400]	; (8002354 <addDirection+0x1f0>)
 80021c4:	681b      	ldr	r3, [r3, #0]
 80021c6:	4a64      	ldr	r2, [pc, #400]	; (8002358 <addDirection+0x1f4>)
 80021c8:	2161      	movs	r1, #97	; 0x61
 80021ca:	54d1      	strb	r1, [r2, r3]
 80021cc:	e064      	b.n	8002298 <addDirection+0x134>
	} else if (Map[x][y].Lados[direcciones[IZQUIERDA]] != 1) {
 80021ce:	4b5f      	ldr	r3, [pc, #380]	; (800234c <addDirection+0x1e8>)
 80021d0:	6858      	ldr	r0, [r3, #4]
 80021d2:	4c5f      	ldr	r4, [pc, #380]	; (8002350 <addDirection+0x1ec>)
 80021d4:	683b      	ldr	r3, [r7, #0]
 80021d6:	6879      	ldr	r1, [r7, #4]
 80021d8:	461a      	mov	r2, r3
 80021da:	0052      	lsls	r2, r2, #1
 80021dc:	441a      	add	r2, r3
 80021de:	0053      	lsls	r3, r2, #1
 80021e0:	461a      	mov	r2, r3
 80021e2:	460b      	mov	r3, r1
 80021e4:	005b      	lsls	r3, r3, #1
 80021e6:	440b      	add	r3, r1
 80021e8:	015b      	lsls	r3, r3, #5
 80021ea:	4413      	add	r3, r2
 80021ec:	4403      	add	r3, r0
 80021ee:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 80021f2:	2b01      	cmp	r3, #1
 80021f4:	d01e      	beq.n	8002234 <addDirection+0xd0>
		Map[x][y].Lados[direcciones[IZQUIERDA]] = 2;
 80021f6:	4b55      	ldr	r3, [pc, #340]	; (800234c <addDirection+0x1e8>)
 80021f8:	6858      	ldr	r0, [r3, #4]
 80021fa:	4c55      	ldr	r4, [pc, #340]	; (8002350 <addDirection+0x1ec>)
 80021fc:	683b      	ldr	r3, [r7, #0]
 80021fe:	6879      	ldr	r1, [r7, #4]
 8002200:	461a      	mov	r2, r3
 8002202:	0052      	lsls	r2, r2, #1
 8002204:	441a      	add	r2, r3
 8002206:	0053      	lsls	r3, r2, #1
 8002208:	461a      	mov	r2, r3
 800220a:	460b      	mov	r3, r1
 800220c:	005b      	lsls	r3, r3, #1
 800220e:	440b      	add	r3, r1
 8002210:	015b      	lsls	r3, r3, #5
 8002212:	4413      	add	r3, r2
 8002214:	4403      	add	r3, r0
 8002216:	2202      	movs	r2, #2
 8002218:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
		moveNode(IZQUIERDA);
 800221c:	2001      	movs	r0, #1
 800221e:	f000 fcc5 	bl	8002bac <moveNode>
		rotateAxis(IZQUIERDA);
 8002222:	2001      	movs	r0, #1
 8002224:	f000 fecc 	bl	8002fc0 <rotateAxis>
		directions[directionsSize] = 'i';
 8002228:	4b4a      	ldr	r3, [pc, #296]	; (8002354 <addDirection+0x1f0>)
 800222a:	681b      	ldr	r3, [r3, #0]
 800222c:	4a4a      	ldr	r2, [pc, #296]	; (8002358 <addDirection+0x1f4>)
 800222e:	2169      	movs	r1, #105	; 0x69
 8002230:	54d1      	strb	r1, [r2, r3]
 8002232:	e031      	b.n	8002298 <addDirection+0x134>
	} else if (Map[x][y].Lados[direcciones[DERECHA]] != 1) {
 8002234:	4b45      	ldr	r3, [pc, #276]	; (800234c <addDirection+0x1e8>)
 8002236:	68d8      	ldr	r0, [r3, #12]
 8002238:	4c45      	ldr	r4, [pc, #276]	; (8002350 <addDirection+0x1ec>)
 800223a:	683b      	ldr	r3, [r7, #0]
 800223c:	6879      	ldr	r1, [r7, #4]
 800223e:	461a      	mov	r2, r3
 8002240:	0052      	lsls	r2, r2, #1
 8002242:	441a      	add	r2, r3
 8002244:	0053      	lsls	r3, r2, #1
 8002246:	461a      	mov	r2, r3
 8002248:	460b      	mov	r3, r1
 800224a:	005b      	lsls	r3, r3, #1
 800224c:	440b      	add	r3, r1
 800224e:	015b      	lsls	r3, r3, #5
 8002250:	4413      	add	r3, r2
 8002252:	4403      	add	r3, r0
 8002254:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8002258:	2b01      	cmp	r3, #1
 800225a:	d01d      	beq.n	8002298 <addDirection+0x134>
		Map[x][y].Lados[direcciones[DERECHA]] = 2;
 800225c:	4b3b      	ldr	r3, [pc, #236]	; (800234c <addDirection+0x1e8>)
 800225e:	68d8      	ldr	r0, [r3, #12]
 8002260:	4c3b      	ldr	r4, [pc, #236]	; (8002350 <addDirection+0x1ec>)
 8002262:	683b      	ldr	r3, [r7, #0]
 8002264:	6879      	ldr	r1, [r7, #4]
 8002266:	461a      	mov	r2, r3
 8002268:	0052      	lsls	r2, r2, #1
 800226a:	441a      	add	r2, r3
 800226c:	0053      	lsls	r3, r2, #1
 800226e:	461a      	mov	r2, r3
 8002270:	460b      	mov	r3, r1
 8002272:	005b      	lsls	r3, r3, #1
 8002274:	440b      	add	r3, r1
 8002276:	015b      	lsls	r3, r3, #5
 8002278:	4413      	add	r3, r2
 800227a:	4403      	add	r3, r0
 800227c:	2202      	movs	r2, #2
 800227e:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
		moveNode(DERECHA);
 8002282:	2003      	movs	r0, #3
 8002284:	f000 fc92 	bl	8002bac <moveNode>
		rotateAxis(DERECHA);
 8002288:	2003      	movs	r0, #3
 800228a:	f000 fe99 	bl	8002fc0 <rotateAxis>
		directions[directionsSize] = 'd';
 800228e:	4b31      	ldr	r3, [pc, #196]	; (8002354 <addDirection+0x1f0>)
 8002290:	681b      	ldr	r3, [r3, #0]
 8002292:	4a31      	ldr	r2, [pc, #196]	; (8002358 <addDirection+0x1f4>)
 8002294:	2164      	movs	r1, #100	; 0x64
 8002296:	54d1      	strb	r1, [r2, r3]
	}
	intUartSend(Map[x][y].Lados[direcciones[ADELANTE]]);
 8002298:	4b2c      	ldr	r3, [pc, #176]	; (800234c <addDirection+0x1e8>)
 800229a:	6818      	ldr	r0, [r3, #0]
 800229c:	4c2c      	ldr	r4, [pc, #176]	; (8002350 <addDirection+0x1ec>)
 800229e:	683b      	ldr	r3, [r7, #0]
 80022a0:	6879      	ldr	r1, [r7, #4]
 80022a2:	461a      	mov	r2, r3
 80022a4:	0052      	lsls	r2, r2, #1
 80022a6:	441a      	add	r2, r3
 80022a8:	0053      	lsls	r3, r2, #1
 80022aa:	461a      	mov	r2, r3
 80022ac:	460b      	mov	r3, r1
 80022ae:	005b      	lsls	r3, r3, #1
 80022b0:	440b      	add	r3, r1
 80022b2:	015b      	lsls	r3, r3, #5
 80022b4:	4413      	add	r3, r2
 80022b6:	4403      	add	r3, r0
 80022b8:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 80022bc:	4618      	mov	r0, r3
 80022be:	f7ff f979 	bl	80015b4 <intUartSend>
	intUartSend(Map[x][y].Lados[direcciones[IZQUIERDA]]);
 80022c2:	4b22      	ldr	r3, [pc, #136]	; (800234c <addDirection+0x1e8>)
 80022c4:	6858      	ldr	r0, [r3, #4]
 80022c6:	4c22      	ldr	r4, [pc, #136]	; (8002350 <addDirection+0x1ec>)
 80022c8:	683b      	ldr	r3, [r7, #0]
 80022ca:	6879      	ldr	r1, [r7, #4]
 80022cc:	461a      	mov	r2, r3
 80022ce:	0052      	lsls	r2, r2, #1
 80022d0:	441a      	add	r2, r3
 80022d2:	0053      	lsls	r3, r2, #1
 80022d4:	461a      	mov	r2, r3
 80022d6:	460b      	mov	r3, r1
 80022d8:	005b      	lsls	r3, r3, #1
 80022da:	440b      	add	r3, r1
 80022dc:	015b      	lsls	r3, r3, #5
 80022de:	4413      	add	r3, r2
 80022e0:	4403      	add	r3, r0
 80022e2:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 80022e6:	4618      	mov	r0, r3
 80022e8:	f7ff f964 	bl	80015b4 <intUartSend>
	intUartSend(Map[x][y].Lados[direcciones[DERECHA]]);
 80022ec:	4b17      	ldr	r3, [pc, #92]	; (800234c <addDirection+0x1e8>)
 80022ee:	68d8      	ldr	r0, [r3, #12]
 80022f0:	4c17      	ldr	r4, [pc, #92]	; (8002350 <addDirection+0x1ec>)
 80022f2:	683b      	ldr	r3, [r7, #0]
 80022f4:	6879      	ldr	r1, [r7, #4]
 80022f6:	461a      	mov	r2, r3
 80022f8:	0052      	lsls	r2, r2, #1
 80022fa:	441a      	add	r2, r3
 80022fc:	0053      	lsls	r3, r2, #1
 80022fe:	461a      	mov	r2, r3
 8002300:	460b      	mov	r3, r1
 8002302:	005b      	lsls	r3, r3, #1
 8002304:	440b      	add	r3, r1
 8002306:	015b      	lsls	r3, r3, #5
 8002308:	4413      	add	r3, r2
 800230a:	4403      	add	r3, r0
 800230c:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8002310:	4618      	mov	r0, r3
 8002312:	f7ff f94f 	bl	80015b4 <intUartSend>
	TX_BUFFER[0] = 'D';
 8002316:	4b11      	ldr	r3, [pc, #68]	; (800235c <addDirection+0x1f8>)
 8002318:	2244      	movs	r2, #68	; 0x44
 800231a:	701a      	strb	r2, [r3, #0]
	TX_BUFFER[1] = directions[directionsSize];
 800231c:	4b0d      	ldr	r3, [pc, #52]	; (8002354 <addDirection+0x1f0>)
 800231e:	681b      	ldr	r3, [r3, #0]
 8002320:	4a0d      	ldr	r2, [pc, #52]	; (8002358 <addDirection+0x1f4>)
 8002322:	5cd2      	ldrb	r2, [r2, r3]
 8002324:	4b0d      	ldr	r3, [pc, #52]	; (800235c <addDirection+0x1f8>)
 8002326:	705a      	strb	r2, [r3, #1]
	TX_BUFFER[2] = '\n';
 8002328:	4b0c      	ldr	r3, [pc, #48]	; (800235c <addDirection+0x1f8>)
 800232a:	220a      	movs	r2, #10
 800232c:	709a      	strb	r2, [r3, #2]
	HAL_UART_Transmit(&huart1, TX_BUFFER, 3, 100);
 800232e:	2364      	movs	r3, #100	; 0x64
 8002330:	2203      	movs	r2, #3
 8002332:	490a      	ldr	r1, [pc, #40]	; (800235c <addDirection+0x1f8>)
 8002334:	480a      	ldr	r0, [pc, #40]	; (8002360 <addDirection+0x1fc>)
 8002336:	f004 fa80 	bl	800683a <HAL_UART_Transmit>
	directionsSize++;
 800233a:	4b06      	ldr	r3, [pc, #24]	; (8002354 <addDirection+0x1f0>)
 800233c:	681b      	ldr	r3, [r3, #0]
 800233e:	3301      	adds	r3, #1
 8002340:	4a04      	ldr	r2, [pc, #16]	; (8002354 <addDirection+0x1f0>)
 8002342:	6013      	str	r3, [r2, #0]

}
 8002344:	bf00      	nop
 8002346:	370c      	adds	r7, #12
 8002348:	46bd      	mov	sp, r7
 800234a:	bd90      	pop	{r4, r7, pc}
 800234c:	200011ec 	.word	0x200011ec
 8002350:	200012c0 	.word	0x200012c0
 8002354:	20001240 	.word	0x20001240
 8002358:	20001294 	.word	0x20001294
 800235c:	2000121c 	.word	0x2000121c
 8002360:	20002bc4 	.word	0x20002bc4

08002364 <ChooseNextNode>:

int ChooseNextNode(int x, int y) {
 8002364:	b590      	push	{r4, r7, lr}
 8002366:	b083      	sub	sp, #12
 8002368:	af00      	add	r7, sp, #0
 800236a:	6078      	str	r0, [r7, #4]
 800236c:	6039      	str	r1, [r7, #0]
	if (Map[x][y].Lados[direcciones[ADELANTE]] == 0) {
 800236e:	4b74      	ldr	r3, [pc, #464]	; (8002540 <ChooseNextNode+0x1dc>)
 8002370:	6818      	ldr	r0, [r3, #0]
 8002372:	4c74      	ldr	r4, [pc, #464]	; (8002544 <ChooseNextNode+0x1e0>)
 8002374:	683b      	ldr	r3, [r7, #0]
 8002376:	6879      	ldr	r1, [r7, #4]
 8002378:	461a      	mov	r2, r3
 800237a:	0052      	lsls	r2, r2, #1
 800237c:	441a      	add	r2, r3
 800237e:	0053      	lsls	r3, r2, #1
 8002380:	461a      	mov	r2, r3
 8002382:	460b      	mov	r3, r1
 8002384:	005b      	lsls	r3, r3, #1
 8002386:	440b      	add	r3, r1
 8002388:	015b      	lsls	r3, r3, #5
 800238a:	4413      	add	r3, r2
 800238c:	4403      	add	r3, r0
 800238e:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8002392:	2b00      	cmp	r3, #0
 8002394:	f040 80dc 	bne.w	8002550 <ChooseNextNode+0x1ec>
		TX_BUFFER[0] = 'A';
 8002398:	4b6b      	ldr	r3, [pc, #428]	; (8002548 <ChooseNextNode+0x1e4>)
 800239a:	2241      	movs	r2, #65	; 0x41
 800239c:	701a      	strb	r2, [r3, #0]
		TX_BUFFER[1] = '\n';
 800239e:	4b6a      	ldr	r3, [pc, #424]	; (8002548 <ChooseNextNode+0x1e4>)
 80023a0:	220a      	movs	r2, #10
 80023a2:	705a      	strb	r2, [r3, #1]
		HAL_UART_Transmit(&huart1, TX_BUFFER, 2, 100);
 80023a4:	2364      	movs	r3, #100	; 0x64
 80023a6:	2202      	movs	r2, #2
 80023a8:	4967      	ldr	r1, [pc, #412]	; (8002548 <ChooseNextNode+0x1e4>)
 80023aa:	4868      	ldr	r0, [pc, #416]	; (800254c <ChooseNextNode+0x1e8>)
 80023ac:	f004 fa45 	bl	800683a <HAL_UART_Transmit>
		Map[x][y].Lados[direcciones[ADELANTE]] = 2;
 80023b0:	4b63      	ldr	r3, [pc, #396]	; (8002540 <ChooseNextNode+0x1dc>)
 80023b2:	6818      	ldr	r0, [r3, #0]
 80023b4:	4c63      	ldr	r4, [pc, #396]	; (8002544 <ChooseNextNode+0x1e0>)
 80023b6:	683b      	ldr	r3, [r7, #0]
 80023b8:	6879      	ldr	r1, [r7, #4]
 80023ba:	461a      	mov	r2, r3
 80023bc:	0052      	lsls	r2, r2, #1
 80023be:	441a      	add	r2, r3
 80023c0:	0053      	lsls	r3, r2, #1
 80023c2:	461a      	mov	r2, r3
 80023c4:	460b      	mov	r3, r1
 80023c6:	005b      	lsls	r3, r3, #1
 80023c8:	440b      	add	r3, r1
 80023ca:	015b      	lsls	r3, r3, #5
 80023cc:	4413      	add	r3, r2
 80023ce:	4403      	add	r3, r0
 80023d0:	2202      	movs	r2, #2
 80023d2:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
		if (Map[x][y].visitado > 1) {
 80023d6:	485b      	ldr	r0, [pc, #364]	; (8002544 <ChooseNextNode+0x1e0>)
 80023d8:	683b      	ldr	r3, [r7, #0]
 80023da:	6879      	ldr	r1, [r7, #4]
 80023dc:	461a      	mov	r2, r3
 80023de:	0052      	lsls	r2, r2, #1
 80023e0:	441a      	add	r2, r3
 80023e2:	00d3      	lsls	r3, r2, #3
 80023e4:	461a      	mov	r2, r3
 80023e6:	460b      	mov	r3, r1
 80023e8:	005b      	lsls	r3, r3, #1
 80023ea:	440b      	add	r3, r1
 80023ec:	01db      	lsls	r3, r3, #7
 80023ee:	4413      	add	r3, r2
 80023f0:	4403      	add	r3, r0
 80023f2:	3310      	adds	r3, #16
 80023f4:	681b      	ldr	r3, [r3, #0]
 80023f6:	2b01      	cmp	r3, #1
 80023f8:	dd03      	ble.n	8002402 <ChooseNextNode+0x9e>
			EliminateNode(x, y);
 80023fa:	6839      	ldr	r1, [r7, #0]
 80023fc:	6878      	ldr	r0, [r7, #4]
 80023fe:	f000 fab5 	bl	800296c <EliminateNode>
		}
		moveNode(direcciones[ADELANTE]);
 8002402:	4b4f      	ldr	r3, [pc, #316]	; (8002540 <ChooseNextNode+0x1dc>)
 8002404:	681b      	ldr	r3, [r3, #0]
 8002406:	4618      	mov	r0, r3
 8002408:	f000 fbd0 	bl	8002bac <moveNode>
		if (Map[x][y].Lados[direcciones[ATRAS]] != 1)
 800240c:	4b4c      	ldr	r3, [pc, #304]	; (8002540 <ChooseNextNode+0x1dc>)
 800240e:	6898      	ldr	r0, [r3, #8]
 8002410:	4c4c      	ldr	r4, [pc, #304]	; (8002544 <ChooseNextNode+0x1e0>)
 8002412:	683b      	ldr	r3, [r7, #0]
 8002414:	6879      	ldr	r1, [r7, #4]
 8002416:	461a      	mov	r2, r3
 8002418:	0052      	lsls	r2, r2, #1
 800241a:	441a      	add	r2, r3
 800241c:	0053      	lsls	r3, r2, #1
 800241e:	461a      	mov	r2, r3
 8002420:	460b      	mov	r3, r1
 8002422:	005b      	lsls	r3, r3, #1
 8002424:	440b      	add	r3, r1
 8002426:	015b      	lsls	r3, r3, #5
 8002428:	4413      	add	r3, r2
 800242a:	4403      	add	r3, r0
 800242c:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8002430:	2b01      	cmp	r3, #1
 8002432:	d012      	beq.n	800245a <ChooseNextNode+0xf6>
			Map[x][y].Lados[direcciones[ATRAS]] = 2;
 8002434:	4b42      	ldr	r3, [pc, #264]	; (8002540 <ChooseNextNode+0x1dc>)
 8002436:	6898      	ldr	r0, [r3, #8]
 8002438:	4c42      	ldr	r4, [pc, #264]	; (8002544 <ChooseNextNode+0x1e0>)
 800243a:	683b      	ldr	r3, [r7, #0]
 800243c:	6879      	ldr	r1, [r7, #4]
 800243e:	461a      	mov	r2, r3
 8002440:	0052      	lsls	r2, r2, #1
 8002442:	441a      	add	r2, r3
 8002444:	0053      	lsls	r3, r2, #1
 8002446:	461a      	mov	r2, r3
 8002448:	460b      	mov	r3, r1
 800244a:	005b      	lsls	r3, r3, #1
 800244c:	440b      	add	r3, r1
 800244e:	015b      	lsls	r3, r3, #5
 8002450:	4413      	add	r3, r2
 8002452:	4403      	add	r3, r0
 8002454:	2202      	movs	r2, #2
 8002456:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
		TX_BUFFER[0] = 'D';
 800245a:	4b3b      	ldr	r3, [pc, #236]	; (8002548 <ChooseNextNode+0x1e4>)
 800245c:	2244      	movs	r2, #68	; 0x44
 800245e:	701a      	strb	r2, [r3, #0]
		TX_BUFFER[1] = Map[x][y].Lados[DERECHA] + '0';
 8002460:	4838      	ldr	r0, [pc, #224]	; (8002544 <ChooseNextNode+0x1e0>)
 8002462:	683b      	ldr	r3, [r7, #0]
 8002464:	6879      	ldr	r1, [r7, #4]
 8002466:	461a      	mov	r2, r3
 8002468:	0052      	lsls	r2, r2, #1
 800246a:	441a      	add	r2, r3
 800246c:	00d3      	lsls	r3, r2, #3
 800246e:	461a      	mov	r2, r3
 8002470:	460b      	mov	r3, r1
 8002472:	005b      	lsls	r3, r3, #1
 8002474:	440b      	add	r3, r1
 8002476:	01db      	lsls	r3, r3, #7
 8002478:	4413      	add	r3, r2
 800247a:	4403      	add	r3, r0
 800247c:	330c      	adds	r3, #12
 800247e:	681b      	ldr	r3, [r3, #0]
 8002480:	b2db      	uxtb	r3, r3
 8002482:	3330      	adds	r3, #48	; 0x30
 8002484:	b2da      	uxtb	r2, r3
 8002486:	4b30      	ldr	r3, [pc, #192]	; (8002548 <ChooseNextNode+0x1e4>)
 8002488:	705a      	strb	r2, [r3, #1]
		TX_BUFFER[2] = '\n';
 800248a:	4b2f      	ldr	r3, [pc, #188]	; (8002548 <ChooseNextNode+0x1e4>)
 800248c:	220a      	movs	r2, #10
 800248e:	709a      	strb	r2, [r3, #2]
		TX_BUFFER[3] = 'C';
 8002490:	4b2d      	ldr	r3, [pc, #180]	; (8002548 <ChooseNextNode+0x1e4>)
 8002492:	2243      	movs	r2, #67	; 0x43
 8002494:	70da      	strb	r2, [r3, #3]
		TX_BUFFER[4] = Map[x][y].Lados[ADELANTE] + '0';
 8002496:	482b      	ldr	r0, [pc, #172]	; (8002544 <ChooseNextNode+0x1e0>)
 8002498:	683b      	ldr	r3, [r7, #0]
 800249a:	6879      	ldr	r1, [r7, #4]
 800249c:	461a      	mov	r2, r3
 800249e:	0052      	lsls	r2, r2, #1
 80024a0:	441a      	add	r2, r3
 80024a2:	00d3      	lsls	r3, r2, #3
 80024a4:	461a      	mov	r2, r3
 80024a6:	460b      	mov	r3, r1
 80024a8:	005b      	lsls	r3, r3, #1
 80024aa:	440b      	add	r3, r1
 80024ac:	01db      	lsls	r3, r3, #7
 80024ae:	4413      	add	r3, r2
 80024b0:	4403      	add	r3, r0
 80024b2:	681b      	ldr	r3, [r3, #0]
 80024b4:	b2db      	uxtb	r3, r3
 80024b6:	3330      	adds	r3, #48	; 0x30
 80024b8:	b2da      	uxtb	r2, r3
 80024ba:	4b23      	ldr	r3, [pc, #140]	; (8002548 <ChooseNextNode+0x1e4>)
 80024bc:	711a      	strb	r2, [r3, #4]
		TX_BUFFER[5] = '\n';
 80024be:	4b22      	ldr	r3, [pc, #136]	; (8002548 <ChooseNextNode+0x1e4>)
 80024c0:	220a      	movs	r2, #10
 80024c2:	715a      	strb	r2, [r3, #5]
		TX_BUFFER[6] = 'I';
 80024c4:	4b20      	ldr	r3, [pc, #128]	; (8002548 <ChooseNextNode+0x1e4>)
 80024c6:	2249      	movs	r2, #73	; 0x49
 80024c8:	719a      	strb	r2, [r3, #6]
		TX_BUFFER[7] = Map[x][y].Lados[IZQUIERDA] + '0';
 80024ca:	481e      	ldr	r0, [pc, #120]	; (8002544 <ChooseNextNode+0x1e0>)
 80024cc:	683b      	ldr	r3, [r7, #0]
 80024ce:	6879      	ldr	r1, [r7, #4]
 80024d0:	461a      	mov	r2, r3
 80024d2:	0052      	lsls	r2, r2, #1
 80024d4:	441a      	add	r2, r3
 80024d6:	00d3      	lsls	r3, r2, #3
 80024d8:	461a      	mov	r2, r3
 80024da:	460b      	mov	r3, r1
 80024dc:	005b      	lsls	r3, r3, #1
 80024de:	440b      	add	r3, r1
 80024e0:	01db      	lsls	r3, r3, #7
 80024e2:	4413      	add	r3, r2
 80024e4:	4403      	add	r3, r0
 80024e6:	3304      	adds	r3, #4
 80024e8:	681b      	ldr	r3, [r3, #0]
 80024ea:	b2db      	uxtb	r3, r3
 80024ec:	3330      	adds	r3, #48	; 0x30
 80024ee:	b2da      	uxtb	r2, r3
 80024f0:	4b15      	ldr	r3, [pc, #84]	; (8002548 <ChooseNextNode+0x1e4>)
 80024f2:	71da      	strb	r2, [r3, #7]
		TX_BUFFER[8] = '\n';
 80024f4:	4b14      	ldr	r3, [pc, #80]	; (8002548 <ChooseNextNode+0x1e4>)
 80024f6:	220a      	movs	r2, #10
 80024f8:	721a      	strb	r2, [r3, #8]
		TX_BUFFER[9] = 'A';
 80024fa:	4b13      	ldr	r3, [pc, #76]	; (8002548 <ChooseNextNode+0x1e4>)
 80024fc:	2241      	movs	r2, #65	; 0x41
 80024fe:	725a      	strb	r2, [r3, #9]
		TX_BUFFER[10] = Map[x][y].Lados[ATRAS] + '0';
 8002500:	4810      	ldr	r0, [pc, #64]	; (8002544 <ChooseNextNode+0x1e0>)
 8002502:	683b      	ldr	r3, [r7, #0]
 8002504:	6879      	ldr	r1, [r7, #4]
 8002506:	461a      	mov	r2, r3
 8002508:	0052      	lsls	r2, r2, #1
 800250a:	441a      	add	r2, r3
 800250c:	00d3      	lsls	r3, r2, #3
 800250e:	461a      	mov	r2, r3
 8002510:	460b      	mov	r3, r1
 8002512:	005b      	lsls	r3, r3, #1
 8002514:	440b      	add	r3, r1
 8002516:	01db      	lsls	r3, r3, #7
 8002518:	4413      	add	r3, r2
 800251a:	4403      	add	r3, r0
 800251c:	3308      	adds	r3, #8
 800251e:	681b      	ldr	r3, [r3, #0]
 8002520:	b2db      	uxtb	r3, r3
 8002522:	3330      	adds	r3, #48	; 0x30
 8002524:	b2da      	uxtb	r2, r3
 8002526:	4b08      	ldr	r3, [pc, #32]	; (8002548 <ChooseNextNode+0x1e4>)
 8002528:	729a      	strb	r2, [r3, #10]
		TX_BUFFER[11] = '\n';
 800252a:	4b07      	ldr	r3, [pc, #28]	; (8002548 <ChooseNextNode+0x1e4>)
 800252c:	220a      	movs	r2, #10
 800252e:	72da      	strb	r2, [r3, #11]
		HAL_UART_Transmit(&huart1, TX_BUFFER, 12, 100);
 8002530:	2364      	movs	r3, #100	; 0x64
 8002532:	220c      	movs	r2, #12
 8002534:	4904      	ldr	r1, [pc, #16]	; (8002548 <ChooseNextNode+0x1e4>)
 8002536:	4805      	ldr	r0, [pc, #20]	; (800254c <ChooseNextNode+0x1e8>)
 8002538:	f004 f97f 	bl	800683a <HAL_UART_Transmit>

		return ADELANTE;
 800253c:	2300      	movs	r3, #0
 800253e:	e20b      	b.n	8002958 <ChooseNextNode+0x5f4>
 8002540:	200011ec 	.word	0x200011ec
 8002544:	200012c0 	.word	0x200012c0
 8002548:	2000121c 	.word	0x2000121c
 800254c:	20002bc4 	.word	0x20002bc4
	} else if (Map[x][y].Lados[direcciones[IZQUIERDA]] == 0) {
 8002550:	4bbc      	ldr	r3, [pc, #752]	; (8002844 <ChooseNextNode+0x4e0>)
 8002552:	6858      	ldr	r0, [r3, #4]
 8002554:	4cbc      	ldr	r4, [pc, #752]	; (8002848 <ChooseNextNode+0x4e4>)
 8002556:	683b      	ldr	r3, [r7, #0]
 8002558:	6879      	ldr	r1, [r7, #4]
 800255a:	461a      	mov	r2, r3
 800255c:	0052      	lsls	r2, r2, #1
 800255e:	441a      	add	r2, r3
 8002560:	0053      	lsls	r3, r2, #1
 8002562:	461a      	mov	r2, r3
 8002564:	460b      	mov	r3, r1
 8002566:	005b      	lsls	r3, r3, #1
 8002568:	440b      	add	r3, r1
 800256a:	015b      	lsls	r3, r3, #5
 800256c:	4413      	add	r3, r2
 800256e:	4403      	add	r3, r0
 8002570:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8002574:	2b00      	cmp	r3, #0
 8002576:	f040 80a8 	bne.w	80026ca <ChooseNextNode+0x366>
		TX_BUFFER[0] = 'I';
 800257a:	4bb4      	ldr	r3, [pc, #720]	; (800284c <ChooseNextNode+0x4e8>)
 800257c:	2249      	movs	r2, #73	; 0x49
 800257e:	701a      	strb	r2, [r3, #0]
		TX_BUFFER[1] = '\n';
 8002580:	4bb2      	ldr	r3, [pc, #712]	; (800284c <ChooseNextNode+0x4e8>)
 8002582:	220a      	movs	r2, #10
 8002584:	705a      	strb	r2, [r3, #1]
		HAL_UART_Transmit(&huart1, TX_BUFFER, 2, 100);
 8002586:	2364      	movs	r3, #100	; 0x64
 8002588:	2202      	movs	r2, #2
 800258a:	49b0      	ldr	r1, [pc, #704]	; (800284c <ChooseNextNode+0x4e8>)
 800258c:	48b0      	ldr	r0, [pc, #704]	; (8002850 <ChooseNextNode+0x4ec>)
 800258e:	f004 f954 	bl	800683a <HAL_UART_Transmit>
		Map[x][y].Lados[direcciones[IZQUIERDA]] = 2;
 8002592:	4bac      	ldr	r3, [pc, #688]	; (8002844 <ChooseNextNode+0x4e0>)
 8002594:	6858      	ldr	r0, [r3, #4]
 8002596:	4cac      	ldr	r4, [pc, #688]	; (8002848 <ChooseNextNode+0x4e4>)
 8002598:	683b      	ldr	r3, [r7, #0]
 800259a:	6879      	ldr	r1, [r7, #4]
 800259c:	461a      	mov	r2, r3
 800259e:	0052      	lsls	r2, r2, #1
 80025a0:	441a      	add	r2, r3
 80025a2:	0053      	lsls	r3, r2, #1
 80025a4:	461a      	mov	r2, r3
 80025a6:	460b      	mov	r3, r1
 80025a8:	005b      	lsls	r3, r3, #1
 80025aa:	440b      	add	r3, r1
 80025ac:	015b      	lsls	r3, r3, #5
 80025ae:	4413      	add	r3, r2
 80025b0:	4403      	add	r3, r0
 80025b2:	2202      	movs	r2, #2
 80025b4:	f844 2023 	str.w	r2, [r4, r3, lsl #2]

		if (Map[x][y].visitado > 1) {
 80025b8:	48a3      	ldr	r0, [pc, #652]	; (8002848 <ChooseNextNode+0x4e4>)
 80025ba:	683b      	ldr	r3, [r7, #0]
 80025bc:	6879      	ldr	r1, [r7, #4]
 80025be:	461a      	mov	r2, r3
 80025c0:	0052      	lsls	r2, r2, #1
 80025c2:	441a      	add	r2, r3
 80025c4:	00d3      	lsls	r3, r2, #3
 80025c6:	461a      	mov	r2, r3
 80025c8:	460b      	mov	r3, r1
 80025ca:	005b      	lsls	r3, r3, #1
 80025cc:	440b      	add	r3, r1
 80025ce:	01db      	lsls	r3, r3, #7
 80025d0:	4413      	add	r3, r2
 80025d2:	4403      	add	r3, r0
 80025d4:	3310      	adds	r3, #16
 80025d6:	681b      	ldr	r3, [r3, #0]
 80025d8:	2b01      	cmp	r3, #1
 80025da:	dd03      	ble.n	80025e4 <ChooseNextNode+0x280>
			EliminateNode(x, y);
 80025dc:	6839      	ldr	r1, [r7, #0]
 80025de:	6878      	ldr	r0, [r7, #4]
 80025e0:	f000 f9c4 	bl	800296c <EliminateNode>
		}
		TX_BUFFER[0] = 'D';
 80025e4:	4b99      	ldr	r3, [pc, #612]	; (800284c <ChooseNextNode+0x4e8>)
 80025e6:	2244      	movs	r2, #68	; 0x44
 80025e8:	701a      	strb	r2, [r3, #0]
		TX_BUFFER[1] = Map[x][y].Lados[DERECHA] + '0';
 80025ea:	4897      	ldr	r0, [pc, #604]	; (8002848 <ChooseNextNode+0x4e4>)
 80025ec:	683b      	ldr	r3, [r7, #0]
 80025ee:	6879      	ldr	r1, [r7, #4]
 80025f0:	461a      	mov	r2, r3
 80025f2:	0052      	lsls	r2, r2, #1
 80025f4:	441a      	add	r2, r3
 80025f6:	00d3      	lsls	r3, r2, #3
 80025f8:	461a      	mov	r2, r3
 80025fa:	460b      	mov	r3, r1
 80025fc:	005b      	lsls	r3, r3, #1
 80025fe:	440b      	add	r3, r1
 8002600:	01db      	lsls	r3, r3, #7
 8002602:	4413      	add	r3, r2
 8002604:	4403      	add	r3, r0
 8002606:	330c      	adds	r3, #12
 8002608:	681b      	ldr	r3, [r3, #0]
 800260a:	b2db      	uxtb	r3, r3
 800260c:	3330      	adds	r3, #48	; 0x30
 800260e:	b2da      	uxtb	r2, r3
 8002610:	4b8e      	ldr	r3, [pc, #568]	; (800284c <ChooseNextNode+0x4e8>)
 8002612:	705a      	strb	r2, [r3, #1]
		TX_BUFFER[2] = '\n';
 8002614:	4b8d      	ldr	r3, [pc, #564]	; (800284c <ChooseNextNode+0x4e8>)
 8002616:	220a      	movs	r2, #10
 8002618:	709a      	strb	r2, [r3, #2]
		TX_BUFFER[3] = 'C';
 800261a:	4b8c      	ldr	r3, [pc, #560]	; (800284c <ChooseNextNode+0x4e8>)
 800261c:	2243      	movs	r2, #67	; 0x43
 800261e:	70da      	strb	r2, [r3, #3]
		TX_BUFFER[4] = Map[x][y].Lados[ADELANTE] + '0';
 8002620:	4889      	ldr	r0, [pc, #548]	; (8002848 <ChooseNextNode+0x4e4>)
 8002622:	683b      	ldr	r3, [r7, #0]
 8002624:	6879      	ldr	r1, [r7, #4]
 8002626:	461a      	mov	r2, r3
 8002628:	0052      	lsls	r2, r2, #1
 800262a:	441a      	add	r2, r3
 800262c:	00d3      	lsls	r3, r2, #3
 800262e:	461a      	mov	r2, r3
 8002630:	460b      	mov	r3, r1
 8002632:	005b      	lsls	r3, r3, #1
 8002634:	440b      	add	r3, r1
 8002636:	01db      	lsls	r3, r3, #7
 8002638:	4413      	add	r3, r2
 800263a:	4403      	add	r3, r0
 800263c:	681b      	ldr	r3, [r3, #0]
 800263e:	b2db      	uxtb	r3, r3
 8002640:	3330      	adds	r3, #48	; 0x30
 8002642:	b2da      	uxtb	r2, r3
 8002644:	4b81      	ldr	r3, [pc, #516]	; (800284c <ChooseNextNode+0x4e8>)
 8002646:	711a      	strb	r2, [r3, #4]
		TX_BUFFER[5] = '\n';
 8002648:	4b80      	ldr	r3, [pc, #512]	; (800284c <ChooseNextNode+0x4e8>)
 800264a:	220a      	movs	r2, #10
 800264c:	715a      	strb	r2, [r3, #5]
		TX_BUFFER[6] = 'I';
 800264e:	4b7f      	ldr	r3, [pc, #508]	; (800284c <ChooseNextNode+0x4e8>)
 8002650:	2249      	movs	r2, #73	; 0x49
 8002652:	719a      	strb	r2, [r3, #6]
		TX_BUFFER[7] = Map[x][y].Lados[IZQUIERDA] + '0';
 8002654:	487c      	ldr	r0, [pc, #496]	; (8002848 <ChooseNextNode+0x4e4>)
 8002656:	683b      	ldr	r3, [r7, #0]
 8002658:	6879      	ldr	r1, [r7, #4]
 800265a:	461a      	mov	r2, r3
 800265c:	0052      	lsls	r2, r2, #1
 800265e:	441a      	add	r2, r3
 8002660:	00d3      	lsls	r3, r2, #3
 8002662:	461a      	mov	r2, r3
 8002664:	460b      	mov	r3, r1
 8002666:	005b      	lsls	r3, r3, #1
 8002668:	440b      	add	r3, r1
 800266a:	01db      	lsls	r3, r3, #7
 800266c:	4413      	add	r3, r2
 800266e:	4403      	add	r3, r0
 8002670:	3304      	adds	r3, #4
 8002672:	681b      	ldr	r3, [r3, #0]
 8002674:	b2db      	uxtb	r3, r3
 8002676:	3330      	adds	r3, #48	; 0x30
 8002678:	b2da      	uxtb	r2, r3
 800267a:	4b74      	ldr	r3, [pc, #464]	; (800284c <ChooseNextNode+0x4e8>)
 800267c:	71da      	strb	r2, [r3, #7]
		TX_BUFFER[8] = '\n';
 800267e:	4b73      	ldr	r3, [pc, #460]	; (800284c <ChooseNextNode+0x4e8>)
 8002680:	220a      	movs	r2, #10
 8002682:	721a      	strb	r2, [r3, #8]
		TX_BUFFER[9] = 'A';
 8002684:	4b71      	ldr	r3, [pc, #452]	; (800284c <ChooseNextNode+0x4e8>)
 8002686:	2241      	movs	r2, #65	; 0x41
 8002688:	725a      	strb	r2, [r3, #9]
		TX_BUFFER[10] = Map[x][y].Lados[ATRAS] + '0';
 800268a:	486f      	ldr	r0, [pc, #444]	; (8002848 <ChooseNextNode+0x4e4>)
 800268c:	683b      	ldr	r3, [r7, #0]
 800268e:	6879      	ldr	r1, [r7, #4]
 8002690:	461a      	mov	r2, r3
 8002692:	0052      	lsls	r2, r2, #1
 8002694:	441a      	add	r2, r3
 8002696:	00d3      	lsls	r3, r2, #3
 8002698:	461a      	mov	r2, r3
 800269a:	460b      	mov	r3, r1
 800269c:	005b      	lsls	r3, r3, #1
 800269e:	440b      	add	r3, r1
 80026a0:	01db      	lsls	r3, r3, #7
 80026a2:	4413      	add	r3, r2
 80026a4:	4403      	add	r3, r0
 80026a6:	3308      	adds	r3, #8
 80026a8:	681b      	ldr	r3, [r3, #0]
 80026aa:	b2db      	uxtb	r3, r3
 80026ac:	3330      	adds	r3, #48	; 0x30
 80026ae:	b2da      	uxtb	r2, r3
 80026b0:	4b66      	ldr	r3, [pc, #408]	; (800284c <ChooseNextNode+0x4e8>)
 80026b2:	729a      	strb	r2, [r3, #10]
		TX_BUFFER[11] = '\n';
 80026b4:	4b65      	ldr	r3, [pc, #404]	; (800284c <ChooseNextNode+0x4e8>)
 80026b6:	220a      	movs	r2, #10
 80026b8:	72da      	strb	r2, [r3, #11]
		HAL_UART_Transmit(&huart1, TX_BUFFER, 12, 100);
 80026ba:	2364      	movs	r3, #100	; 0x64
 80026bc:	220c      	movs	r2, #12
 80026be:	4963      	ldr	r1, [pc, #396]	; (800284c <ChooseNextNode+0x4e8>)
 80026c0:	4863      	ldr	r0, [pc, #396]	; (8002850 <ChooseNextNode+0x4ec>)
 80026c2:	f004 f8ba 	bl	800683a <HAL_UART_Transmit>

		return IZQUIERDA;
 80026c6:	2301      	movs	r3, #1
 80026c8:	e146      	b.n	8002958 <ChooseNextNode+0x5f4>
	} else if (Map[x][y].Lados[direcciones[DERECHA]] == 0) {
 80026ca:	4b5e      	ldr	r3, [pc, #376]	; (8002844 <ChooseNextNode+0x4e0>)
 80026cc:	68d8      	ldr	r0, [r3, #12]
 80026ce:	4c5e      	ldr	r4, [pc, #376]	; (8002848 <ChooseNextNode+0x4e4>)
 80026d0:	683b      	ldr	r3, [r7, #0]
 80026d2:	6879      	ldr	r1, [r7, #4]
 80026d4:	461a      	mov	r2, r3
 80026d6:	0052      	lsls	r2, r2, #1
 80026d8:	441a      	add	r2, r3
 80026da:	0053      	lsls	r3, r2, #1
 80026dc:	461a      	mov	r2, r3
 80026de:	460b      	mov	r3, r1
 80026e0:	005b      	lsls	r3, r3, #1
 80026e2:	440b      	add	r3, r1
 80026e4:	015b      	lsls	r3, r3, #5
 80026e6:	4413      	add	r3, r2
 80026e8:	4403      	add	r3, r0
 80026ea:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 80026ee:	2b00      	cmp	r3, #0
 80026f0:	f040 80b0 	bne.w	8002854 <ChooseNextNode+0x4f0>
		TX_BUFFER[0] = 'D';
 80026f4:	4b55      	ldr	r3, [pc, #340]	; (800284c <ChooseNextNode+0x4e8>)
 80026f6:	2244      	movs	r2, #68	; 0x44
 80026f8:	701a      	strb	r2, [r3, #0]
		TX_BUFFER[1] = '\n';
 80026fa:	4b54      	ldr	r3, [pc, #336]	; (800284c <ChooseNextNode+0x4e8>)
 80026fc:	220a      	movs	r2, #10
 80026fe:	705a      	strb	r2, [r3, #1]
		HAL_UART_Transmit(&huart1, TX_BUFFER, 2, 100);
 8002700:	2364      	movs	r3, #100	; 0x64
 8002702:	2202      	movs	r2, #2
 8002704:	4951      	ldr	r1, [pc, #324]	; (800284c <ChooseNextNode+0x4e8>)
 8002706:	4852      	ldr	r0, [pc, #328]	; (8002850 <ChooseNextNode+0x4ec>)
 8002708:	f004 f897 	bl	800683a <HAL_UART_Transmit>
		Map[x][y].Lados[direcciones[DERECHA]] = 2;
 800270c:	4b4d      	ldr	r3, [pc, #308]	; (8002844 <ChooseNextNode+0x4e0>)
 800270e:	68d8      	ldr	r0, [r3, #12]
 8002710:	4c4d      	ldr	r4, [pc, #308]	; (8002848 <ChooseNextNode+0x4e4>)
 8002712:	683b      	ldr	r3, [r7, #0]
 8002714:	6879      	ldr	r1, [r7, #4]
 8002716:	461a      	mov	r2, r3
 8002718:	0052      	lsls	r2, r2, #1
 800271a:	441a      	add	r2, r3
 800271c:	0053      	lsls	r3, r2, #1
 800271e:	461a      	mov	r2, r3
 8002720:	460b      	mov	r3, r1
 8002722:	005b      	lsls	r3, r3, #1
 8002724:	440b      	add	r3, r1
 8002726:	015b      	lsls	r3, r3, #5
 8002728:	4413      	add	r3, r2
 800272a:	4403      	add	r3, r0
 800272c:	2202      	movs	r2, #2
 800272e:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
		if (Map[x][y].visitado > 1) {
 8002732:	4845      	ldr	r0, [pc, #276]	; (8002848 <ChooseNextNode+0x4e4>)
 8002734:	683b      	ldr	r3, [r7, #0]
 8002736:	6879      	ldr	r1, [r7, #4]
 8002738:	461a      	mov	r2, r3
 800273a:	0052      	lsls	r2, r2, #1
 800273c:	441a      	add	r2, r3
 800273e:	00d3      	lsls	r3, r2, #3
 8002740:	461a      	mov	r2, r3
 8002742:	460b      	mov	r3, r1
 8002744:	005b      	lsls	r3, r3, #1
 8002746:	440b      	add	r3, r1
 8002748:	01db      	lsls	r3, r3, #7
 800274a:	4413      	add	r3, r2
 800274c:	4403      	add	r3, r0
 800274e:	3310      	adds	r3, #16
 8002750:	681b      	ldr	r3, [r3, #0]
 8002752:	2b01      	cmp	r3, #1
 8002754:	dd03      	ble.n	800275e <ChooseNextNode+0x3fa>
			EliminateNode(x, y);
 8002756:	6839      	ldr	r1, [r7, #0]
 8002758:	6878      	ldr	r0, [r7, #4]
 800275a:	f000 f907 	bl	800296c <EliminateNode>
		}
		TX_BUFFER[0] = 'D';
 800275e:	4b3b      	ldr	r3, [pc, #236]	; (800284c <ChooseNextNode+0x4e8>)
 8002760:	2244      	movs	r2, #68	; 0x44
 8002762:	701a      	strb	r2, [r3, #0]
		TX_BUFFER[1] = Map[x][y].Lados[DERECHA] + '0';
 8002764:	4838      	ldr	r0, [pc, #224]	; (8002848 <ChooseNextNode+0x4e4>)
 8002766:	683b      	ldr	r3, [r7, #0]
 8002768:	6879      	ldr	r1, [r7, #4]
 800276a:	461a      	mov	r2, r3
 800276c:	0052      	lsls	r2, r2, #1
 800276e:	441a      	add	r2, r3
 8002770:	00d3      	lsls	r3, r2, #3
 8002772:	461a      	mov	r2, r3
 8002774:	460b      	mov	r3, r1
 8002776:	005b      	lsls	r3, r3, #1
 8002778:	440b      	add	r3, r1
 800277a:	01db      	lsls	r3, r3, #7
 800277c:	4413      	add	r3, r2
 800277e:	4403      	add	r3, r0
 8002780:	330c      	adds	r3, #12
 8002782:	681b      	ldr	r3, [r3, #0]
 8002784:	b2db      	uxtb	r3, r3
 8002786:	3330      	adds	r3, #48	; 0x30
 8002788:	b2da      	uxtb	r2, r3
 800278a:	4b30      	ldr	r3, [pc, #192]	; (800284c <ChooseNextNode+0x4e8>)
 800278c:	705a      	strb	r2, [r3, #1]
		TX_BUFFER[2] = '\n';
 800278e:	4b2f      	ldr	r3, [pc, #188]	; (800284c <ChooseNextNode+0x4e8>)
 8002790:	220a      	movs	r2, #10
 8002792:	709a      	strb	r2, [r3, #2]
		TX_BUFFER[3] = 'C';
 8002794:	4b2d      	ldr	r3, [pc, #180]	; (800284c <ChooseNextNode+0x4e8>)
 8002796:	2243      	movs	r2, #67	; 0x43
 8002798:	70da      	strb	r2, [r3, #3]
		TX_BUFFER[4] = Map[x][y].Lados[ADELANTE] + '0';
 800279a:	482b      	ldr	r0, [pc, #172]	; (8002848 <ChooseNextNode+0x4e4>)
 800279c:	683b      	ldr	r3, [r7, #0]
 800279e:	6879      	ldr	r1, [r7, #4]
 80027a0:	461a      	mov	r2, r3
 80027a2:	0052      	lsls	r2, r2, #1
 80027a4:	441a      	add	r2, r3
 80027a6:	00d3      	lsls	r3, r2, #3
 80027a8:	461a      	mov	r2, r3
 80027aa:	460b      	mov	r3, r1
 80027ac:	005b      	lsls	r3, r3, #1
 80027ae:	440b      	add	r3, r1
 80027b0:	01db      	lsls	r3, r3, #7
 80027b2:	4413      	add	r3, r2
 80027b4:	4403      	add	r3, r0
 80027b6:	681b      	ldr	r3, [r3, #0]
 80027b8:	b2db      	uxtb	r3, r3
 80027ba:	3330      	adds	r3, #48	; 0x30
 80027bc:	b2da      	uxtb	r2, r3
 80027be:	4b23      	ldr	r3, [pc, #140]	; (800284c <ChooseNextNode+0x4e8>)
 80027c0:	711a      	strb	r2, [r3, #4]
		TX_BUFFER[5] = '\n';
 80027c2:	4b22      	ldr	r3, [pc, #136]	; (800284c <ChooseNextNode+0x4e8>)
 80027c4:	220a      	movs	r2, #10
 80027c6:	715a      	strb	r2, [r3, #5]
		TX_BUFFER[6] = 'I';
 80027c8:	4b20      	ldr	r3, [pc, #128]	; (800284c <ChooseNextNode+0x4e8>)
 80027ca:	2249      	movs	r2, #73	; 0x49
 80027cc:	719a      	strb	r2, [r3, #6]
		TX_BUFFER[7] = Map[x][y].Lados[IZQUIERDA] + '0';
 80027ce:	481e      	ldr	r0, [pc, #120]	; (8002848 <ChooseNextNode+0x4e4>)
 80027d0:	683b      	ldr	r3, [r7, #0]
 80027d2:	6879      	ldr	r1, [r7, #4]
 80027d4:	461a      	mov	r2, r3
 80027d6:	0052      	lsls	r2, r2, #1
 80027d8:	441a      	add	r2, r3
 80027da:	00d3      	lsls	r3, r2, #3
 80027dc:	461a      	mov	r2, r3
 80027de:	460b      	mov	r3, r1
 80027e0:	005b      	lsls	r3, r3, #1
 80027e2:	440b      	add	r3, r1
 80027e4:	01db      	lsls	r3, r3, #7
 80027e6:	4413      	add	r3, r2
 80027e8:	4403      	add	r3, r0
 80027ea:	3304      	adds	r3, #4
 80027ec:	681b      	ldr	r3, [r3, #0]
 80027ee:	b2db      	uxtb	r3, r3
 80027f0:	3330      	adds	r3, #48	; 0x30
 80027f2:	b2da      	uxtb	r2, r3
 80027f4:	4b15      	ldr	r3, [pc, #84]	; (800284c <ChooseNextNode+0x4e8>)
 80027f6:	71da      	strb	r2, [r3, #7]
		TX_BUFFER[8] = '\n';
 80027f8:	4b14      	ldr	r3, [pc, #80]	; (800284c <ChooseNextNode+0x4e8>)
 80027fa:	220a      	movs	r2, #10
 80027fc:	721a      	strb	r2, [r3, #8]
		TX_BUFFER[9] = 'A';
 80027fe:	4b13      	ldr	r3, [pc, #76]	; (800284c <ChooseNextNode+0x4e8>)
 8002800:	2241      	movs	r2, #65	; 0x41
 8002802:	725a      	strb	r2, [r3, #9]
		TX_BUFFER[10] = Map[x][y].Lados[ATRAS] + '0';
 8002804:	4810      	ldr	r0, [pc, #64]	; (8002848 <ChooseNextNode+0x4e4>)
 8002806:	683b      	ldr	r3, [r7, #0]
 8002808:	6879      	ldr	r1, [r7, #4]
 800280a:	461a      	mov	r2, r3
 800280c:	0052      	lsls	r2, r2, #1
 800280e:	441a      	add	r2, r3
 8002810:	00d3      	lsls	r3, r2, #3
 8002812:	461a      	mov	r2, r3
 8002814:	460b      	mov	r3, r1
 8002816:	005b      	lsls	r3, r3, #1
 8002818:	440b      	add	r3, r1
 800281a:	01db      	lsls	r3, r3, #7
 800281c:	4413      	add	r3, r2
 800281e:	4403      	add	r3, r0
 8002820:	3308      	adds	r3, #8
 8002822:	681b      	ldr	r3, [r3, #0]
 8002824:	b2db      	uxtb	r3, r3
 8002826:	3330      	adds	r3, #48	; 0x30
 8002828:	b2da      	uxtb	r2, r3
 800282a:	4b08      	ldr	r3, [pc, #32]	; (800284c <ChooseNextNode+0x4e8>)
 800282c:	729a      	strb	r2, [r3, #10]
		TX_BUFFER[11] = '\n';
 800282e:	4b07      	ldr	r3, [pc, #28]	; (800284c <ChooseNextNode+0x4e8>)
 8002830:	220a      	movs	r2, #10
 8002832:	72da      	strb	r2, [r3, #11]
		HAL_UART_Transmit(&huart1, TX_BUFFER, 12, 100);
 8002834:	2364      	movs	r3, #100	; 0x64
 8002836:	220c      	movs	r2, #12
 8002838:	4904      	ldr	r1, [pc, #16]	; (800284c <ChooseNextNode+0x4e8>)
 800283a:	4805      	ldr	r0, [pc, #20]	; (8002850 <ChooseNextNode+0x4ec>)
 800283c:	f003 fffd 	bl	800683a <HAL_UART_Transmit>
		return DERECHA;
 8002840:	2303      	movs	r3, #3
 8002842:	e089      	b.n	8002958 <ChooseNextNode+0x5f4>
 8002844:	200011ec 	.word	0x200011ec
 8002848:	200012c0 	.word	0x200012c0
 800284c:	2000121c 	.word	0x2000121c
 8002850:	20002bc4 	.word	0x20002bc4
	} else {
		TX_BUFFER[0] = 'O';
 8002854:	4b42      	ldr	r3, [pc, #264]	; (8002960 <ChooseNextNode+0x5fc>)
 8002856:	224f      	movs	r2, #79	; 0x4f
 8002858:	701a      	strb	r2, [r3, #0]
		TX_BUFFER[1] = '\n';
 800285a:	4b41      	ldr	r3, [pc, #260]	; (8002960 <ChooseNextNode+0x5fc>)
 800285c:	220a      	movs	r2, #10
 800285e:	705a      	strb	r2, [r3, #1]
		HAL_UART_Transmit(&huart1, TX_BUFFER, 2, 100);
 8002860:	2364      	movs	r3, #100	; 0x64
 8002862:	2202      	movs	r2, #2
 8002864:	493e      	ldr	r1, [pc, #248]	; (8002960 <ChooseNextNode+0x5fc>)
 8002866:	483f      	ldr	r0, [pc, #252]	; (8002964 <ChooseNextNode+0x600>)
 8002868:	f003 ffe7 	bl	800683a <HAL_UART_Transmit>
		TX_BUFFER[0] = 'D';
 800286c:	4b3c      	ldr	r3, [pc, #240]	; (8002960 <ChooseNextNode+0x5fc>)
 800286e:	2244      	movs	r2, #68	; 0x44
 8002870:	701a      	strb	r2, [r3, #0]
		TX_BUFFER[1] = Map[x][y].Lados[DERECHA] + '0';
 8002872:	483d      	ldr	r0, [pc, #244]	; (8002968 <ChooseNextNode+0x604>)
 8002874:	683b      	ldr	r3, [r7, #0]
 8002876:	6879      	ldr	r1, [r7, #4]
 8002878:	461a      	mov	r2, r3
 800287a:	0052      	lsls	r2, r2, #1
 800287c:	441a      	add	r2, r3
 800287e:	00d3      	lsls	r3, r2, #3
 8002880:	461a      	mov	r2, r3
 8002882:	460b      	mov	r3, r1
 8002884:	005b      	lsls	r3, r3, #1
 8002886:	440b      	add	r3, r1
 8002888:	01db      	lsls	r3, r3, #7
 800288a:	4413      	add	r3, r2
 800288c:	4403      	add	r3, r0
 800288e:	330c      	adds	r3, #12
 8002890:	681b      	ldr	r3, [r3, #0]
 8002892:	b2db      	uxtb	r3, r3
 8002894:	3330      	adds	r3, #48	; 0x30
 8002896:	b2da      	uxtb	r2, r3
 8002898:	4b31      	ldr	r3, [pc, #196]	; (8002960 <ChooseNextNode+0x5fc>)
 800289a:	705a      	strb	r2, [r3, #1]
		TX_BUFFER[2] = '\n';
 800289c:	4b30      	ldr	r3, [pc, #192]	; (8002960 <ChooseNextNode+0x5fc>)
 800289e:	220a      	movs	r2, #10
 80028a0:	709a      	strb	r2, [r3, #2]
		TX_BUFFER[3] = 'C';
 80028a2:	4b2f      	ldr	r3, [pc, #188]	; (8002960 <ChooseNextNode+0x5fc>)
 80028a4:	2243      	movs	r2, #67	; 0x43
 80028a6:	70da      	strb	r2, [r3, #3]
		TX_BUFFER[4] = Map[x][y].Lados[ADELANTE] + '0';
 80028a8:	482f      	ldr	r0, [pc, #188]	; (8002968 <ChooseNextNode+0x604>)
 80028aa:	683b      	ldr	r3, [r7, #0]
 80028ac:	6879      	ldr	r1, [r7, #4]
 80028ae:	461a      	mov	r2, r3
 80028b0:	0052      	lsls	r2, r2, #1
 80028b2:	441a      	add	r2, r3
 80028b4:	00d3      	lsls	r3, r2, #3
 80028b6:	461a      	mov	r2, r3
 80028b8:	460b      	mov	r3, r1
 80028ba:	005b      	lsls	r3, r3, #1
 80028bc:	440b      	add	r3, r1
 80028be:	01db      	lsls	r3, r3, #7
 80028c0:	4413      	add	r3, r2
 80028c2:	4403      	add	r3, r0
 80028c4:	681b      	ldr	r3, [r3, #0]
 80028c6:	b2db      	uxtb	r3, r3
 80028c8:	3330      	adds	r3, #48	; 0x30
 80028ca:	b2da      	uxtb	r2, r3
 80028cc:	4b24      	ldr	r3, [pc, #144]	; (8002960 <ChooseNextNode+0x5fc>)
 80028ce:	711a      	strb	r2, [r3, #4]
		TX_BUFFER[5] = '\n';
 80028d0:	4b23      	ldr	r3, [pc, #140]	; (8002960 <ChooseNextNode+0x5fc>)
 80028d2:	220a      	movs	r2, #10
 80028d4:	715a      	strb	r2, [r3, #5]
		TX_BUFFER[6] = 'I';
 80028d6:	4b22      	ldr	r3, [pc, #136]	; (8002960 <ChooseNextNode+0x5fc>)
 80028d8:	2249      	movs	r2, #73	; 0x49
 80028da:	719a      	strb	r2, [r3, #6]
		TX_BUFFER[7] = Map[x][y].Lados[IZQUIERDA] + '0';
 80028dc:	4822      	ldr	r0, [pc, #136]	; (8002968 <ChooseNextNode+0x604>)
 80028de:	683b      	ldr	r3, [r7, #0]
 80028e0:	6879      	ldr	r1, [r7, #4]
 80028e2:	461a      	mov	r2, r3
 80028e4:	0052      	lsls	r2, r2, #1
 80028e6:	441a      	add	r2, r3
 80028e8:	00d3      	lsls	r3, r2, #3
 80028ea:	461a      	mov	r2, r3
 80028ec:	460b      	mov	r3, r1
 80028ee:	005b      	lsls	r3, r3, #1
 80028f0:	440b      	add	r3, r1
 80028f2:	01db      	lsls	r3, r3, #7
 80028f4:	4413      	add	r3, r2
 80028f6:	4403      	add	r3, r0
 80028f8:	3304      	adds	r3, #4
 80028fa:	681b      	ldr	r3, [r3, #0]
 80028fc:	b2db      	uxtb	r3, r3
 80028fe:	3330      	adds	r3, #48	; 0x30
 8002900:	b2da      	uxtb	r2, r3
 8002902:	4b17      	ldr	r3, [pc, #92]	; (8002960 <ChooseNextNode+0x5fc>)
 8002904:	71da      	strb	r2, [r3, #7]
		TX_BUFFER[8] = '\n';
 8002906:	4b16      	ldr	r3, [pc, #88]	; (8002960 <ChooseNextNode+0x5fc>)
 8002908:	220a      	movs	r2, #10
 800290a:	721a      	strb	r2, [r3, #8]
		TX_BUFFER[9] = 'A';
 800290c:	4b14      	ldr	r3, [pc, #80]	; (8002960 <ChooseNextNode+0x5fc>)
 800290e:	2241      	movs	r2, #65	; 0x41
 8002910:	725a      	strb	r2, [r3, #9]
		TX_BUFFER[10] = Map[x][y].Lados[ATRAS] + '0';
 8002912:	4815      	ldr	r0, [pc, #84]	; (8002968 <ChooseNextNode+0x604>)
 8002914:	683b      	ldr	r3, [r7, #0]
 8002916:	6879      	ldr	r1, [r7, #4]
 8002918:	461a      	mov	r2, r3
 800291a:	0052      	lsls	r2, r2, #1
 800291c:	441a      	add	r2, r3
 800291e:	00d3      	lsls	r3, r2, #3
 8002920:	461a      	mov	r2, r3
 8002922:	460b      	mov	r3, r1
 8002924:	005b      	lsls	r3, r3, #1
 8002926:	440b      	add	r3, r1
 8002928:	01db      	lsls	r3, r3, #7
 800292a:	4413      	add	r3, r2
 800292c:	4403      	add	r3, r0
 800292e:	3308      	adds	r3, #8
 8002930:	681b      	ldr	r3, [r3, #0]
 8002932:	b2db      	uxtb	r3, r3
 8002934:	3330      	adds	r3, #48	; 0x30
 8002936:	b2da      	uxtb	r2, r3
 8002938:	4b09      	ldr	r3, [pc, #36]	; (8002960 <ChooseNextNode+0x5fc>)
 800293a:	729a      	strb	r2, [r3, #10]
		TX_BUFFER[11] = '\n';
 800293c:	4b08      	ldr	r3, [pc, #32]	; (8002960 <ChooseNextNode+0x5fc>)
 800293e:	220a      	movs	r2, #10
 8002940:	72da      	strb	r2, [r3, #11]
		HAL_UART_Transmit(&huart1, TX_BUFFER, 12, 100);
 8002942:	2364      	movs	r3, #100	; 0x64
 8002944:	220c      	movs	r2, #12
 8002946:	4906      	ldr	r1, [pc, #24]	; (8002960 <ChooseNextNode+0x5fc>)
 8002948:	4806      	ldr	r0, [pc, #24]	; (8002964 <ChooseNextNode+0x600>)
 800294a:	f003 ff76 	bl	800683a <HAL_UART_Transmit>
		return SearchAvailableNode(x, y);
 800294e:	6839      	ldr	r1, [r7, #0]
 8002950:	6878      	ldr	r0, [r7, #4]
 8002952:	f000 f841 	bl	80029d8 <SearchAvailableNode>
 8002956:	4603      	mov	r3, r0
	}
	last.x = x;
	last.y = y;
}
 8002958:	4618      	mov	r0, r3
 800295a:	370c      	adds	r7, #12
 800295c:	46bd      	mov	sp, r7
 800295e:	bd90      	pop	{r4, r7, pc}
 8002960:	2000121c 	.word	0x2000121c
 8002964:	20002bc4 	.word	0x20002bc4
 8002968:	200012c0 	.word	0x200012c0

0800296c <EliminateNode>:

void EliminateNode(int x, int y) {
 800296c:	b490      	push	{r4, r7}
 800296e:	b082      	sub	sp, #8
 8002970:	af00      	add	r7, sp, #0
 8002972:	6078      	str	r0, [r7, #4]
 8002974:	6039      	str	r1, [r7, #0]
//Serial.println("Borro");
	Map[x][y].Lados[direcciones[ATRAS]] = 1;
 8002976:	4b15      	ldr	r3, [pc, #84]	; (80029cc <EliminateNode+0x60>)
 8002978:	6898      	ldr	r0, [r3, #8]
 800297a:	4c15      	ldr	r4, [pc, #84]	; (80029d0 <EliminateNode+0x64>)
 800297c:	683b      	ldr	r3, [r7, #0]
 800297e:	6879      	ldr	r1, [r7, #4]
 8002980:	461a      	mov	r2, r3
 8002982:	0052      	lsls	r2, r2, #1
 8002984:	441a      	add	r2, r3
 8002986:	0053      	lsls	r3, r2, #1
 8002988:	461a      	mov	r2, r3
 800298a:	460b      	mov	r3, r1
 800298c:	005b      	lsls	r3, r3, #1
 800298e:	440b      	add	r3, r1
 8002990:	015b      	lsls	r3, r3, #5
 8002992:	4413      	add	r3, r2
 8002994:	4403      	add	r3, r0
 8002996:	2201      	movs	r2, #1
 8002998:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
	Map[last.x][last.y].visitado = 0;
 800299c:	4b0d      	ldr	r3, [pc, #52]	; (80029d4 <EliminateNode+0x68>)
 800299e:	6819      	ldr	r1, [r3, #0]
 80029a0:	4b0c      	ldr	r3, [pc, #48]	; (80029d4 <EliminateNode+0x68>)
 80029a2:	685b      	ldr	r3, [r3, #4]
 80029a4:	480a      	ldr	r0, [pc, #40]	; (80029d0 <EliminateNode+0x64>)
 80029a6:	461a      	mov	r2, r3
 80029a8:	0052      	lsls	r2, r2, #1
 80029aa:	441a      	add	r2, r3
 80029ac:	00d3      	lsls	r3, r2, #3
 80029ae:	461a      	mov	r2, r3
 80029b0:	460b      	mov	r3, r1
 80029b2:	005b      	lsls	r3, r3, #1
 80029b4:	440b      	add	r3, r1
 80029b6:	01db      	lsls	r3, r3, #7
 80029b8:	4413      	add	r3, r2
 80029ba:	4403      	add	r3, r0
 80029bc:	3310      	adds	r3, #16
 80029be:	2200      	movs	r2, #0
 80029c0:	601a      	str	r2, [r3, #0]
}
 80029c2:	bf00      	nop
 80029c4:	3708      	adds	r7, #8
 80029c6:	46bd      	mov	sp, r7
 80029c8:	bc90      	pop	{r4, r7}
 80029ca:	4770      	bx	lr
 80029cc:	200011ec 	.word	0x200011ec
 80029d0:	200012c0 	.word	0x200012c0
 80029d4:	200012b8 	.word	0x200012b8

080029d8 <SearchAvailableNode>:

int SearchAvailableNode(int x, int y) {
 80029d8:	b590      	push	{r4, r7, lr}
 80029da:	b083      	sub	sp, #12
 80029dc:	af00      	add	r7, sp, #0
 80029de:	6078      	str	r0, [r7, #4]
 80029e0:	6039      	str	r1, [r7, #0]
	if (Map[x][y].Lados[direcciones[ADELANTE]] != 1) {
 80029e2:	4b70      	ldr	r3, [pc, #448]	; (8002ba4 <SearchAvailableNode+0x1cc>)
 80029e4:	6818      	ldr	r0, [r3, #0]
 80029e6:	4c70      	ldr	r4, [pc, #448]	; (8002ba8 <SearchAvailableNode+0x1d0>)
 80029e8:	683b      	ldr	r3, [r7, #0]
 80029ea:	6879      	ldr	r1, [r7, #4]
 80029ec:	461a      	mov	r2, r3
 80029ee:	0052      	lsls	r2, r2, #1
 80029f0:	441a      	add	r2, r3
 80029f2:	0053      	lsls	r3, r2, #1
 80029f4:	461a      	mov	r2, r3
 80029f6:	460b      	mov	r3, r1
 80029f8:	005b      	lsls	r3, r3, #1
 80029fa:	440b      	add	r3, r1
 80029fc:	015b      	lsls	r3, r3, #5
 80029fe:	4413      	add	r3, r2
 8002a00:	4403      	add	r3, r0
 8002a02:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8002a06:	2b01      	cmp	r3, #1
 8002a08:	d02d      	beq.n	8002a66 <SearchAvailableNode+0x8e>
		//Serial.println("Adelante1");
		Map[x][y].Lados[direcciones[ADELANTE]] = 2;
 8002a0a:	4b66      	ldr	r3, [pc, #408]	; (8002ba4 <SearchAvailableNode+0x1cc>)
 8002a0c:	6818      	ldr	r0, [r3, #0]
 8002a0e:	4c66      	ldr	r4, [pc, #408]	; (8002ba8 <SearchAvailableNode+0x1d0>)
 8002a10:	683b      	ldr	r3, [r7, #0]
 8002a12:	6879      	ldr	r1, [r7, #4]
 8002a14:	461a      	mov	r2, r3
 8002a16:	0052      	lsls	r2, r2, #1
 8002a18:	441a      	add	r2, r3
 8002a1a:	0053      	lsls	r3, r2, #1
 8002a1c:	461a      	mov	r2, r3
 8002a1e:	460b      	mov	r3, r1
 8002a20:	005b      	lsls	r3, r3, #1
 8002a22:	440b      	add	r3, r1
 8002a24:	015b      	lsls	r3, r3, #5
 8002a26:	4413      	add	r3, r2
 8002a28:	4403      	add	r3, r0
 8002a2a:	2202      	movs	r2, #2
 8002a2c:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
		moveNode(ADELANTE);
 8002a30:	2000      	movs	r0, #0
 8002a32:	f000 f8bb 	bl	8002bac <moveNode>
		if (Map[x][y].visitado > 1) {
 8002a36:	485c      	ldr	r0, [pc, #368]	; (8002ba8 <SearchAvailableNode+0x1d0>)
 8002a38:	683b      	ldr	r3, [r7, #0]
 8002a3a:	6879      	ldr	r1, [r7, #4]
 8002a3c:	461a      	mov	r2, r3
 8002a3e:	0052      	lsls	r2, r2, #1
 8002a40:	441a      	add	r2, r3
 8002a42:	00d3      	lsls	r3, r2, #3
 8002a44:	461a      	mov	r2, r3
 8002a46:	460b      	mov	r3, r1
 8002a48:	005b      	lsls	r3, r3, #1
 8002a4a:	440b      	add	r3, r1
 8002a4c:	01db      	lsls	r3, r3, #7
 8002a4e:	4413      	add	r3, r2
 8002a50:	4403      	add	r3, r0
 8002a52:	3310      	adds	r3, #16
 8002a54:	681b      	ldr	r3, [r3, #0]
 8002a56:	2b01      	cmp	r3, #1
 8002a58:	dd03      	ble.n	8002a62 <SearchAvailableNode+0x8a>
			EliminateNode(x, y);
 8002a5a:	6839      	ldr	r1, [r7, #0]
 8002a5c:	6878      	ldr	r0, [r7, #4]
 8002a5e:	f7ff ff85 	bl	800296c <EliminateNode>
		}
		return ADELANTE;
 8002a62:	2300      	movs	r3, #0
 8002a64:	e09a      	b.n	8002b9c <SearchAvailableNode+0x1c4>
	} else if (Map[x][y].Lados[direcciones[IZQUIERDA]] != 1) {
 8002a66:	4b4f      	ldr	r3, [pc, #316]	; (8002ba4 <SearchAvailableNode+0x1cc>)
 8002a68:	6858      	ldr	r0, [r3, #4]
 8002a6a:	4c4f      	ldr	r4, [pc, #316]	; (8002ba8 <SearchAvailableNode+0x1d0>)
 8002a6c:	683b      	ldr	r3, [r7, #0]
 8002a6e:	6879      	ldr	r1, [r7, #4]
 8002a70:	461a      	mov	r2, r3
 8002a72:	0052      	lsls	r2, r2, #1
 8002a74:	441a      	add	r2, r3
 8002a76:	0053      	lsls	r3, r2, #1
 8002a78:	461a      	mov	r2, r3
 8002a7a:	460b      	mov	r3, r1
 8002a7c:	005b      	lsls	r3, r3, #1
 8002a7e:	440b      	add	r3, r1
 8002a80:	015b      	lsls	r3, r3, #5
 8002a82:	4413      	add	r3, r2
 8002a84:	4403      	add	r3, r0
 8002a86:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8002a8a:	2b01      	cmp	r3, #1
 8002a8c:	d02d      	beq.n	8002aea <SearchAvailableNode+0x112>
		//Serial.println("IZQUIERDA1");
		Map[x][y].Lados[direcciones[IZQUIERDA]] = 2;
 8002a8e:	4b45      	ldr	r3, [pc, #276]	; (8002ba4 <SearchAvailableNode+0x1cc>)
 8002a90:	6858      	ldr	r0, [r3, #4]
 8002a92:	4c45      	ldr	r4, [pc, #276]	; (8002ba8 <SearchAvailableNode+0x1d0>)
 8002a94:	683b      	ldr	r3, [r7, #0]
 8002a96:	6879      	ldr	r1, [r7, #4]
 8002a98:	461a      	mov	r2, r3
 8002a9a:	0052      	lsls	r2, r2, #1
 8002a9c:	441a      	add	r2, r3
 8002a9e:	0053      	lsls	r3, r2, #1
 8002aa0:	461a      	mov	r2, r3
 8002aa2:	460b      	mov	r3, r1
 8002aa4:	005b      	lsls	r3, r3, #1
 8002aa6:	440b      	add	r3, r1
 8002aa8:	015b      	lsls	r3, r3, #5
 8002aaa:	4413      	add	r3, r2
 8002aac:	4403      	add	r3, r0
 8002aae:	2202      	movs	r2, #2
 8002ab0:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
		moveNode(IZQUIERDA);
 8002ab4:	2001      	movs	r0, #1
 8002ab6:	f000 f879 	bl	8002bac <moveNode>
		//rotateAxis(IZQUIERDA);
		if (Map[x][y].visitado > 1) {
 8002aba:	483b      	ldr	r0, [pc, #236]	; (8002ba8 <SearchAvailableNode+0x1d0>)
 8002abc:	683b      	ldr	r3, [r7, #0]
 8002abe:	6879      	ldr	r1, [r7, #4]
 8002ac0:	461a      	mov	r2, r3
 8002ac2:	0052      	lsls	r2, r2, #1
 8002ac4:	441a      	add	r2, r3
 8002ac6:	00d3      	lsls	r3, r2, #3
 8002ac8:	461a      	mov	r2, r3
 8002aca:	460b      	mov	r3, r1
 8002acc:	005b      	lsls	r3, r3, #1
 8002ace:	440b      	add	r3, r1
 8002ad0:	01db      	lsls	r3, r3, #7
 8002ad2:	4413      	add	r3, r2
 8002ad4:	4403      	add	r3, r0
 8002ad6:	3310      	adds	r3, #16
 8002ad8:	681b      	ldr	r3, [r3, #0]
 8002ada:	2b01      	cmp	r3, #1
 8002adc:	dd03      	ble.n	8002ae6 <SearchAvailableNode+0x10e>
			EliminateNode(x, y);
 8002ade:	6839      	ldr	r1, [r7, #0]
 8002ae0:	6878      	ldr	r0, [r7, #4]
 8002ae2:	f7ff ff43 	bl	800296c <EliminateNode>
		}
		return IZQUIERDA;
 8002ae6:	2301      	movs	r3, #1
 8002ae8:	e058      	b.n	8002b9c <SearchAvailableNode+0x1c4>
	} else if (Map[x][y].Lados[direcciones[DERECHA]] != 1) {
 8002aea:	4b2e      	ldr	r3, [pc, #184]	; (8002ba4 <SearchAvailableNode+0x1cc>)
 8002aec:	68d8      	ldr	r0, [r3, #12]
 8002aee:	4c2e      	ldr	r4, [pc, #184]	; (8002ba8 <SearchAvailableNode+0x1d0>)
 8002af0:	683b      	ldr	r3, [r7, #0]
 8002af2:	6879      	ldr	r1, [r7, #4]
 8002af4:	461a      	mov	r2, r3
 8002af6:	0052      	lsls	r2, r2, #1
 8002af8:	441a      	add	r2, r3
 8002afa:	0053      	lsls	r3, r2, #1
 8002afc:	461a      	mov	r2, r3
 8002afe:	460b      	mov	r3, r1
 8002b00:	005b      	lsls	r3, r3, #1
 8002b02:	440b      	add	r3, r1
 8002b04:	015b      	lsls	r3, r3, #5
 8002b06:	4413      	add	r3, r2
 8002b08:	4403      	add	r3, r0
 8002b0a:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8002b0e:	2b01      	cmp	r3, #1
 8002b10:	d02d      	beq.n	8002b6e <SearchAvailableNode+0x196>
		//Serial.println("DERECHA1");
		Map[x][y].Lados[direcciones[DERECHA]] = 2;
 8002b12:	4b24      	ldr	r3, [pc, #144]	; (8002ba4 <SearchAvailableNode+0x1cc>)
 8002b14:	68d8      	ldr	r0, [r3, #12]
 8002b16:	4c24      	ldr	r4, [pc, #144]	; (8002ba8 <SearchAvailableNode+0x1d0>)
 8002b18:	683b      	ldr	r3, [r7, #0]
 8002b1a:	6879      	ldr	r1, [r7, #4]
 8002b1c:	461a      	mov	r2, r3
 8002b1e:	0052      	lsls	r2, r2, #1
 8002b20:	441a      	add	r2, r3
 8002b22:	0053      	lsls	r3, r2, #1
 8002b24:	461a      	mov	r2, r3
 8002b26:	460b      	mov	r3, r1
 8002b28:	005b      	lsls	r3, r3, #1
 8002b2a:	440b      	add	r3, r1
 8002b2c:	015b      	lsls	r3, r3, #5
 8002b2e:	4413      	add	r3, r2
 8002b30:	4403      	add	r3, r0
 8002b32:	2202      	movs	r2, #2
 8002b34:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
		moveNode(DERECHA);
 8002b38:	2003      	movs	r0, #3
 8002b3a:	f000 f837 	bl	8002bac <moveNode>
		if (Map[x][y].visitado > 1) {
 8002b3e:	481a      	ldr	r0, [pc, #104]	; (8002ba8 <SearchAvailableNode+0x1d0>)
 8002b40:	683b      	ldr	r3, [r7, #0]
 8002b42:	6879      	ldr	r1, [r7, #4]
 8002b44:	461a      	mov	r2, r3
 8002b46:	0052      	lsls	r2, r2, #1
 8002b48:	441a      	add	r2, r3
 8002b4a:	00d3      	lsls	r3, r2, #3
 8002b4c:	461a      	mov	r2, r3
 8002b4e:	460b      	mov	r3, r1
 8002b50:	005b      	lsls	r3, r3, #1
 8002b52:	440b      	add	r3, r1
 8002b54:	01db      	lsls	r3, r3, #7
 8002b56:	4413      	add	r3, r2
 8002b58:	4403      	add	r3, r0
 8002b5a:	3310      	adds	r3, #16
 8002b5c:	681b      	ldr	r3, [r3, #0]
 8002b5e:	2b01      	cmp	r3, #1
 8002b60:	dd03      	ble.n	8002b6a <SearchAvailableNode+0x192>
			EliminateNode(x, y);
 8002b62:	6839      	ldr	r1, [r7, #0]
 8002b64:	6878      	ldr	r0, [r7, #4]
 8002b66:	f7ff ff01 	bl	800296c <EliminateNode>
		}
		//rotateAxis(DERECHA);
		return DERECHA;
 8002b6a:	2303      	movs	r3, #3
 8002b6c:	e016      	b.n	8002b9c <SearchAvailableNode+0x1c4>
	} else if (Map[x][y].Lados[direcciones[ATRAS]] != 1) {
 8002b6e:	4b0d      	ldr	r3, [pc, #52]	; (8002ba4 <SearchAvailableNode+0x1cc>)
 8002b70:	6898      	ldr	r0, [r3, #8]
 8002b72:	4c0d      	ldr	r4, [pc, #52]	; (8002ba8 <SearchAvailableNode+0x1d0>)
 8002b74:	683b      	ldr	r3, [r7, #0]
 8002b76:	6879      	ldr	r1, [r7, #4]
 8002b78:	461a      	mov	r2, r3
 8002b7a:	0052      	lsls	r2, r2, #1
 8002b7c:	441a      	add	r2, r3
 8002b7e:	0053      	lsls	r3, r2, #1
 8002b80:	461a      	mov	r2, r3
 8002b82:	460b      	mov	r3, r1
 8002b84:	005b      	lsls	r3, r3, #1
 8002b86:	440b      	add	r3, r1
 8002b88:	015b      	lsls	r3, r3, #5
 8002b8a:	4413      	add	r3, r2
 8002b8c:	4403      	add	r3, r0
 8002b8e:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8002b92:	2b01      	cmp	r3, #1
 8002b94:	d001      	beq.n	8002b9a <SearchAvailableNode+0x1c2>
		//Serial.println("atras1");
		return ATRAS;
 8002b96:	2302      	movs	r3, #2
 8002b98:	e000      	b.n	8002b9c <SearchAvailableNode+0x1c4>
	}
	return 0;
 8002b9a:	2300      	movs	r3, #0
}
 8002b9c:	4618      	mov	r0, r3
 8002b9e:	370c      	adds	r7, #12
 8002ba0:	46bd      	mov	sp, r7
 8002ba2:	bd90      	pop	{r4, r7, pc}
 8002ba4:	200011ec 	.word	0x200011ec
 8002ba8:	200012c0 	.word	0x200012c0

08002bac <moveNode>:
void moveNode(int lado) {
 8002bac:	b480      	push	{r7}
 8002bae:	b083      	sub	sp, #12
 8002bb0:	af00      	add	r7, sp, #0
 8002bb2:	6078      	str	r0, [r7, #4]
	switch (lado) {
 8002bb4:	687b      	ldr	r3, [r7, #4]
 8002bb6:	2b03      	cmp	r3, #3
 8002bb8:	d822      	bhi.n	8002c00 <moveNode+0x54>
 8002bba:	a201      	add	r2, pc, #4	; (adr r2, 8002bc0 <moveNode+0x14>)
 8002bbc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002bc0:	08002bd1 	.word	0x08002bd1
 8002bc4:	08002bdd 	.word	0x08002bdd
 8002bc8:	08002bf5 	.word	0x08002bf5
 8002bcc:	08002be9 	.word	0x08002be9
	case ADELANTE:
		//if (visual.y != ALTO - 1) {
		actual.y++;
 8002bd0:	4b0e      	ldr	r3, [pc, #56]	; (8002c0c <moveNode+0x60>)
 8002bd2:	685b      	ldr	r3, [r3, #4]
 8002bd4:	3301      	adds	r3, #1
 8002bd6:	4a0d      	ldr	r2, [pc, #52]	; (8002c0c <moveNode+0x60>)
 8002bd8:	6053      	str	r3, [r2, #4]
		//visual.y++;
		//}
		break;
 8002bda:	e011      	b.n	8002c00 <moveNode+0x54>
	case IZQUIERDA:
		//if (visual.x != 0) {
		actual.x--;
 8002bdc:	4b0b      	ldr	r3, [pc, #44]	; (8002c0c <moveNode+0x60>)
 8002bde:	681b      	ldr	r3, [r3, #0]
 8002be0:	3b01      	subs	r3, #1
 8002be2:	4a0a      	ldr	r2, [pc, #40]	; (8002c0c <moveNode+0x60>)
 8002be4:	6013      	str	r3, [r2, #0]
		//visual.x--;
		//}
		break;
 8002be6:	e00b      	b.n	8002c00 <moveNode+0x54>
	case DERECHA:
		// if (visual.x != ANCHO - 1) {
		actual.x++;
 8002be8:	4b08      	ldr	r3, [pc, #32]	; (8002c0c <moveNode+0x60>)
 8002bea:	681b      	ldr	r3, [r3, #0]
 8002bec:	3301      	adds	r3, #1
 8002bee:	4a07      	ldr	r2, [pc, #28]	; (8002c0c <moveNode+0x60>)
 8002bf0:	6013      	str	r3, [r2, #0]
		// visual.x++;
		// }
		break;
 8002bf2:	e005      	b.n	8002c00 <moveNode+0x54>
	case ATRAS:
		// if (visual.y != 0) {
		actual.y--;
 8002bf4:	4b05      	ldr	r3, [pc, #20]	; (8002c0c <moveNode+0x60>)
 8002bf6:	685b      	ldr	r3, [r3, #4]
 8002bf8:	3b01      	subs	r3, #1
 8002bfa:	4a04      	ldr	r2, [pc, #16]	; (8002c0c <moveNode+0x60>)
 8002bfc:	6053      	str	r3, [r2, #4]
		// visual.y--;
		// }

		break;
 8002bfe:	bf00      	nop
	}
}
 8002c00:	bf00      	nop
 8002c02:	370c      	adds	r7, #12
 8002c04:	46bd      	mov	sp, r7
 8002c06:	bc80      	pop	{r7}
 8002c08:	4770      	bx	lr
 8002c0a:	bf00      	nop
 8002c0c:	200012b0 	.word	0x200012b0

08002c10 <movementMachine>:
 offset = 30;
 }
 break;
 }
 }*/
void movementMachine(int move) {
 8002c10:	b590      	push	{r4, r7, lr}
 8002c12:	b083      	sub	sp, #12
 8002c14:	af00      	add	r7, sp, #0
 8002c16:	6078      	str	r0, [r7, #4]
	switch (movementState) {
 8002c18:	4ba3      	ldr	r3, [pc, #652]	; (8002ea8 <movementMachine+0x298>)
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	2b05      	cmp	r3, #5
 8002c1e:	f200 813e 	bhi.w	8002e9e <movementMachine+0x28e>
 8002c22:	a201      	add	r2, pc, #4	; (adr r2, 8002c28 <movementMachine+0x18>)
 8002c24:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002c28:	08002c6d 	.word	0x08002c6d
 8002c2c:	08002cfd 	.word	0x08002cfd
 8002c30:	08002e11 	.word	0x08002e11
 8002c34:	08002d87 	.word	0x08002d87
 8002c38:	08002e9f 	.word	0x08002e9f
 8002c3c:	08002c41 	.word	0x08002c41
	case OFF:
		runMotor(OFF, MOTOR_A);
 8002c40:	2100      	movs	r1, #0
 8002c42:	2005      	movs	r0, #5
 8002c44:	f000 fda6 	bl	8003794 <runMotor>
		runMotor(OFF, MOTOR_B);
 8002c48:	2101      	movs	r1, #1
 8002c4a:	2005      	movs	r0, #5
 8002c4c:	f000 fda2 	bl	8003794 <runMotor>
		if (move != OFF) {
 8002c50:	687b      	ldr	r3, [r7, #4]
 8002c52:	2b05      	cmp	r3, #5
 8002c54:	f000 8122 	beq.w	8002e9c <movementMachine+0x28c>
			movementState = move;
 8002c58:	4a93      	ldr	r2, [pc, #588]	; (8002ea8 <movementMachine+0x298>)
 8002c5a:	687b      	ldr	r3, [r7, #4]
 8002c5c:	6013      	str	r3, [r2, #0]
			TIM3->CNT = 0;
 8002c5e:	4b93      	ldr	r3, [pc, #588]	; (8002eac <movementMachine+0x29c>)
 8002c60:	2200      	movs	r2, #0
 8002c62:	625a      	str	r2, [r3, #36]	; 0x24
			TIM4->CNT = 0;
 8002c64:	4b92      	ldr	r3, [pc, #584]	; (8002eb0 <movementMachine+0x2a0>)
 8002c66:	2200      	movs	r2, #0
 8002c68:	625a      	str	r2, [r3, #36]	; 0x24
		}
		break;
 8002c6a:	e117      	b.n	8002e9c <movementMachine+0x28c>
	case ADELANTE:
		intUartSend((int) calcularDistancia(TIM3->CNT) >> 1);
 8002c6c:	4b8f      	ldr	r3, [pc, #572]	; (8002eac <movementMachine+0x29c>)
 8002c6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c70:	4618      	mov	r0, r3
 8002c72:	f000 fd69 	bl	8003748 <calcularDistancia>
 8002c76:	4603      	mov	r3, r0
 8002c78:	4618      	mov	r0, r3
 8002c7a:	f7fe f9f9 	bl	8001070 <__aeabi_f2iz>
 8002c7e:	4603      	mov	r3, r0
 8002c80:	105b      	asrs	r3, r3, #1
 8002c82:	4618      	mov	r0, r3
 8002c84:	f7fe fc96 	bl	80015b4 <intUartSend>
		if ((calcularDistancia((TIM3->CNT) >> 1) < forwardChoice[choice])) {
 8002c88:	4b88      	ldr	r3, [pc, #544]	; (8002eac <movementMachine+0x29c>)
 8002c8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c8c:	085b      	lsrs	r3, r3, #1
 8002c8e:	4618      	mov	r0, r3
 8002c90:	f000 fd5a 	bl	8003748 <calcularDistancia>
 8002c94:	4604      	mov	r4, r0
 8002c96:	4b87      	ldr	r3, [pc, #540]	; (8002eb4 <movementMachine+0x2a4>)
 8002c98:	681b      	ldr	r3, [r3, #0]
 8002c9a:	4a87      	ldr	r2, [pc, #540]	; (8002eb8 <movementMachine+0x2a8>)
 8002c9c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002ca0:	4618      	mov	r0, r3
 8002ca2:	f7fd ffcb 	bl	8000c3c <__aeabi_i2f>
 8002ca6:	4603      	mov	r3, r0
 8002ca8:	4619      	mov	r1, r3
 8002caa:	4620      	mov	r0, r4
 8002cac:	f7fe f9b8 	bl	8001020 <__aeabi_fcmplt>
 8002cb0:	4603      	mov	r3, r0
 8002cb2:	2b00      	cmp	r3, #0
 8002cb4:	d00a      	beq.n	8002ccc <movementMachine+0xbc>
			moveStraight();
 8002cb6:	f000 fb05 	bl	80032c4 <moveStraight>
			runMotor(ADELANTE, MOTOR_A);
 8002cba:	2100      	movs	r1, #0
 8002cbc:	2000      	movs	r0, #0
 8002cbe:	f000 fd69 	bl	8003794 <runMotor>
			runMotor(ADELANTE, MOTOR_B);
 8002cc2:	2101      	movs	r1, #1
 8002cc4:	2000      	movs	r0, #0
 8002cc6:	f000 fd65 	bl	8003794 <runMotor>
			runMotor(OFF, MOTOR_B);
			TIM3->CNT = 0;
			TIM4->CNT = 0;
			offset = 0;
		}
		break;
 8002cca:	e0e8      	b.n	8002e9e <movementMachine+0x28e>
			movimientoFlag = 1;
 8002ccc:	4b7b      	ldr	r3, [pc, #492]	; (8002ebc <movementMachine+0x2ac>)
 8002cce:	2201      	movs	r2, #1
 8002cd0:	601a      	str	r2, [r3, #0]
			movementState = OFF;
 8002cd2:	4b75      	ldr	r3, [pc, #468]	; (8002ea8 <movementMachine+0x298>)
 8002cd4:	2205      	movs	r2, #5
 8002cd6:	601a      	str	r2, [r3, #0]
			runMotor(OFF, MOTOR_A);
 8002cd8:	2100      	movs	r1, #0
 8002cda:	2005      	movs	r0, #5
 8002cdc:	f000 fd5a 	bl	8003794 <runMotor>
			runMotor(OFF, MOTOR_B);
 8002ce0:	2101      	movs	r1, #1
 8002ce2:	2005      	movs	r0, #5
 8002ce4:	f000 fd56 	bl	8003794 <runMotor>
			TIM3->CNT = 0;
 8002ce8:	4b70      	ldr	r3, [pc, #448]	; (8002eac <movementMachine+0x29c>)
 8002cea:	2200      	movs	r2, #0
 8002cec:	625a      	str	r2, [r3, #36]	; 0x24
			TIM4->CNT = 0;
 8002cee:	4b70      	ldr	r3, [pc, #448]	; (8002eb0 <movementMachine+0x2a0>)
 8002cf0:	2200      	movs	r2, #0
 8002cf2:	625a      	str	r2, [r3, #36]	; 0x24
			offset = 0;
 8002cf4:	4b72      	ldr	r3, [pc, #456]	; (8002ec0 <movementMachine+0x2b0>)
 8002cf6:	2200      	movs	r2, #0
 8002cf8:	601a      	str	r2, [r3, #0]
		break;
 8002cfa:	e0d0      	b.n	8002e9e <movementMachine+0x28e>
	case IZQUIERDA:
		TIM2->CCR3 = baseChoice[choice];
 8002cfc:	4b6d      	ldr	r3, [pc, #436]	; (8002eb4 <movementMachine+0x2a4>)
 8002cfe:	681b      	ldr	r3, [r3, #0]
 8002d00:	4a70      	ldr	r2, [pc, #448]	; (8002ec4 <movementMachine+0x2b4>)
 8002d02:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8002d06:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002d0a:	63da      	str	r2, [r3, #60]	; 0x3c
		TIM2->CCR4 = baseChoice[choice];
 8002d0c:	4b69      	ldr	r3, [pc, #420]	; (8002eb4 <movementMachine+0x2a4>)
 8002d0e:	681b      	ldr	r3, [r3, #0]
 8002d10:	4a6c      	ldr	r2, [pc, #432]	; (8002ec4 <movementMachine+0x2b4>)
 8002d12:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8002d16:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002d1a:	641a      	str	r2, [r3, #64]	; 0x40
		if (calcularDistancia((TIM3->CNT) >> 1) < LeftChoice[choice]) {
 8002d1c:	4b63      	ldr	r3, [pc, #396]	; (8002eac <movementMachine+0x29c>)
 8002d1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d20:	085b      	lsrs	r3, r3, #1
 8002d22:	4618      	mov	r0, r3
 8002d24:	f000 fd10 	bl	8003748 <calcularDistancia>
 8002d28:	4604      	mov	r4, r0
 8002d2a:	4b62      	ldr	r3, [pc, #392]	; (8002eb4 <movementMachine+0x2a4>)
 8002d2c:	681b      	ldr	r3, [r3, #0]
 8002d2e:	4a66      	ldr	r2, [pc, #408]	; (8002ec8 <movementMachine+0x2b8>)
 8002d30:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002d34:	4618      	mov	r0, r3
 8002d36:	f7fd ff81 	bl	8000c3c <__aeabi_i2f>
 8002d3a:	4603      	mov	r3, r0
 8002d3c:	4619      	mov	r1, r3
 8002d3e:	4620      	mov	r0, r4
 8002d40:	f7fe f96e 	bl	8001020 <__aeabi_fcmplt>
 8002d44:	4603      	mov	r3, r0
 8002d46:	2b00      	cmp	r3, #0
 8002d48:	d008      	beq.n	8002d5c <movementMachine+0x14c>
			runMotor(ATRAS, MOTOR_A);
 8002d4a:	2100      	movs	r1, #0
 8002d4c:	2002      	movs	r0, #2
 8002d4e:	f000 fd21 	bl	8003794 <runMotor>
			runMotor(ADELANTE, MOTOR_B);
 8002d52:	2101      	movs	r1, #1
 8002d54:	2000      	movs	r0, #0
 8002d56:	f000 fd1d 	bl	8003794 <runMotor>
			runMotor(OFF, MOTOR_B);
			TIM3->CNT = 0;
			TIM4->CNT = 0;
			offset = 30;
		}
		break;
 8002d5a:	e0a0      	b.n	8002e9e <movementMachine+0x28e>
			movementState = ADELANTE;
 8002d5c:	4b52      	ldr	r3, [pc, #328]	; (8002ea8 <movementMachine+0x298>)
 8002d5e:	2200      	movs	r2, #0
 8002d60:	601a      	str	r2, [r3, #0]
			runMotor(OFF, MOTOR_A);
 8002d62:	2100      	movs	r1, #0
 8002d64:	2005      	movs	r0, #5
 8002d66:	f000 fd15 	bl	8003794 <runMotor>
			runMotor(OFF, MOTOR_B);
 8002d6a:	2101      	movs	r1, #1
 8002d6c:	2005      	movs	r0, #5
 8002d6e:	f000 fd11 	bl	8003794 <runMotor>
			TIM3->CNT = 0;
 8002d72:	4b4e      	ldr	r3, [pc, #312]	; (8002eac <movementMachine+0x29c>)
 8002d74:	2200      	movs	r2, #0
 8002d76:	625a      	str	r2, [r3, #36]	; 0x24
			TIM4->CNT = 0;
 8002d78:	4b4d      	ldr	r3, [pc, #308]	; (8002eb0 <movementMachine+0x2a0>)
 8002d7a:	2200      	movs	r2, #0
 8002d7c:	625a      	str	r2, [r3, #36]	; 0x24
			offset = 30;
 8002d7e:	4b50      	ldr	r3, [pc, #320]	; (8002ec0 <movementMachine+0x2b0>)
 8002d80:	221e      	movs	r2, #30
 8002d82:	601a      	str	r2, [r3, #0]
		break;
 8002d84:	e08b      	b.n	8002e9e <movementMachine+0x28e>
	case DERECHA:
		TIM2->CCR3 = baseChoice[choice];
 8002d86:	4b4b      	ldr	r3, [pc, #300]	; (8002eb4 <movementMachine+0x2a4>)
 8002d88:	681b      	ldr	r3, [r3, #0]
 8002d8a:	4a4e      	ldr	r2, [pc, #312]	; (8002ec4 <movementMachine+0x2b4>)
 8002d8c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8002d90:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002d94:	63da      	str	r2, [r3, #60]	; 0x3c
		TIM2->CCR4 = baseChoice[choice];
 8002d96:	4b47      	ldr	r3, [pc, #284]	; (8002eb4 <movementMachine+0x2a4>)
 8002d98:	681b      	ldr	r3, [r3, #0]
 8002d9a:	4a4a      	ldr	r2, [pc, #296]	; (8002ec4 <movementMachine+0x2b4>)
 8002d9c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8002da0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002da4:	641a      	str	r2, [r3, #64]	; 0x40
		if (calcularDistancia((TIM3->CNT) >> 1) < RightChoice[choice]) {
 8002da6:	4b41      	ldr	r3, [pc, #260]	; (8002eac <movementMachine+0x29c>)
 8002da8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002daa:	085b      	lsrs	r3, r3, #1
 8002dac:	4618      	mov	r0, r3
 8002dae:	f000 fccb 	bl	8003748 <calcularDistancia>
 8002db2:	4604      	mov	r4, r0
 8002db4:	4b3f      	ldr	r3, [pc, #252]	; (8002eb4 <movementMachine+0x2a4>)
 8002db6:	681b      	ldr	r3, [r3, #0]
 8002db8:	4a44      	ldr	r2, [pc, #272]	; (8002ecc <movementMachine+0x2bc>)
 8002dba:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002dbe:	4618      	mov	r0, r3
 8002dc0:	f7fd ff3c 	bl	8000c3c <__aeabi_i2f>
 8002dc4:	4603      	mov	r3, r0
 8002dc6:	4619      	mov	r1, r3
 8002dc8:	4620      	mov	r0, r4
 8002dca:	f7fe f929 	bl	8001020 <__aeabi_fcmplt>
 8002dce:	4603      	mov	r3, r0
 8002dd0:	2b00      	cmp	r3, #0
 8002dd2:	d008      	beq.n	8002de6 <movementMachine+0x1d6>
			runMotor(ADELANTE, MOTOR_A);
 8002dd4:	2100      	movs	r1, #0
 8002dd6:	2000      	movs	r0, #0
 8002dd8:	f000 fcdc 	bl	8003794 <runMotor>
			runMotor(ATRAS, MOTOR_B);
 8002ddc:	2101      	movs	r1, #1
 8002dde:	2002      	movs	r0, #2
 8002de0:	f000 fcd8 	bl	8003794 <runMotor>
			runMotor(OFF, MOTOR_B);
			TIM3->CNT = 0;
			TIM4->CNT = 0;
			offset = 30;
		}
		break;
 8002de4:	e05b      	b.n	8002e9e <movementMachine+0x28e>
			movementState = ADELANTE;
 8002de6:	4b30      	ldr	r3, [pc, #192]	; (8002ea8 <movementMachine+0x298>)
 8002de8:	2200      	movs	r2, #0
 8002dea:	601a      	str	r2, [r3, #0]
			runMotor(OFF, MOTOR_A);
 8002dec:	2100      	movs	r1, #0
 8002dee:	2005      	movs	r0, #5
 8002df0:	f000 fcd0 	bl	8003794 <runMotor>
			runMotor(OFF, MOTOR_B);
 8002df4:	2101      	movs	r1, #1
 8002df6:	2005      	movs	r0, #5
 8002df8:	f000 fccc 	bl	8003794 <runMotor>
			TIM3->CNT = 0;
 8002dfc:	4b2b      	ldr	r3, [pc, #172]	; (8002eac <movementMachine+0x29c>)
 8002dfe:	2200      	movs	r2, #0
 8002e00:	625a      	str	r2, [r3, #36]	; 0x24
			TIM4->CNT = 0;
 8002e02:	4b2b      	ldr	r3, [pc, #172]	; (8002eb0 <movementMachine+0x2a0>)
 8002e04:	2200      	movs	r2, #0
 8002e06:	625a      	str	r2, [r3, #36]	; 0x24
			offset = 30;
 8002e08:	4b2d      	ldr	r3, [pc, #180]	; (8002ec0 <movementMachine+0x2b0>)
 8002e0a:	221e      	movs	r2, #30
 8002e0c:	601a      	str	r2, [r3, #0]
		break;
 8002e0e:	e046      	b.n	8002e9e <movementMachine+0x28e>
	case ATRAS:
		TIM2->CCR3 = baseChoice[choice];
 8002e10:	4b28      	ldr	r3, [pc, #160]	; (8002eb4 <movementMachine+0x2a4>)
 8002e12:	681b      	ldr	r3, [r3, #0]
 8002e14:	4a2b      	ldr	r2, [pc, #172]	; (8002ec4 <movementMachine+0x2b4>)
 8002e16:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8002e1a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002e1e:	63da      	str	r2, [r3, #60]	; 0x3c
		TIM2->CCR4 = baseChoice[choice];
 8002e20:	4b24      	ldr	r3, [pc, #144]	; (8002eb4 <movementMachine+0x2a4>)
 8002e22:	681b      	ldr	r3, [r3, #0]
 8002e24:	4a27      	ldr	r2, [pc, #156]	; (8002ec4 <movementMachine+0x2b4>)
 8002e26:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8002e2a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002e2e:	641a      	str	r2, [r3, #64]	; 0x40
		if (calcularDistancia((TIM3->CNT) >> 1) < RightChoice[choice] * 2) {
 8002e30:	4b1e      	ldr	r3, [pc, #120]	; (8002eac <movementMachine+0x29c>)
 8002e32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e34:	085b      	lsrs	r3, r3, #1
 8002e36:	4618      	mov	r0, r3
 8002e38:	f000 fc86 	bl	8003748 <calcularDistancia>
 8002e3c:	4604      	mov	r4, r0
 8002e3e:	4b1d      	ldr	r3, [pc, #116]	; (8002eb4 <movementMachine+0x2a4>)
 8002e40:	681b      	ldr	r3, [r3, #0]
 8002e42:	4a22      	ldr	r2, [pc, #136]	; (8002ecc <movementMachine+0x2bc>)
 8002e44:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002e48:	005b      	lsls	r3, r3, #1
 8002e4a:	4618      	mov	r0, r3
 8002e4c:	f7fd fef6 	bl	8000c3c <__aeabi_i2f>
 8002e50:	4603      	mov	r3, r0
 8002e52:	4619      	mov	r1, r3
 8002e54:	4620      	mov	r0, r4
 8002e56:	f7fe f8e3 	bl	8001020 <__aeabi_fcmplt>
 8002e5a:	4603      	mov	r3, r0
 8002e5c:	2b00      	cmp	r3, #0
 8002e5e:	d008      	beq.n	8002e72 <movementMachine+0x262>
			runMotor(ADELANTE, MOTOR_A);
 8002e60:	2100      	movs	r1, #0
 8002e62:	2000      	movs	r0, #0
 8002e64:	f000 fc96 	bl	8003794 <runMotor>
			runMotor(ATRAS, MOTOR_B);
 8002e68:	2101      	movs	r1, #1
 8002e6a:	2002      	movs	r0, #2
 8002e6c:	f000 fc92 	bl	8003794 <runMotor>
			runMotor(OFF, MOTOR_B);
			TIM3->CNT = 0;
			TIM4->CNT = 0;
			offset = 30;
		}
		break;
 8002e70:	e015      	b.n	8002e9e <movementMachine+0x28e>
			movementState = ADELANTE;
 8002e72:	4b0d      	ldr	r3, [pc, #52]	; (8002ea8 <movementMachine+0x298>)
 8002e74:	2200      	movs	r2, #0
 8002e76:	601a      	str	r2, [r3, #0]
			runMotor(OFF, MOTOR_A);
 8002e78:	2100      	movs	r1, #0
 8002e7a:	2005      	movs	r0, #5
 8002e7c:	f000 fc8a 	bl	8003794 <runMotor>
			runMotor(OFF, MOTOR_B);
 8002e80:	2101      	movs	r1, #1
 8002e82:	2005      	movs	r0, #5
 8002e84:	f000 fc86 	bl	8003794 <runMotor>
			TIM3->CNT = 0;
 8002e88:	4b08      	ldr	r3, [pc, #32]	; (8002eac <movementMachine+0x29c>)
 8002e8a:	2200      	movs	r2, #0
 8002e8c:	625a      	str	r2, [r3, #36]	; 0x24
			TIM4->CNT = 0;
 8002e8e:	4b08      	ldr	r3, [pc, #32]	; (8002eb0 <movementMachine+0x2a0>)
 8002e90:	2200      	movs	r2, #0
 8002e92:	625a      	str	r2, [r3, #36]	; 0x24
			offset = 30;
 8002e94:	4b0a      	ldr	r3, [pc, #40]	; (8002ec0 <movementMachine+0x2b0>)
 8002e96:	221e      	movs	r2, #30
 8002e98:	601a      	str	r2, [r3, #0]
		break;
 8002e9a:	e000      	b.n	8002e9e <movementMachine+0x28e>
		break;
 8002e9c:	bf00      	nop

	}
}
 8002e9e:	bf00      	nop
 8002ea0:	370c      	adds	r7, #12
 8002ea2:	46bd      	mov	sp, r7
 8002ea4:	bd90      	pop	{r4, r7, pc}
 8002ea6:	bf00      	nop
 8002ea8:	20000038 	.word	0x20000038
 8002eac:	40000400 	.word	0x40000400
 8002eb0:	40000800 	.word	0x40000800
 8002eb4:	20001238 	.word	0x20001238
 8002eb8:	20000020 	.word	0x20000020
 8002ebc:	2000124c 	.word	0x2000124c
 8002ec0:	20001254 	.word	0x20001254
 8002ec4:	20000018 	.word	0x20000018
 8002ec8:	20000030 	.word	0x20000030
 8002ecc:	20000028 	.word	0x20000028

08002ed0 <CreateNode>:

void CreateNode(int x, int y) {
 8002ed0:	b5b0      	push	{r4, r5, r7, lr}
 8002ed2:	b082      	sub	sp, #8
 8002ed4:	af00      	add	r7, sp, #0
 8002ed6:	6078      	str	r0, [r7, #4]
 8002ed8:	6039      	str	r1, [r7, #0]
	Map[x][y].Lados[direcciones[ADELANTE]] = lecturaSensor(ADELANTE, Sensors);
 8002eda:	4936      	ldr	r1, [pc, #216]	; (8002fb4 <CreateNode+0xe4>)
 8002edc:	2000      	movs	r0, #0
 8002ede:	f000 fcc5 	bl	800386c <lecturaSensor>
 8002ee2:	4603      	mov	r3, r0
 8002ee4:	4a34      	ldr	r2, [pc, #208]	; (8002fb8 <CreateNode+0xe8>)
 8002ee6:	6814      	ldr	r4, [r2, #0]
 8002ee8:	4618      	mov	r0, r3
 8002eea:	f7fe f8c1 	bl	8001070 <__aeabi_f2iz>
 8002eee:	4d33      	ldr	r5, [pc, #204]	; (8002fbc <CreateNode+0xec>)
 8002ef0:	683b      	ldr	r3, [r7, #0]
 8002ef2:	6879      	ldr	r1, [r7, #4]
 8002ef4:	461a      	mov	r2, r3
 8002ef6:	0052      	lsls	r2, r2, #1
 8002ef8:	441a      	add	r2, r3
 8002efa:	0053      	lsls	r3, r2, #1
 8002efc:	461a      	mov	r2, r3
 8002efe:	460b      	mov	r3, r1
 8002f00:	005b      	lsls	r3, r3, #1
 8002f02:	440b      	add	r3, r1
 8002f04:	015b      	lsls	r3, r3, #5
 8002f06:	4413      	add	r3, r2
 8002f08:	4423      	add	r3, r4
 8002f0a:	f845 0023 	str.w	r0, [r5, r3, lsl #2]
	Map[x][y].Lados[direcciones[IZQUIERDA]] = lecturaSensor(IZQUIERDA, Sensors);
 8002f0e:	4929      	ldr	r1, [pc, #164]	; (8002fb4 <CreateNode+0xe4>)
 8002f10:	2001      	movs	r0, #1
 8002f12:	f000 fcab 	bl	800386c <lecturaSensor>
 8002f16:	4603      	mov	r3, r0
 8002f18:	4a27      	ldr	r2, [pc, #156]	; (8002fb8 <CreateNode+0xe8>)
 8002f1a:	6854      	ldr	r4, [r2, #4]
 8002f1c:	4618      	mov	r0, r3
 8002f1e:	f7fe f8a7 	bl	8001070 <__aeabi_f2iz>
 8002f22:	4d26      	ldr	r5, [pc, #152]	; (8002fbc <CreateNode+0xec>)
 8002f24:	683b      	ldr	r3, [r7, #0]
 8002f26:	6879      	ldr	r1, [r7, #4]
 8002f28:	461a      	mov	r2, r3
 8002f2a:	0052      	lsls	r2, r2, #1
 8002f2c:	441a      	add	r2, r3
 8002f2e:	0053      	lsls	r3, r2, #1
 8002f30:	461a      	mov	r2, r3
 8002f32:	460b      	mov	r3, r1
 8002f34:	005b      	lsls	r3, r3, #1
 8002f36:	440b      	add	r3, r1
 8002f38:	015b      	lsls	r3, r3, #5
 8002f3a:	4413      	add	r3, r2
 8002f3c:	4423      	add	r3, r4
 8002f3e:	f845 0023 	str.w	r0, [r5, r3, lsl #2]
	Map[x][y].Lados[direcciones[DERECHA]] = lecturaSensor(DERECHA, Sensors);
 8002f42:	491c      	ldr	r1, [pc, #112]	; (8002fb4 <CreateNode+0xe4>)
 8002f44:	2003      	movs	r0, #3
 8002f46:	f000 fc91 	bl	800386c <lecturaSensor>
 8002f4a:	4603      	mov	r3, r0
 8002f4c:	4a1a      	ldr	r2, [pc, #104]	; (8002fb8 <CreateNode+0xe8>)
 8002f4e:	68d4      	ldr	r4, [r2, #12]
 8002f50:	4618      	mov	r0, r3
 8002f52:	f7fe f88d 	bl	8001070 <__aeabi_f2iz>
 8002f56:	4d19      	ldr	r5, [pc, #100]	; (8002fbc <CreateNode+0xec>)
 8002f58:	683b      	ldr	r3, [r7, #0]
 8002f5a:	6879      	ldr	r1, [r7, #4]
 8002f5c:	461a      	mov	r2, r3
 8002f5e:	0052      	lsls	r2, r2, #1
 8002f60:	441a      	add	r2, r3
 8002f62:	0053      	lsls	r3, r2, #1
 8002f64:	461a      	mov	r2, r3
 8002f66:	460b      	mov	r3, r1
 8002f68:	005b      	lsls	r3, r3, #1
 8002f6a:	440b      	add	r3, r1
 8002f6c:	015b      	lsls	r3, r3, #5
 8002f6e:	4413      	add	r3, r2
 8002f70:	4423      	add	r3, r4
 8002f72:	f845 0023 	str.w	r0, [r5, r3, lsl #2]
	Map[x][y].Lados[direcciones[ATRAS]] = lecturaSensor(ATRAS, Sensors);
 8002f76:	490f      	ldr	r1, [pc, #60]	; (8002fb4 <CreateNode+0xe4>)
 8002f78:	2002      	movs	r0, #2
 8002f7a:	f000 fc77 	bl	800386c <lecturaSensor>
 8002f7e:	4603      	mov	r3, r0
 8002f80:	4a0d      	ldr	r2, [pc, #52]	; (8002fb8 <CreateNode+0xe8>)
 8002f82:	6894      	ldr	r4, [r2, #8]
 8002f84:	4618      	mov	r0, r3
 8002f86:	f7fe f873 	bl	8001070 <__aeabi_f2iz>
 8002f8a:	4d0c      	ldr	r5, [pc, #48]	; (8002fbc <CreateNode+0xec>)
 8002f8c:	683b      	ldr	r3, [r7, #0]
 8002f8e:	6879      	ldr	r1, [r7, #4]
 8002f90:	461a      	mov	r2, r3
 8002f92:	0052      	lsls	r2, r2, #1
 8002f94:	441a      	add	r2, r3
 8002f96:	0053      	lsls	r3, r2, #1
 8002f98:	461a      	mov	r2, r3
 8002f9a:	460b      	mov	r3, r1
 8002f9c:	005b      	lsls	r3, r3, #1
 8002f9e:	440b      	add	r3, r1
 8002fa0:	015b      	lsls	r3, r3, #5
 8002fa2:	4413      	add	r3, r2
 8002fa4:	4423      	add	r3, r4
 8002fa6:	f845 0023 	str.w	r0, [r5, r3, lsl #2]

}
 8002faa:	bf00      	nop
 8002fac:	3708      	adds	r7, #8
 8002fae:	46bd      	mov	sp, r7
 8002fb0:	bdb0      	pop	{r4, r5, r7, pc}
 8002fb2:	bf00      	nop
 8002fb4:	200011dc 	.word	0x200011dc
 8002fb8:	200011ec 	.word	0x200011ec
 8002fbc:	200012c0 	.word	0x200012c0

08002fc0 <rotateAxis>:

void rotateAxis(int direccion) {
 8002fc0:	b480      	push	{r7}
 8002fc2:	b085      	sub	sp, #20
 8002fc4:	af00      	add	r7, sp, #0
 8002fc6:	6078      	str	r0, [r7, #4]
	switch (direccion) {
 8002fc8:	687b      	ldr	r3, [r7, #4]
 8002fca:	2b01      	cmp	r3, #1
 8002fcc:	d021      	beq.n	8003012 <rotateAxis+0x52>
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	2b03      	cmp	r3, #3
 8002fd2:	d13c      	bne.n	800304e <rotateAxis+0x8e>
	case DERECHA:
		for (int i = 0; i < 4; i++) {
 8002fd4:	2300      	movs	r3, #0
 8002fd6:	60fb      	str	r3, [r7, #12]
 8002fd8:	e017      	b.n	800300a <rotateAxis+0x4a>
			direcciones[i] = direcciones[i] - 1;
 8002fda:	4a1f      	ldr	r2, [pc, #124]	; (8003058 <rotateAxis+0x98>)
 8002fdc:	68fb      	ldr	r3, [r7, #12]
 8002fde:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002fe2:	1e5a      	subs	r2, r3, #1
 8002fe4:	491c      	ldr	r1, [pc, #112]	; (8003058 <rotateAxis+0x98>)
 8002fe6:	68fb      	ldr	r3, [r7, #12]
 8002fe8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			if (direcciones[i] == -1) {
 8002fec:	4a1a      	ldr	r2, [pc, #104]	; (8003058 <rotateAxis+0x98>)
 8002fee:	68fb      	ldr	r3, [r7, #12]
 8002ff0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002ff4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002ff8:	d104      	bne.n	8003004 <rotateAxis+0x44>
				direcciones[i] = 3;
 8002ffa:	4a17      	ldr	r2, [pc, #92]	; (8003058 <rotateAxis+0x98>)
 8002ffc:	68fb      	ldr	r3, [r7, #12]
 8002ffe:	2103      	movs	r1, #3
 8003000:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		for (int i = 0; i < 4; i++) {
 8003004:	68fb      	ldr	r3, [r7, #12]
 8003006:	3301      	adds	r3, #1
 8003008:	60fb      	str	r3, [r7, #12]
 800300a:	68fb      	ldr	r3, [r7, #12]
 800300c:	2b03      	cmp	r3, #3
 800300e:	dde4      	ble.n	8002fda <rotateAxis+0x1a>
			}
		}
		break;
 8003010:	e01d      	b.n	800304e <rotateAxis+0x8e>
	case IZQUIERDA:
		for (int j = 0; j < 4; j++) {
 8003012:	2300      	movs	r3, #0
 8003014:	60bb      	str	r3, [r7, #8]
 8003016:	e016      	b.n	8003046 <rotateAxis+0x86>
			direcciones[j] = direcciones[j] + 1;
 8003018:	4a0f      	ldr	r2, [pc, #60]	; (8003058 <rotateAxis+0x98>)
 800301a:	68bb      	ldr	r3, [r7, #8]
 800301c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003020:	1c5a      	adds	r2, r3, #1
 8003022:	490d      	ldr	r1, [pc, #52]	; (8003058 <rotateAxis+0x98>)
 8003024:	68bb      	ldr	r3, [r7, #8]
 8003026:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			if (direcciones[j] == 4) {
 800302a:	4a0b      	ldr	r2, [pc, #44]	; (8003058 <rotateAxis+0x98>)
 800302c:	68bb      	ldr	r3, [r7, #8]
 800302e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003032:	2b04      	cmp	r3, #4
 8003034:	d104      	bne.n	8003040 <rotateAxis+0x80>
				direcciones[j] = 0;
 8003036:	4a08      	ldr	r2, [pc, #32]	; (8003058 <rotateAxis+0x98>)
 8003038:	68bb      	ldr	r3, [r7, #8]
 800303a:	2100      	movs	r1, #0
 800303c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		for (int j = 0; j < 4; j++) {
 8003040:	68bb      	ldr	r3, [r7, #8]
 8003042:	3301      	adds	r3, #1
 8003044:	60bb      	str	r3, [r7, #8]
 8003046:	68bb      	ldr	r3, [r7, #8]
 8003048:	2b03      	cmp	r3, #3
 800304a:	dde5      	ble.n	8003018 <rotateAxis+0x58>
			}
		}
		break;
 800304c:	bf00      	nop
	}
}
 800304e:	bf00      	nop
 8003050:	3714      	adds	r7, #20
 8003052:	46bd      	mov	sp, r7
 8003054:	bc80      	pop	{r7}
 8003056:	4770      	bx	lr
 8003058:	200011ec 	.word	0x200011ec

0800305c <resetAxis>:

void resetAxis() {
 800305c:	b480      	push	{r7}
 800305e:	b083      	sub	sp, #12
 8003060:	af00      	add	r7, sp, #0
	for (int i = 0; i < 4; i++) {
 8003062:	2300      	movs	r3, #0
 8003064:	607b      	str	r3, [r7, #4]
 8003066:	e007      	b.n	8003078 <resetAxis+0x1c>
		direcciones[i] = i;
 8003068:	4908      	ldr	r1, [pc, #32]	; (800308c <resetAxis+0x30>)
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	687a      	ldr	r2, [r7, #4]
 800306e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	for (int i = 0; i < 4; i++) {
 8003072:	687b      	ldr	r3, [r7, #4]
 8003074:	3301      	adds	r3, #1
 8003076:	607b      	str	r3, [r7, #4]
 8003078:	687b      	ldr	r3, [r7, #4]
 800307a:	2b03      	cmp	r3, #3
 800307c:	ddf4      	ble.n	8003068 <resetAxis+0xc>
	}
}
 800307e:	bf00      	nop
 8003080:	bf00      	nop
 8003082:	370c      	adds	r7, #12
 8003084:	46bd      	mov	sp, r7
 8003086:	bc80      	pop	{r7}
 8003088:	4770      	bx	lr
 800308a:	bf00      	nop
 800308c:	200011ec 	.word	0x200011ec

08003090 <PrintMap>:

void PrintMap() {
 8003090:	b580      	push	{r7, lr}
 8003092:	b082      	sub	sp, #8
 8003094:	af00      	add	r7, sp, #0
	for (int i = 0; i < alto; i++) {
 8003096:	2300      	movs	r3, #0
 8003098:	607b      	str	r3, [r7, #4]
 800309a:	e032      	b.n	8003102 <PrintMap+0x72>
		for (int j = 0; j < ancho; j++) {
 800309c:	2300      	movs	r3, #0
 800309e:	603b      	str	r3, [r7, #0]
 80030a0:	e020      	b.n	80030e4 <PrintMap+0x54>
			//SerialBT.print(Map[i][j].visitado);
			//SerialBT.print(" ");
			TX_BUFFER[0] = Map[i][j].visitado + '0';
 80030a2:	481c      	ldr	r0, [pc, #112]	; (8003114 <PrintMap+0x84>)
 80030a4:	683b      	ldr	r3, [r7, #0]
 80030a6:	6879      	ldr	r1, [r7, #4]
 80030a8:	461a      	mov	r2, r3
 80030aa:	0052      	lsls	r2, r2, #1
 80030ac:	441a      	add	r2, r3
 80030ae:	00d3      	lsls	r3, r2, #3
 80030b0:	461a      	mov	r2, r3
 80030b2:	460b      	mov	r3, r1
 80030b4:	005b      	lsls	r3, r3, #1
 80030b6:	440b      	add	r3, r1
 80030b8:	01db      	lsls	r3, r3, #7
 80030ba:	4413      	add	r3, r2
 80030bc:	4403      	add	r3, r0
 80030be:	3310      	adds	r3, #16
 80030c0:	681b      	ldr	r3, [r3, #0]
 80030c2:	b2db      	uxtb	r3, r3
 80030c4:	3330      	adds	r3, #48	; 0x30
 80030c6:	b2da      	uxtb	r2, r3
 80030c8:	4b13      	ldr	r3, [pc, #76]	; (8003118 <PrintMap+0x88>)
 80030ca:	701a      	strb	r2, [r3, #0]
			TX_BUFFER[1] = ' ';
 80030cc:	4b12      	ldr	r3, [pc, #72]	; (8003118 <PrintMap+0x88>)
 80030ce:	2220      	movs	r2, #32
 80030d0:	705a      	strb	r2, [r3, #1]
			HAL_UART_Transmit(&huart1, TX_BUFFER, 2, 100);
 80030d2:	2364      	movs	r3, #100	; 0x64
 80030d4:	2202      	movs	r2, #2
 80030d6:	4910      	ldr	r1, [pc, #64]	; (8003118 <PrintMap+0x88>)
 80030d8:	4810      	ldr	r0, [pc, #64]	; (800311c <PrintMap+0x8c>)
 80030da:	f003 fbae 	bl	800683a <HAL_UART_Transmit>
		for (int j = 0; j < ancho; j++) {
 80030de:	683b      	ldr	r3, [r7, #0]
 80030e0:	3301      	adds	r3, #1
 80030e2:	603b      	str	r3, [r7, #0]
 80030e4:	683b      	ldr	r3, [r7, #0]
 80030e6:	2b0f      	cmp	r3, #15
 80030e8:	dddb      	ble.n	80030a2 <PrintMap+0x12>
		}
		TX_BUFFER[0] = '\n';
 80030ea:	4b0b      	ldr	r3, [pc, #44]	; (8003118 <PrintMap+0x88>)
 80030ec:	220a      	movs	r2, #10
 80030ee:	701a      	strb	r2, [r3, #0]
		HAL_UART_Transmit(&huart1, TX_BUFFER, 1, 100);
 80030f0:	2364      	movs	r3, #100	; 0x64
 80030f2:	2201      	movs	r2, #1
 80030f4:	4908      	ldr	r1, [pc, #32]	; (8003118 <PrintMap+0x88>)
 80030f6:	4809      	ldr	r0, [pc, #36]	; (800311c <PrintMap+0x8c>)
 80030f8:	f003 fb9f 	bl	800683a <HAL_UART_Transmit>
	for (int i = 0; i < alto; i++) {
 80030fc:	687b      	ldr	r3, [r7, #4]
 80030fe:	3301      	adds	r3, #1
 8003100:	607b      	str	r3, [r7, #4]
 8003102:	687b      	ldr	r3, [r7, #4]
 8003104:	2b0f      	cmp	r3, #15
 8003106:	ddc9      	ble.n	800309c <PrintMap+0xc>
	}
}
 8003108:	bf00      	nop
 800310a:	bf00      	nop
 800310c:	3708      	adds	r7, #8
 800310e:	46bd      	mov	sp, r7
 8003110:	bd80      	pop	{r7, pc}
 8003112:	bf00      	nop
 8003114:	200012c0 	.word	0x200012c0
 8003118:	2000121c 	.word	0x2000121c
 800311c:	20002bc4 	.word	0x20002bc4

08003120 <HAL_ADC_ConvCpltCallback>:

// Called when buffer is completely filled
void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc) {
 8003120:	b580      	push	{r7, lr}
 8003122:	b084      	sub	sp, #16
 8003124:	af00      	add	r7, sp, #0
 8003126:	6078      	str	r0, [r7, #4]
	for (int i = 0; i < 10; i++) {
 8003128:	2300      	movs	r3, #0
 800312a:	60fb      	str	r3, [r7, #12]
 800312c:	e029      	b.n	8003182 <HAL_ADC_ConvCpltCallback+0x62>
		CNY70[i] = adc_buf[i * 4];
 800312e:	68fb      	ldr	r3, [r7, #12]
 8003130:	009b      	lsls	r3, r3, #2
 8003132:	4a27      	ldr	r2, [pc, #156]	; (80031d0 <HAL_ADC_ConvCpltCallback+0xb0>)
 8003134:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8003138:	4926      	ldr	r1, [pc, #152]	; (80031d4 <HAL_ADC_ConvCpltCallback+0xb4>)
 800313a:	68fb      	ldr	r3, [r7, #12]
 800313c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		SHARP_1[i] = adc_buf[i * 4 + 1];
 8003140:	68fb      	ldr	r3, [r7, #12]
 8003142:	009b      	lsls	r3, r3, #2
 8003144:	3301      	adds	r3, #1
 8003146:	4a22      	ldr	r2, [pc, #136]	; (80031d0 <HAL_ADC_ConvCpltCallback+0xb0>)
 8003148:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800314c:	4922      	ldr	r1, [pc, #136]	; (80031d8 <HAL_ADC_ConvCpltCallback+0xb8>)
 800314e:	68fb      	ldr	r3, [r7, #12]
 8003150:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		SHARP_2[i] = adc_buf[i * 4 + 2];
 8003154:	68fb      	ldr	r3, [r7, #12]
 8003156:	009b      	lsls	r3, r3, #2
 8003158:	3302      	adds	r3, #2
 800315a:	4a1d      	ldr	r2, [pc, #116]	; (80031d0 <HAL_ADC_ConvCpltCallback+0xb0>)
 800315c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8003160:	491e      	ldr	r1, [pc, #120]	; (80031dc <HAL_ADC_ConvCpltCallback+0xbc>)
 8003162:	68fb      	ldr	r3, [r7, #12]
 8003164:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		SHARP_3[i] = adc_buf[i * 4 + 3];
 8003168:	68fb      	ldr	r3, [r7, #12]
 800316a:	009b      	lsls	r3, r3, #2
 800316c:	3303      	adds	r3, #3
 800316e:	4a18      	ldr	r2, [pc, #96]	; (80031d0 <HAL_ADC_ConvCpltCallback+0xb0>)
 8003170:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8003174:	491a      	ldr	r1, [pc, #104]	; (80031e0 <HAL_ADC_ConvCpltCallback+0xc0>)
 8003176:	68fb      	ldr	r3, [r7, #12]
 8003178:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	for (int i = 0; i < 10; i++) {
 800317c:	68fb      	ldr	r3, [r7, #12]
 800317e:	3301      	adds	r3, #1
 8003180:	60fb      	str	r3, [r7, #12]
 8003182:	68fb      	ldr	r3, [r7, #12]
 8003184:	2b09      	cmp	r3, #9
 8003186:	ddd2      	ble.n	800312e <HAL_ADC_ConvCpltCallback+0xe>
	}
	Sensors[0] = lecturaCNY70(10, CNY70);
 8003188:	4912      	ldr	r1, [pc, #72]	; (80031d4 <HAL_ADC_ConvCpltCallback+0xb4>)
 800318a:	200a      	movs	r0, #10
 800318c:	f000 fc40 	bl	8003a10 <lecturaCNY70>
 8003190:	4603      	mov	r3, r0
 8003192:	4618      	mov	r0, r3
 8003194:	f7fd fd52 	bl	8000c3c <__aeabi_i2f>
 8003198:	4603      	mov	r3, r0
 800319a:	4a12      	ldr	r2, [pc, #72]	; (80031e4 <HAL_ADC_ConvCpltCallback+0xc4>)
 800319c:	6013      	str	r3, [r2, #0]
	Sensors[1] = lecSensor(10, SHARP_1);
 800319e:	490e      	ldr	r1, [pc, #56]	; (80031d8 <HAL_ADC_ConvCpltCallback+0xb8>)
 80031a0:	200a      	movs	r0, #10
 80031a2:	f000 fbb5 	bl	8003910 <lecSensor>
 80031a6:	4603      	mov	r3, r0
 80031a8:	4a0e      	ldr	r2, [pc, #56]	; (80031e4 <HAL_ADC_ConvCpltCallback+0xc4>)
 80031aa:	6053      	str	r3, [r2, #4]
	Sensors[2] = lecSensor(10, SHARP_2);
 80031ac:	490b      	ldr	r1, [pc, #44]	; (80031dc <HAL_ADC_ConvCpltCallback+0xbc>)
 80031ae:	200a      	movs	r0, #10
 80031b0:	f000 fbae 	bl	8003910 <lecSensor>
 80031b4:	4603      	mov	r3, r0
 80031b6:	4a0b      	ldr	r2, [pc, #44]	; (80031e4 <HAL_ADC_ConvCpltCallback+0xc4>)
 80031b8:	6093      	str	r3, [r2, #8]
	Sensors[3] = lecSensor(10, SHARP_3);
 80031ba:	4909      	ldr	r1, [pc, #36]	; (80031e0 <HAL_ADC_ConvCpltCallback+0xc0>)
 80031bc:	200a      	movs	r0, #10
 80031be:	f000 fba7 	bl	8003910 <lecSensor>
 80031c2:	4603      	mov	r3, r0
 80031c4:	4a07      	ldr	r2, [pc, #28]	; (80031e4 <HAL_ADC_ConvCpltCallback+0xc4>)
 80031c6:	60d3      	str	r3, [r2, #12]

}
 80031c8:	bf00      	nop
 80031ca:	3710      	adds	r7, #16
 80031cc:	46bd      	mov	sp, r7
 80031ce:	bd80      	pop	{r7, pc}
 80031d0:	2000013c 	.word	0x2000013c
 80031d4:	2000113c 	.word	0x2000113c
 80031d8:	20001164 	.word	0x20001164
 80031dc:	2000118c 	.word	0x2000118c
 80031e0:	200011b4 	.word	0x200011b4
 80031e4:	200011dc 	.word	0x200011dc

080031e8 <MAP>:

uint32_t MAP(uint32_t au32_IN, uint32_t au32_INmin, uint32_t au32_INmax,
		uint32_t au32_OUTmin, uint32_t au32_OUTmax) {
 80031e8:	b480      	push	{r7}
 80031ea:	b085      	sub	sp, #20
 80031ec:	af00      	add	r7, sp, #0
 80031ee:	60f8      	str	r0, [r7, #12]
 80031f0:	60b9      	str	r1, [r7, #8]
 80031f2:	607a      	str	r2, [r7, #4]
 80031f4:	603b      	str	r3, [r7, #0]
	return ((((au32_IN - au32_INmin) * (au32_OUTmax - au32_OUTmin))
 80031f6:	68fa      	ldr	r2, [r7, #12]
 80031f8:	68bb      	ldr	r3, [r7, #8]
 80031fa:	1ad3      	subs	r3, r2, r3
 80031fc:	69b9      	ldr	r1, [r7, #24]
 80031fe:	683a      	ldr	r2, [r7, #0]
 8003200:	1a8a      	subs	r2, r1, r2
 8003202:	fb03 f202 	mul.w	r2, r3, r2
			/ (au32_INmax - au32_INmin)) + au32_OUTmin);
 8003206:	6879      	ldr	r1, [r7, #4]
 8003208:	68bb      	ldr	r3, [r7, #8]
 800320a:	1acb      	subs	r3, r1, r3
 800320c:	fbb2 f2f3 	udiv	r2, r2, r3
 8003210:	683b      	ldr	r3, [r7, #0]
 8003212:	4413      	add	r3, r2
}
 8003214:	4618      	mov	r0, r3
 8003216:	3714      	adds	r7, #20
 8003218:	46bd      	mov	sp, r7
 800321a:	bc80      	pop	{r7}
 800321c:	4770      	bx	lr

0800321e <constrain>:

int constrain(int x, int a, int b) {
 800321e:	b480      	push	{r7}
 8003220:	b085      	sub	sp, #20
 8003222:	af00      	add	r7, sp, #0
 8003224:	60f8      	str	r0, [r7, #12]
 8003226:	60b9      	str	r1, [r7, #8]
 8003228:	607a      	str	r2, [r7, #4]
	if (x < a) {
 800322a:	68fa      	ldr	r2, [r7, #12]
 800322c:	68bb      	ldr	r3, [r7, #8]
 800322e:	429a      	cmp	r2, r3
 8003230:	da01      	bge.n	8003236 <constrain+0x18>
		return a;
 8003232:	68bb      	ldr	r3, [r7, #8]
 8003234:	e006      	b.n	8003244 <constrain+0x26>
	} else if (b < x) {
 8003236:	687a      	ldr	r2, [r7, #4]
 8003238:	68fb      	ldr	r3, [r7, #12]
 800323a:	429a      	cmp	r2, r3
 800323c:	da01      	bge.n	8003242 <constrain+0x24>
		return b;
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	e000      	b.n	8003244 <constrain+0x26>
	} else
		return x;
 8003242:	68fb      	ldr	r3, [r7, #12]
}
 8003244:	4618      	mov	r0, r3
 8003246:	3714      	adds	r7, #20
 8003248:	46bd      	mov	sp, r7
 800324a:	bc80      	pop	{r7}
 800324c:	4770      	bx	lr
	...

08003250 <wallDetector>:

int wallDetector(int n, int d) {
 8003250:	b480      	push	{r7}
 8003252:	b083      	sub	sp, #12
 8003254:	af00      	add	r7, sp, #0
 8003256:	6078      	str	r0, [r7, #4]
 8003258:	6039      	str	r1, [r7, #0]
	switch (d) {
 800325a:	683b      	ldr	r3, [r7, #0]
 800325c:	2b03      	cmp	r3, #3
 800325e:	d01b      	beq.n	8003298 <wallDetector+0x48>
 8003260:	683b      	ldr	r3, [r7, #0]
 8003262:	2b03      	cmp	r3, #3
 8003264:	dc21      	bgt.n	80032aa <wallDetector+0x5a>
 8003266:	683b      	ldr	r3, [r7, #0]
 8003268:	2b00      	cmp	r3, #0
 800326a:	d003      	beq.n	8003274 <wallDetector+0x24>
 800326c:	683b      	ldr	r3, [r7, #0]
 800326e:	2b01      	cmp	r3, #1
 8003270:	d009      	beq.n	8003286 <wallDetector+0x36>
 8003272:	e01a      	b.n	80032aa <wallDetector+0x5a>
	case ADELANTE:
		if (n < MaxCenterDistance) {
 8003274:	4b10      	ldr	r3, [pc, #64]	; (80032b8 <wallDetector+0x68>)
 8003276:	681b      	ldr	r3, [r3, #0]
 8003278:	687a      	ldr	r2, [r7, #4]
 800327a:	429a      	cmp	r2, r3
 800327c:	da01      	bge.n	8003282 <wallDetector+0x32>
			return 1;
 800327e:	2301      	movs	r3, #1
 8003280:	e014      	b.n	80032ac <wallDetector+0x5c>
		} else {
			return 0;
 8003282:	2300      	movs	r3, #0
 8003284:	e012      	b.n	80032ac <wallDetector+0x5c>
		}
		break;

	case IZQUIERDA:
		if (n < MaxLeftDistance) {
 8003286:	4b0d      	ldr	r3, [pc, #52]	; (80032bc <wallDetector+0x6c>)
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	687a      	ldr	r2, [r7, #4]
 800328c:	429a      	cmp	r2, r3
 800328e:	da01      	bge.n	8003294 <wallDetector+0x44>
			return 1;
 8003290:	2301      	movs	r3, #1
 8003292:	e00b      	b.n	80032ac <wallDetector+0x5c>
		} else {
			return 0;
 8003294:	2300      	movs	r3, #0
 8003296:	e009      	b.n	80032ac <wallDetector+0x5c>
		}
		break;
	case DERECHA:
		if (n < MaxRightDistance) {
 8003298:	4b09      	ldr	r3, [pc, #36]	; (80032c0 <wallDetector+0x70>)
 800329a:	681b      	ldr	r3, [r3, #0]
 800329c:	687a      	ldr	r2, [r7, #4]
 800329e:	429a      	cmp	r2, r3
 80032a0:	da01      	bge.n	80032a6 <wallDetector+0x56>
			return 1;
 80032a2:	2301      	movs	r3, #1
 80032a4:	e002      	b.n	80032ac <wallDetector+0x5c>
		} else {
			return 0;
 80032a6:	2300      	movs	r3, #0
 80032a8:	e000      	b.n	80032ac <wallDetector+0x5c>
		}
		break;
	default:
		return 0;
 80032aa:	2300      	movs	r3, #0
		break;
	}
}
 80032ac:	4618      	mov	r0, r3
 80032ae:	370c      	adds	r7, #12
 80032b0:	46bd      	mov	sp, r7
 80032b2:	bc80      	pop	{r7}
 80032b4:	4770      	bx	lr
 80032b6:	bf00      	nop
 80032b8:	20001210 	.word	0x20001210
 80032bc:	2000120c 	.word	0x2000120c
 80032c0:	20001208 	.word	0x20001208

080032c4 <moveStraight>:

void moveStraight() {
 80032c4:	b590      	push	{r4, r7, lr}
 80032c6:	b083      	sub	sp, #12
 80032c8:	af02      	add	r7, sp, #8
	if (Sensors[3] < MaxLeftDistance && Sensors[1] < MaxRightDistance) {
 80032ca:	4b35      	ldr	r3, [pc, #212]	; (80033a0 <moveStraight+0xdc>)
 80032cc:	68dc      	ldr	r4, [r3, #12]
 80032ce:	4b35      	ldr	r3, [pc, #212]	; (80033a4 <moveStraight+0xe0>)
 80032d0:	681b      	ldr	r3, [r3, #0]
 80032d2:	4618      	mov	r0, r3
 80032d4:	f7fd fcb2 	bl	8000c3c <__aeabi_i2f>
 80032d8:	4603      	mov	r3, r0
 80032da:	4619      	mov	r1, r3
 80032dc:	4620      	mov	r0, r4
 80032de:	f7fd fe9f 	bl	8001020 <__aeabi_fcmplt>
 80032e2:	4603      	mov	r3, r0
 80032e4:	2b00      	cmp	r3, #0
 80032e6:	d01b      	beq.n	8003320 <moveStraight+0x5c>
 80032e8:	4b2d      	ldr	r3, [pc, #180]	; (80033a0 <moveStraight+0xdc>)
 80032ea:	685c      	ldr	r4, [r3, #4]
 80032ec:	4b2e      	ldr	r3, [pc, #184]	; (80033a8 <moveStraight+0xe4>)
 80032ee:	681b      	ldr	r3, [r3, #0]
 80032f0:	4618      	mov	r0, r3
 80032f2:	f7fd fca3 	bl	8000c3c <__aeabi_i2f>
 80032f6:	4603      	mov	r3, r0
 80032f8:	4619      	mov	r1, r3
 80032fa:	4620      	mov	r0, r4
 80032fc:	f7fd fe90 	bl	8001020 <__aeabi_fcmplt>
 8003300:	4603      	mov	r3, r0
 8003302:	2b00      	cmp	r3, #0
 8003304:	d00c      	beq.n	8003320 <moveStraight+0x5c>
		//intUartSend(0);
		error = Sensors[3] - Sensors[1];
 8003306:	4b26      	ldr	r3, [pc, #152]	; (80033a0 <moveStraight+0xdc>)
 8003308:	68db      	ldr	r3, [r3, #12]
 800330a:	4a25      	ldr	r2, [pc, #148]	; (80033a0 <moveStraight+0xdc>)
 800330c:	6852      	ldr	r2, [r2, #4]
 800330e:	4611      	mov	r1, r2
 8003310:	4618      	mov	r0, r3
 8003312:	f7fd fbdd 	bl	8000ad0 <__aeabi_fsub>
 8003316:	4603      	mov	r3, r0
 8003318:	461a      	mov	r2, r3
 800331a:	4b24      	ldr	r3, [pc, #144]	; (80033ac <moveStraight+0xe8>)
 800331c:	601a      	str	r2, [r3, #0]
 800331e:	e04f      	b.n	80033c0 <moveStraight+0xfc>
	} else if (Sensors[3] < MaxLeftDistance) {
 8003320:	4b1f      	ldr	r3, [pc, #124]	; (80033a0 <moveStraight+0xdc>)
 8003322:	68dc      	ldr	r4, [r3, #12]
 8003324:	4b1f      	ldr	r3, [pc, #124]	; (80033a4 <moveStraight+0xe0>)
 8003326:	681b      	ldr	r3, [r3, #0]
 8003328:	4618      	mov	r0, r3
 800332a:	f7fd fc87 	bl	8000c3c <__aeabi_i2f>
 800332e:	4603      	mov	r3, r0
 8003330:	4619      	mov	r1, r3
 8003332:	4620      	mov	r0, r4
 8003334:	f7fd fe74 	bl	8001020 <__aeabi_fcmplt>
 8003338:	4603      	mov	r3, r0
 800333a:	2b00      	cmp	r3, #0
 800333c:	d010      	beq.n	8003360 <moveStraight+0x9c>
		//intUartSend(1);
		error = Sensors[3] - CenterDistanceLeft;
 800333e:	4b18      	ldr	r3, [pc, #96]	; (80033a0 <moveStraight+0xdc>)
 8003340:	68dc      	ldr	r4, [r3, #12]
 8003342:	4b1b      	ldr	r3, [pc, #108]	; (80033b0 <moveStraight+0xec>)
 8003344:	681b      	ldr	r3, [r3, #0]
 8003346:	4618      	mov	r0, r3
 8003348:	f7fd fc78 	bl	8000c3c <__aeabi_i2f>
 800334c:	4603      	mov	r3, r0
 800334e:	4619      	mov	r1, r3
 8003350:	4620      	mov	r0, r4
 8003352:	f7fd fbbd 	bl	8000ad0 <__aeabi_fsub>
 8003356:	4603      	mov	r3, r0
 8003358:	461a      	mov	r2, r3
 800335a:	4b14      	ldr	r3, [pc, #80]	; (80033ac <moveStraight+0xe8>)
 800335c:	601a      	str	r2, [r3, #0]
 800335e:	e02f      	b.n	80033c0 <moveStraight+0xfc>
	} else if (Sensors[1] < MaxRightDistance) {
 8003360:	4b0f      	ldr	r3, [pc, #60]	; (80033a0 <moveStraight+0xdc>)
 8003362:	685c      	ldr	r4, [r3, #4]
 8003364:	4b10      	ldr	r3, [pc, #64]	; (80033a8 <moveStraight+0xe4>)
 8003366:	681b      	ldr	r3, [r3, #0]
 8003368:	4618      	mov	r0, r3
 800336a:	f7fd fc67 	bl	8000c3c <__aeabi_i2f>
 800336e:	4603      	mov	r3, r0
 8003370:	4619      	mov	r1, r3
 8003372:	4620      	mov	r0, r4
 8003374:	f7fd fe54 	bl	8001020 <__aeabi_fcmplt>
 8003378:	4603      	mov	r3, r0
 800337a:	2b00      	cmp	r3, #0
 800337c:	d01c      	beq.n	80033b8 <moveStraight+0xf4>
		//intUartSend(2);
		error = CenterDistanceRight - Sensors[1];
 800337e:	4b0d      	ldr	r3, [pc, #52]	; (80033b4 <moveStraight+0xf0>)
 8003380:	681b      	ldr	r3, [r3, #0]
 8003382:	4618      	mov	r0, r3
 8003384:	f7fd fc5a 	bl	8000c3c <__aeabi_i2f>
 8003388:	4602      	mov	r2, r0
 800338a:	4b05      	ldr	r3, [pc, #20]	; (80033a0 <moveStraight+0xdc>)
 800338c:	685b      	ldr	r3, [r3, #4]
 800338e:	4619      	mov	r1, r3
 8003390:	4610      	mov	r0, r2
 8003392:	f7fd fb9d 	bl	8000ad0 <__aeabi_fsub>
 8003396:	4603      	mov	r3, r0
 8003398:	461a      	mov	r2, r3
 800339a:	4b04      	ldr	r3, [pc, #16]	; (80033ac <moveStraight+0xe8>)
 800339c:	601a      	str	r2, [r3, #0]
 800339e:	e00f      	b.n	80033c0 <moveStraight+0xfc>
 80033a0:	200011dc 	.word	0x200011dc
 80033a4:	2000120c 	.word	0x2000120c
 80033a8:	20001208 	.word	0x20001208
 80033ac:	20002ac0 	.word	0x20002ac0
 80033b0:	20001204 	.word	0x20001204
 80033b4:	20001200 	.word	0x20001200
	} else {
		//intUartSend(3);
		error = 0;
 80033b8:	4b79      	ldr	r3, [pc, #484]	; (80035a0 <moveStraight+0x2dc>)
 80033ba:	f04f 0200 	mov.w	r2, #0
 80033be:	601a      	str	r2, [r3, #0]
	}

	timePrev = timeNow;
 80033c0:	4b78      	ldr	r3, [pc, #480]	; (80035a4 <moveStraight+0x2e0>)
 80033c2:	681b      	ldr	r3, [r3, #0]
 80033c4:	4a78      	ldr	r2, [pc, #480]	; (80035a8 <moveStraight+0x2e4>)
 80033c6:	6013      	str	r3, [r2, #0]
	timeNow = HAL_GetTick();
 80033c8:	f000 fea2 	bl	8004110 <HAL_GetTick>
 80033cc:	4603      	mov	r3, r0
 80033ce:	4618      	mov	r0, r3
 80033d0:	f7fd fc30 	bl	8000c34 <__aeabi_ui2f>
 80033d4:	4603      	mov	r3, r0
 80033d6:	4a73      	ldr	r2, [pc, #460]	; (80035a4 <moveStraight+0x2e0>)
 80033d8:	6013      	str	r3, [r2, #0]
	elapsedTime = (timeNow - timePrev) / 1000;
 80033da:	4b72      	ldr	r3, [pc, #456]	; (80035a4 <moveStraight+0x2e0>)
 80033dc:	681b      	ldr	r3, [r3, #0]
 80033de:	4a72      	ldr	r2, [pc, #456]	; (80035a8 <moveStraight+0x2e4>)
 80033e0:	6812      	ldr	r2, [r2, #0]
 80033e2:	4611      	mov	r1, r2
 80033e4:	4618      	mov	r0, r3
 80033e6:	f7fd fb73 	bl	8000ad0 <__aeabi_fsub>
 80033ea:	4603      	mov	r3, r0
 80033ec:	496f      	ldr	r1, [pc, #444]	; (80035ac <moveStraight+0x2e8>)
 80033ee:	4618      	mov	r0, r3
 80033f0:	f7fd fd2c 	bl	8000e4c <__aeabi_fdiv>
 80033f4:	4603      	mov	r3, r0
 80033f6:	461a      	mov	r2, r3
 80033f8:	4b6d      	ldr	r3, [pc, #436]	; (80035b0 <moveStraight+0x2ec>)
 80033fa:	601a      	str	r2, [r3, #0]
	pidD = KD * ((error - previousError) / elapsedTime);
 80033fc:	4b68      	ldr	r3, [pc, #416]	; (80035a0 <moveStraight+0x2dc>)
 80033fe:	681b      	ldr	r3, [r3, #0]
 8003400:	4a6c      	ldr	r2, [pc, #432]	; (80035b4 <moveStraight+0x2f0>)
 8003402:	6812      	ldr	r2, [r2, #0]
 8003404:	4611      	mov	r1, r2
 8003406:	4618      	mov	r0, r3
 8003408:	f7fd fb62 	bl	8000ad0 <__aeabi_fsub>
 800340c:	4603      	mov	r3, r0
 800340e:	461a      	mov	r2, r3
 8003410:	4b67      	ldr	r3, [pc, #412]	; (80035b0 <moveStraight+0x2ec>)
 8003412:	681b      	ldr	r3, [r3, #0]
 8003414:	4619      	mov	r1, r3
 8003416:	4610      	mov	r0, r2
 8003418:	f7fd fd18 	bl	8000e4c <__aeabi_fdiv>
 800341c:	4603      	mov	r3, r0
 800341e:	461a      	mov	r2, r3
 8003420:	4b65      	ldr	r3, [pc, #404]	; (80035b8 <moveStraight+0x2f4>)
 8003422:	681b      	ldr	r3, [r3, #0]
 8003424:	4619      	mov	r1, r3
 8003426:	4610      	mov	r0, r2
 8003428:	f7fd fc5c 	bl	8000ce4 <__aeabi_fmul>
 800342c:	4603      	mov	r3, r0
 800342e:	461a      	mov	r2, r3
 8003430:	4b62      	ldr	r3, [pc, #392]	; (80035bc <moveStraight+0x2f8>)
 8003432:	601a      	str	r2, [r3, #0]
	pidP = KP * error;
 8003434:	4b62      	ldr	r3, [pc, #392]	; (80035c0 <moveStraight+0x2fc>)
 8003436:	681b      	ldr	r3, [r3, #0]
 8003438:	4a59      	ldr	r2, [pc, #356]	; (80035a0 <moveStraight+0x2dc>)
 800343a:	6812      	ldr	r2, [r2, #0]
 800343c:	4611      	mov	r1, r2
 800343e:	4618      	mov	r0, r3
 8003440:	f7fd fc50 	bl	8000ce4 <__aeabi_fmul>
 8003444:	4603      	mov	r3, r0
 8003446:	461a      	mov	r2, r3
 8003448:	4b5e      	ldr	r3, [pc, #376]	; (80035c4 <moveStraight+0x300>)
 800344a:	601a      	str	r2, [r3, #0]
	pid = pidP + pidD;
 800344c:	4b5d      	ldr	r3, [pc, #372]	; (80035c4 <moveStraight+0x300>)
 800344e:	681b      	ldr	r3, [r3, #0]
 8003450:	4a5a      	ldr	r2, [pc, #360]	; (80035bc <moveStraight+0x2f8>)
 8003452:	6812      	ldr	r2, [r2, #0]
 8003454:	4611      	mov	r1, r2
 8003456:	4618      	mov	r0, r3
 8003458:	f7fd fb3c 	bl	8000ad4 <__addsf3>
 800345c:	4603      	mov	r3, r0
 800345e:	461a      	mov	r2, r3
 8003460:	4b59      	ldr	r3, [pc, #356]	; (80035c8 <moveStraight+0x304>)
 8003462:	601a      	str	r2, [r3, #0]
	if (pid > velocity) {
 8003464:	4b58      	ldr	r3, [pc, #352]	; (80035c8 <moveStraight+0x304>)
 8003466:	681b      	ldr	r3, [r3, #0]
 8003468:	4a58      	ldr	r2, [pc, #352]	; (80035cc <moveStraight+0x308>)
 800346a:	6812      	ldr	r2, [r2, #0]
 800346c:	4611      	mov	r1, r2
 800346e:	4618      	mov	r0, r3
 8003470:	f7fd fdf4 	bl	800105c <__aeabi_fcmpgt>
 8003474:	4603      	mov	r3, r0
 8003476:	2b00      	cmp	r3, #0
 8003478:	d003      	beq.n	8003482 <moveStraight+0x1be>
		//intUartSend(1);
		pid = velocity;
 800347a:	4b54      	ldr	r3, [pc, #336]	; (80035cc <moveStraight+0x308>)
 800347c:	681b      	ldr	r3, [r3, #0]
 800347e:	4a52      	ldr	r2, [pc, #328]	; (80035c8 <moveStraight+0x304>)
 8003480:	6013      	str	r3, [r2, #0]
	}
	if (pid < -velocity) {
 8003482:	4b52      	ldr	r3, [pc, #328]	; (80035cc <moveStraight+0x308>)
 8003484:	681b      	ldr	r3, [r3, #0]
 8003486:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000
 800348a:	4a4f      	ldr	r2, [pc, #316]	; (80035c8 <moveStraight+0x304>)
 800348c:	6812      	ldr	r2, [r2, #0]
 800348e:	4611      	mov	r1, r2
 8003490:	4618      	mov	r0, r3
 8003492:	f7fd fde3 	bl	800105c <__aeabi_fcmpgt>
 8003496:	4603      	mov	r3, r0
 8003498:	2b00      	cmp	r3, #0
 800349a:	d005      	beq.n	80034a8 <moveStraight+0x1e4>
		//intUartSend(0);
		pid = -velocity;
 800349c:	4b4b      	ldr	r3, [pc, #300]	; (80035cc <moveStraight+0x308>)
 800349e:	681b      	ldr	r3, [r3, #0]
 80034a0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000
 80034a4:	4a48      	ldr	r2, [pc, #288]	; (80035c8 <moveStraight+0x304>)
 80034a6:	6013      	str	r3, [r2, #0]
	}
//intUartSend(abs(pid));
	motLeft = velocity - pid;
 80034a8:	4b48      	ldr	r3, [pc, #288]	; (80035cc <moveStraight+0x308>)
 80034aa:	681b      	ldr	r3, [r3, #0]
 80034ac:	4a46      	ldr	r2, [pc, #280]	; (80035c8 <moveStraight+0x304>)
 80034ae:	6812      	ldr	r2, [r2, #0]
 80034b0:	4611      	mov	r1, r2
 80034b2:	4618      	mov	r0, r3
 80034b4:	f7fd fb0c 	bl	8000ad0 <__aeabi_fsub>
 80034b8:	4603      	mov	r3, r0
 80034ba:	4618      	mov	r0, r3
 80034bc:	f7fd fdd8 	bl	8001070 <__aeabi_f2iz>
 80034c0:	4603      	mov	r3, r0
 80034c2:	4a43      	ldr	r2, [pc, #268]	; (80035d0 <moveStraight+0x30c>)
 80034c4:	6013      	str	r3, [r2, #0]
	motRight = velocity + pid;
 80034c6:	4b41      	ldr	r3, [pc, #260]	; (80035cc <moveStraight+0x308>)
 80034c8:	681b      	ldr	r3, [r3, #0]
 80034ca:	4a3f      	ldr	r2, [pc, #252]	; (80035c8 <moveStraight+0x304>)
 80034cc:	6812      	ldr	r2, [r2, #0]
 80034ce:	4611      	mov	r1, r2
 80034d0:	4618      	mov	r0, r3
 80034d2:	f7fd faff 	bl	8000ad4 <__addsf3>
 80034d6:	4603      	mov	r3, r0
 80034d8:	4618      	mov	r0, r3
 80034da:	f7fd fdc9 	bl	8001070 <__aeabi_f2iz>
 80034de:	4603      	mov	r3, r0
 80034e0:	4a3c      	ldr	r2, [pc, #240]	; (80035d4 <moveStraight+0x310>)
 80034e2:	6013      	str	r3, [r2, #0]
	if (motLeft < 0) {
 80034e4:	4b3a      	ldr	r3, [pc, #232]	; (80035d0 <moveStraight+0x30c>)
 80034e6:	681b      	ldr	r3, [r3, #0]
 80034e8:	2b00      	cmp	r3, #0
 80034ea:	da02      	bge.n	80034f2 <moveStraight+0x22e>
		motLeft = 0;
 80034ec:	4b38      	ldr	r3, [pc, #224]	; (80035d0 <moveStraight+0x30c>)
 80034ee:	2200      	movs	r2, #0
 80034f0:	601a      	str	r2, [r3, #0]
	}
	if (motRight < 0) {
 80034f2:	4b38      	ldr	r3, [pc, #224]	; (80035d4 <moveStraight+0x310>)
 80034f4:	681b      	ldr	r3, [r3, #0]
 80034f6:	2b00      	cmp	r3, #0
 80034f8:	da02      	bge.n	8003500 <moveStraight+0x23c>
		motRight = 0;
 80034fa:	4b36      	ldr	r3, [pc, #216]	; (80035d4 <moveStraight+0x310>)
 80034fc:	2200      	movs	r2, #0
 80034fe:	601a      	str	r2, [r3, #0]
	}

	previousError = error;
 8003500:	4b27      	ldr	r3, [pc, #156]	; (80035a0 <moveStraight+0x2dc>)
 8003502:	681b      	ldr	r3, [r3, #0]
 8003504:	4a2b      	ldr	r2, [pc, #172]	; (80035b4 <moveStraight+0x2f0>)
 8003506:	6013      	str	r3, [r2, #0]
	motRight = constrain(motRight, -1000, 1000);
 8003508:	4b32      	ldr	r3, [pc, #200]	; (80035d4 <moveStraight+0x310>)
 800350a:	681b      	ldr	r3, [r3, #0]
 800350c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8003510:	4931      	ldr	r1, [pc, #196]	; (80035d8 <moveStraight+0x314>)
 8003512:	4618      	mov	r0, r3
 8003514:	f7ff fe83 	bl	800321e <constrain>
 8003518:	4603      	mov	r3, r0
 800351a:	4a2e      	ldr	r2, [pc, #184]	; (80035d4 <moveStraight+0x310>)
 800351c:	6013      	str	r3, [r2, #0]
	motLeft = constrain(motLeft, -1000, 1000);
 800351e:	4b2c      	ldr	r3, [pc, #176]	; (80035d0 <moveStraight+0x30c>)
 8003520:	681b      	ldr	r3, [r3, #0]
 8003522:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8003526:	492c      	ldr	r1, [pc, #176]	; (80035d8 <moveStraight+0x314>)
 8003528:	4618      	mov	r0, r3
 800352a:	f7ff fe78 	bl	800321e <constrain>
 800352e:	4603      	mov	r3, r0
 8003530:	4a27      	ldr	r2, [pc, #156]	; (80035d0 <moveStraight+0x30c>)
 8003532:	6013      	str	r3, [r2, #0]

	motRight = MAP(motRight, -1000, 1000, 0, baseChoice[choice] * 2);
 8003534:	4b27      	ldr	r3, [pc, #156]	; (80035d4 <moveStraight+0x310>)
 8003536:	681b      	ldr	r3, [r3, #0]
 8003538:	4618      	mov	r0, r3
 800353a:	4b28      	ldr	r3, [pc, #160]	; (80035dc <moveStraight+0x318>)
 800353c:	681b      	ldr	r3, [r3, #0]
 800353e:	4a28      	ldr	r2, [pc, #160]	; (80035e0 <moveStraight+0x31c>)
 8003540:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003544:	005b      	lsls	r3, r3, #1
 8003546:	9300      	str	r3, [sp, #0]
 8003548:	2300      	movs	r3, #0
 800354a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800354e:	4922      	ldr	r1, [pc, #136]	; (80035d8 <moveStraight+0x314>)
 8003550:	f7ff fe4a 	bl	80031e8 <MAP>
 8003554:	4603      	mov	r3, r0
 8003556:	461a      	mov	r2, r3
 8003558:	4b1e      	ldr	r3, [pc, #120]	; (80035d4 <moveStraight+0x310>)
 800355a:	601a      	str	r2, [r3, #0]
	motLeft = MAP(motLeft, -1000, 1000, 0, baseChoice[choice] * 2);
 800355c:	4b1c      	ldr	r3, [pc, #112]	; (80035d0 <moveStraight+0x30c>)
 800355e:	681b      	ldr	r3, [r3, #0]
 8003560:	4618      	mov	r0, r3
 8003562:	4b1e      	ldr	r3, [pc, #120]	; (80035dc <moveStraight+0x318>)
 8003564:	681b      	ldr	r3, [r3, #0]
 8003566:	4a1e      	ldr	r2, [pc, #120]	; (80035e0 <moveStraight+0x31c>)
 8003568:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800356c:	005b      	lsls	r3, r3, #1
 800356e:	9300      	str	r3, [sp, #0]
 8003570:	2300      	movs	r3, #0
 8003572:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8003576:	4918      	ldr	r1, [pc, #96]	; (80035d8 <moveStraight+0x314>)
 8003578:	f7ff fe36 	bl	80031e8 <MAP>
 800357c:	4603      	mov	r3, r0
 800357e:	461a      	mov	r2, r3
 8003580:	4b13      	ldr	r3, [pc, #76]	; (80035d0 <moveStraight+0x30c>)
 8003582:	601a      	str	r2, [r3, #0]
	TIM2->CCR3 = motLeft;
 8003584:	4b12      	ldr	r3, [pc, #72]	; (80035d0 <moveStraight+0x30c>)
 8003586:	681a      	ldr	r2, [r3, #0]
 8003588:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800358c:	63da      	str	r2, [r3, #60]	; 0x3c
	TIM2->CCR4 = motRight;
 800358e:	4b11      	ldr	r3, [pc, #68]	; (80035d4 <moveStraight+0x310>)
 8003590:	681a      	ldr	r2, [r3, #0]
 8003592:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003596:	641a      	str	r2, [r3, #64]	; 0x40
}
 8003598:	bf00      	nop
 800359a:	3704      	adds	r7, #4
 800359c:	46bd      	mov	sp, r7
 800359e:	bd90      	pop	{r4, r7, pc}
 80035a0:	20002ac0 	.word	0x20002ac0
 80035a4:	20002ad0 	.word	0x20002ad0
 80035a8:	20002ad4 	.word	0x20002ad4
 80035ac:	447a0000 	.word	0x447a0000
 80035b0:	20002acc 	.word	0x20002acc
 80035b4:	20002ac8 	.word	0x20002ac8
 80035b8:	2000122c 	.word	0x2000122c
 80035bc:	20002adc 	.word	0x20002adc
 80035c0:	20001228 	.word	0x20001228
 80035c4:	20002ad8 	.word	0x20002ad8
 80035c8:	20002ac4 	.word	0x20002ac4
 80035cc:	20001230 	.word	0x20001230
 80035d0:	20002ae0 	.word	0x20002ae0
 80035d4:	20002ae4 	.word	0x20002ae4
 80035d8:	fffffc18 	.word	0xfffffc18
 80035dc:	20001238 	.word	0x20001238
 80035e0:	20000018 	.word	0x20000018

080035e4 <btnMachine>:
void runForward() {
	runMotor(ADELANTE, MOTOR_A);
	runMotor(ADELANTE, MOTOR_B);
}

void btnMachine(int index) {
 80035e4:	b580      	push	{r7, lr}
 80035e6:	b082      	sub	sp, #8
 80035e8:	af00      	add	r7, sp, #0
 80035ea:	6078      	str	r0, [r7, #4]
	switch (btns[index].estado) {
 80035ec:	4a50      	ldr	r2, [pc, #320]	; (8003730 <btnMachine+0x14c>)
 80035ee:	687b      	ldr	r3, [r7, #4]
 80035f0:	011b      	lsls	r3, r3, #4
 80035f2:	4413      	add	r3, r2
 80035f4:	3308      	adds	r3, #8
 80035f6:	681b      	ldr	r3, [r3, #0]
 80035f8:	2b02      	cmp	r3, #2
 80035fa:	d069      	beq.n	80036d0 <btnMachine+0xec>
 80035fc:	2b02      	cmp	r3, #2
 80035fe:	f300 8092 	bgt.w	8003726 <btnMachine+0x142>
 8003602:	2b00      	cmp	r3, #0
 8003604:	d002      	beq.n	800360c <btnMachine+0x28>
 8003606:	2b01      	cmp	r3, #1
 8003608:	d02c      	beq.n	8003664 <btnMachine+0x80>
			btns[index].flag = 1;
			btns[index].estado = ESPERA;
		}
		break;
	}
}
 800360a:	e08c      	b.n	8003726 <btnMachine+0x142>
		btns[index].flag = 0;
 800360c:	4a48      	ldr	r2, [pc, #288]	; (8003730 <btnMachine+0x14c>)
 800360e:	687b      	ldr	r3, [r7, #4]
 8003610:	011b      	lsls	r3, r3, #4
 8003612:	4413      	add	r3, r2
 8003614:	330c      	adds	r3, #12
 8003616:	2200      	movs	r2, #0
 8003618:	601a      	str	r2, [r3, #0]
		lecturaBtn = HAL_GPIO_ReadPin(btns[index].Port, btns[index].pin);
 800361a:	4a45      	ldr	r2, [pc, #276]	; (8003730 <btnMachine+0x14c>)
 800361c:	687b      	ldr	r3, [r7, #4]
 800361e:	011b      	lsls	r3, r3, #4
 8003620:	4413      	add	r3, r2
 8003622:	681a      	ldr	r2, [r3, #0]
 8003624:	4942      	ldr	r1, [pc, #264]	; (8003730 <btnMachine+0x14c>)
 8003626:	687b      	ldr	r3, [r7, #4]
 8003628:	011b      	lsls	r3, r3, #4
 800362a:	440b      	add	r3, r1
 800362c:	3304      	adds	r3, #4
 800362e:	881b      	ldrh	r3, [r3, #0]
 8003630:	4619      	mov	r1, r3
 8003632:	4610      	mov	r0, r2
 8003634:	f001 fe68 	bl	8005308 <HAL_GPIO_ReadPin>
 8003638:	4603      	mov	r3, r0
 800363a:	461a      	mov	r2, r3
 800363c:	4b3d      	ldr	r3, [pc, #244]	; (8003734 <btnMachine+0x150>)
 800363e:	601a      	str	r2, [r3, #0]
		if (lecturaBtn == 0) {
 8003640:	4b3c      	ldr	r3, [pc, #240]	; (8003734 <btnMachine+0x150>)
 8003642:	681b      	ldr	r3, [r3, #0]
 8003644:	2b00      	cmp	r3, #0
 8003646:	d169      	bne.n	800371c <btnMachine+0x138>
			ticks = HAL_GetTick();
 8003648:	f000 fd62 	bl	8004110 <HAL_GetTick>
 800364c:	4603      	mov	r3, r0
 800364e:	461a      	mov	r2, r3
 8003650:	4b39      	ldr	r3, [pc, #228]	; (8003738 <btnMachine+0x154>)
 8003652:	601a      	str	r2, [r3, #0]
			btns[index].estado = CONFIRMACION;
 8003654:	4a36      	ldr	r2, [pc, #216]	; (8003730 <btnMachine+0x14c>)
 8003656:	687b      	ldr	r3, [r7, #4]
 8003658:	011b      	lsls	r3, r3, #4
 800365a:	4413      	add	r3, r2
 800365c:	3308      	adds	r3, #8
 800365e:	2201      	movs	r2, #1
 8003660:	601a      	str	r2, [r3, #0]
		break;
 8003662:	e05b      	b.n	800371c <btnMachine+0x138>
		lecturaBtn = HAL_GPIO_ReadPin(btns[index].Port, btns[index].pin);
 8003664:	4a32      	ldr	r2, [pc, #200]	; (8003730 <btnMachine+0x14c>)
 8003666:	687b      	ldr	r3, [r7, #4]
 8003668:	011b      	lsls	r3, r3, #4
 800366a:	4413      	add	r3, r2
 800366c:	681a      	ldr	r2, [r3, #0]
 800366e:	4930      	ldr	r1, [pc, #192]	; (8003730 <btnMachine+0x14c>)
 8003670:	687b      	ldr	r3, [r7, #4]
 8003672:	011b      	lsls	r3, r3, #4
 8003674:	440b      	add	r3, r1
 8003676:	3304      	adds	r3, #4
 8003678:	881b      	ldrh	r3, [r3, #0]
 800367a:	4619      	mov	r1, r3
 800367c:	4610      	mov	r0, r2
 800367e:	f001 fe43 	bl	8005308 <HAL_GPIO_ReadPin>
 8003682:	4603      	mov	r3, r0
 8003684:	461a      	mov	r2, r3
 8003686:	4b2b      	ldr	r3, [pc, #172]	; (8003734 <btnMachine+0x150>)
 8003688:	601a      	str	r2, [r3, #0]
		if (lecturaBtn == 0 && HAL_GetTick() >= ticks + TICKS_BTN) {
 800368a:	4b2a      	ldr	r3, [pc, #168]	; (8003734 <btnMachine+0x150>)
 800368c:	681b      	ldr	r3, [r3, #0]
 800368e:	2b00      	cmp	r3, #0
 8003690:	d10e      	bne.n	80036b0 <btnMachine+0xcc>
 8003692:	f000 fd3d 	bl	8004110 <HAL_GetTick>
 8003696:	4602      	mov	r2, r0
 8003698:	4b27      	ldr	r3, [pc, #156]	; (8003738 <btnMachine+0x154>)
 800369a:	681b      	ldr	r3, [r3, #0]
 800369c:	3319      	adds	r3, #25
 800369e:	429a      	cmp	r2, r3
 80036a0:	d306      	bcc.n	80036b0 <btnMachine+0xcc>
			btns[index].estado = LIBERACION;
 80036a2:	4a23      	ldr	r2, [pc, #140]	; (8003730 <btnMachine+0x14c>)
 80036a4:	687b      	ldr	r3, [r7, #4]
 80036a6:	011b      	lsls	r3, r3, #4
 80036a8:	4413      	add	r3, r2
 80036aa:	3308      	adds	r3, #8
 80036ac:	2202      	movs	r2, #2
 80036ae:	601a      	str	r2, [r3, #0]
		if (lecturaBtn == 1 && ticks < TICKS_BTN) {
 80036b0:	4b20      	ldr	r3, [pc, #128]	; (8003734 <btnMachine+0x150>)
 80036b2:	681b      	ldr	r3, [r3, #0]
 80036b4:	2b01      	cmp	r3, #1
 80036b6:	d133      	bne.n	8003720 <btnMachine+0x13c>
 80036b8:	4b1f      	ldr	r3, [pc, #124]	; (8003738 <btnMachine+0x154>)
 80036ba:	681b      	ldr	r3, [r3, #0]
 80036bc:	2b18      	cmp	r3, #24
 80036be:	dc2f      	bgt.n	8003720 <btnMachine+0x13c>
			btns[index].estado = ESPERA;
 80036c0:	4a1b      	ldr	r2, [pc, #108]	; (8003730 <btnMachine+0x14c>)
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	011b      	lsls	r3, r3, #4
 80036c6:	4413      	add	r3, r2
 80036c8:	3308      	adds	r3, #8
 80036ca:	2200      	movs	r2, #0
 80036cc:	601a      	str	r2, [r3, #0]
		break;
 80036ce:	e027      	b.n	8003720 <btnMachine+0x13c>
		lecturaBtn = HAL_GPIO_ReadPin(btns[index].Port, btns[index].pin);
 80036d0:	4a17      	ldr	r2, [pc, #92]	; (8003730 <btnMachine+0x14c>)
 80036d2:	687b      	ldr	r3, [r7, #4]
 80036d4:	011b      	lsls	r3, r3, #4
 80036d6:	4413      	add	r3, r2
 80036d8:	681a      	ldr	r2, [r3, #0]
 80036da:	4915      	ldr	r1, [pc, #84]	; (8003730 <btnMachine+0x14c>)
 80036dc:	687b      	ldr	r3, [r7, #4]
 80036de:	011b      	lsls	r3, r3, #4
 80036e0:	440b      	add	r3, r1
 80036e2:	3304      	adds	r3, #4
 80036e4:	881b      	ldrh	r3, [r3, #0]
 80036e6:	4619      	mov	r1, r3
 80036e8:	4610      	mov	r0, r2
 80036ea:	f001 fe0d 	bl	8005308 <HAL_GPIO_ReadPin>
 80036ee:	4603      	mov	r3, r0
 80036f0:	461a      	mov	r2, r3
 80036f2:	4b10      	ldr	r3, [pc, #64]	; (8003734 <btnMachine+0x150>)
 80036f4:	601a      	str	r2, [r3, #0]
		if (lecturaBtn == 1) {
 80036f6:	4b0f      	ldr	r3, [pc, #60]	; (8003734 <btnMachine+0x150>)
 80036f8:	681b      	ldr	r3, [r3, #0]
 80036fa:	2b01      	cmp	r3, #1
 80036fc:	d112      	bne.n	8003724 <btnMachine+0x140>
			btns[index].flag = 1;
 80036fe:	4a0c      	ldr	r2, [pc, #48]	; (8003730 <btnMachine+0x14c>)
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	011b      	lsls	r3, r3, #4
 8003704:	4413      	add	r3, r2
 8003706:	330c      	adds	r3, #12
 8003708:	2201      	movs	r2, #1
 800370a:	601a      	str	r2, [r3, #0]
			btns[index].estado = ESPERA;
 800370c:	4a08      	ldr	r2, [pc, #32]	; (8003730 <btnMachine+0x14c>)
 800370e:	687b      	ldr	r3, [r7, #4]
 8003710:	011b      	lsls	r3, r3, #4
 8003712:	4413      	add	r3, r2
 8003714:	3308      	adds	r3, #8
 8003716:	2200      	movs	r2, #0
 8003718:	601a      	str	r2, [r3, #0]
		break;
 800371a:	e003      	b.n	8003724 <btnMachine+0x140>
		break;
 800371c:	bf00      	nop
 800371e:	e002      	b.n	8003726 <btnMachine+0x142>
		break;
 8003720:	bf00      	nop
 8003722:	e000      	b.n	8003726 <btnMachine+0x142>
		break;
 8003724:	bf00      	nop
}
 8003726:	bf00      	nop
 8003728:	3708      	adds	r7, #8
 800372a:	46bd      	mov	sp, r7
 800372c:	bd80      	pop	{r7, pc}
 800372e:	bf00      	nop
 8003730:	2000125c 	.word	0x2000125c
 8003734:	20001218 	.word	0x20001218
 8003738:	20001214 	.word	0x20001214

0800373c <Error_Handler>:

/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void) {
 800373c:	b480      	push	{r7}
 800373e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8003740:	b672      	cpsid	i
}
 8003742:	bf00      	nop
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8003744:	e7fe      	b.n	8003744 <Error_Handler+0x8>
	...

08003748 <calcularDistancia>:
#include "motors.h"


int counterD, counterI;

float calcularDistancia(int counter) {
 8003748:	b580      	push	{r7, lr}
 800374a:	b082      	sub	sp, #8
 800374c:	af00      	add	r7, sp, #0
 800374e:	6078      	str	r0, [r7, #4]
  return ((counter) * 8.43938 / 10);
 8003750:	6878      	ldr	r0, [r7, #4]
 8003752:	f7fc fe4f 	bl	80003f4 <__aeabi_i2d>
 8003756:	a30c      	add	r3, pc, #48	; (adr r3, 8003788 <calcularDistancia+0x40>)
 8003758:	e9d3 2300 	ldrd	r2, r3, [r3]
 800375c:	f7fc feb4 	bl	80004c8 <__aeabi_dmul>
 8003760:	4602      	mov	r2, r0
 8003762:	460b      	mov	r3, r1
 8003764:	4610      	mov	r0, r2
 8003766:	4619      	mov	r1, r3
 8003768:	f04f 0200 	mov.w	r2, #0
 800376c:	4b08      	ldr	r3, [pc, #32]	; (8003790 <calcularDistancia+0x48>)
 800376e:	f7fc ffd5 	bl	800071c <__aeabi_ddiv>
 8003772:	4602      	mov	r2, r0
 8003774:	460b      	mov	r3, r1
 8003776:	4610      	mov	r0, r2
 8003778:	4619      	mov	r1, r3
 800377a:	f7fd f955 	bl	8000a28 <__aeabi_d2f>
 800377e:	4603      	mov	r3, r0
}
 8003780:	4618      	mov	r0, r3
 8003782:	3708      	adds	r7, #8
 8003784:	46bd      	mov	sp, r7
 8003786:	bd80      	pop	{r7, pc}
 8003788:	6a550870 	.word	0x6a550870
 800378c:	4020e0f6 	.word	0x4020e0f6
 8003790:	40240000 	.word	0x40240000

08003794 <runMotor>:
	} else {
		TIM4->CCR3 = power;
	}
}

void runMotor(int dir, int motor) {
 8003794:	b580      	push	{r7, lr}
 8003796:	b082      	sub	sp, #8
 8003798:	af00      	add	r7, sp, #0
 800379a:	6078      	str	r0, [r7, #4]
 800379c:	6039      	str	r1, [r7, #0]
	switch (dir) {
 800379e:	687b      	ldr	r3, [r7, #4]
 80037a0:	2b05      	cmp	r3, #5
 80037a2:	d03f      	beq.n	8003824 <runMotor+0x90>
 80037a4:	687b      	ldr	r3, [r7, #4]
 80037a6:	2b05      	cmp	r3, #5
 80037a8:	dc57      	bgt.n	800385a <runMotor+0xc6>
 80037aa:	687b      	ldr	r3, [r7, #4]
 80037ac:	2b00      	cmp	r3, #0
 80037ae:	d003      	beq.n	80037b8 <runMotor+0x24>
 80037b0:	687b      	ldr	r3, [r7, #4]
 80037b2:	2b02      	cmp	r3, #2
 80037b4:	d01b      	beq.n	80037ee <runMotor+0x5a>
			HAL_GPIO_WritePin(BIN1, GPIO_PIN_RESET);
			HAL_GPIO_WritePin(BIN2, GPIO_PIN_RESET);
		}
		break;
	}
}
 80037b6:	e050      	b.n	800385a <runMotor+0xc6>
		if (motor == MOTOR_A) {
 80037b8:	683b      	ldr	r3, [r7, #0]
 80037ba:	2b00      	cmp	r3, #0
 80037bc:	d10a      	bne.n	80037d4 <runMotor+0x40>
			HAL_GPIO_WritePin(AIN1, GPIO_PIN_SET);
 80037be:	2201      	movs	r2, #1
 80037c0:	2108      	movs	r1, #8
 80037c2:	4828      	ldr	r0, [pc, #160]	; (8003864 <runMotor+0xd0>)
 80037c4:	f001 fdb7 	bl	8005336 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(AIN2, GPIO_PIN_RESET);
 80037c8:	2200      	movs	r2, #0
 80037ca:	2110      	movs	r1, #16
 80037cc:	4825      	ldr	r0, [pc, #148]	; (8003864 <runMotor+0xd0>)
 80037ce:	f001 fdb2 	bl	8005336 <HAL_GPIO_WritePin>
		break;
 80037d2:	e042      	b.n	800385a <runMotor+0xc6>
			HAL_GPIO_WritePin(BIN1, GPIO_PIN_RESET);
 80037d4:	2200      	movs	r2, #0
 80037d6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80037da:	4823      	ldr	r0, [pc, #140]	; (8003868 <runMotor+0xd4>)
 80037dc:	f001 fdab 	bl	8005336 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(BIN2, GPIO_PIN_SET);
 80037e0:	2201      	movs	r2, #1
 80037e2:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80037e6:	4820      	ldr	r0, [pc, #128]	; (8003868 <runMotor+0xd4>)
 80037e8:	f001 fda5 	bl	8005336 <HAL_GPIO_WritePin>
		break;
 80037ec:	e035      	b.n	800385a <runMotor+0xc6>
		if (motor == MOTOR_A) {
 80037ee:	683b      	ldr	r3, [r7, #0]
 80037f0:	2b00      	cmp	r3, #0
 80037f2:	d10a      	bne.n	800380a <runMotor+0x76>
			HAL_GPIO_WritePin(AIN1, GPIO_PIN_RESET);
 80037f4:	2200      	movs	r2, #0
 80037f6:	2108      	movs	r1, #8
 80037f8:	481a      	ldr	r0, [pc, #104]	; (8003864 <runMotor+0xd0>)
 80037fa:	f001 fd9c 	bl	8005336 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(AIN2, GPIO_PIN_SET);
 80037fe:	2201      	movs	r2, #1
 8003800:	2110      	movs	r1, #16
 8003802:	4818      	ldr	r0, [pc, #96]	; (8003864 <runMotor+0xd0>)
 8003804:	f001 fd97 	bl	8005336 <HAL_GPIO_WritePin>
		break;
 8003808:	e027      	b.n	800385a <runMotor+0xc6>
			HAL_GPIO_WritePin(BIN1, GPIO_PIN_SET);
 800380a:	2201      	movs	r2, #1
 800380c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8003810:	4815      	ldr	r0, [pc, #84]	; (8003868 <runMotor+0xd4>)
 8003812:	f001 fd90 	bl	8005336 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(BIN2, GPIO_PIN_RESET);
 8003816:	2200      	movs	r2, #0
 8003818:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800381c:	4812      	ldr	r0, [pc, #72]	; (8003868 <runMotor+0xd4>)
 800381e:	f001 fd8a 	bl	8005336 <HAL_GPIO_WritePin>
		break;
 8003822:	e01a      	b.n	800385a <runMotor+0xc6>
		if (motor == MOTOR_A) {
 8003824:	683b      	ldr	r3, [r7, #0]
 8003826:	2b00      	cmp	r3, #0
 8003828:	d10a      	bne.n	8003840 <runMotor+0xac>
			HAL_GPIO_WritePin(AIN1, GPIO_PIN_RESET);
 800382a:	2200      	movs	r2, #0
 800382c:	2108      	movs	r1, #8
 800382e:	480d      	ldr	r0, [pc, #52]	; (8003864 <runMotor+0xd0>)
 8003830:	f001 fd81 	bl	8005336 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(AIN2, GPIO_PIN_RESET);
 8003834:	2200      	movs	r2, #0
 8003836:	2110      	movs	r1, #16
 8003838:	480a      	ldr	r0, [pc, #40]	; (8003864 <runMotor+0xd0>)
 800383a:	f001 fd7c 	bl	8005336 <HAL_GPIO_WritePin>
		break;
 800383e:	e00b      	b.n	8003858 <runMotor+0xc4>
			HAL_GPIO_WritePin(BIN1, GPIO_PIN_RESET);
 8003840:	2200      	movs	r2, #0
 8003842:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8003846:	4808      	ldr	r0, [pc, #32]	; (8003868 <runMotor+0xd4>)
 8003848:	f001 fd75 	bl	8005336 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(BIN2, GPIO_PIN_RESET);
 800384c:	2200      	movs	r2, #0
 800384e:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8003852:	4805      	ldr	r0, [pc, #20]	; (8003868 <runMotor+0xd4>)
 8003854:	f001 fd6f 	bl	8005336 <HAL_GPIO_WritePin>
		break;
 8003858:	bf00      	nop
}
 800385a:	bf00      	nop
 800385c:	3708      	adds	r7, #8
 800385e:	46bd      	mov	sp, r7
 8003860:	bd80      	pop	{r7, pc}
 8003862:	bf00      	nop
 8003864:	40010c00 	.word	0x40010c00
 8003868:	40010800 	.word	0x40010800

0800386c <lecturaSensor>:

#include <math.h>



float lecturaSensor(int direccion, float values[4]) {
 800386c:	b580      	push	{r7, lr}
 800386e:	b082      	sub	sp, #8
 8003870:	af00      	add	r7, sp, #0
 8003872:	6078      	str	r0, [r7, #4]
 8003874:	6039      	str	r1, [r7, #0]
	switch (direccion) {
 8003876:	687b      	ldr	r3, [r7, #4]
 8003878:	2b03      	cmp	r3, #3
 800387a:	d841      	bhi.n	8003900 <lecturaSensor+0x94>
 800387c:	a201      	add	r2, pc, #4	; (adr r2, 8003884 <lecturaSensor+0x18>)
 800387e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003882:	bf00      	nop
 8003884:	08003895 	.word	0x08003895
 8003888:	080038d9 	.word	0x080038d9
 800388c:	080038fb 	.word	0x080038fb
 8003890:	080038b7 	.word	0x080038b7
	case ADELANTE:
		return wallDetector(values[2], direccion);
 8003894:	683b      	ldr	r3, [r7, #0]
 8003896:	3308      	adds	r3, #8
 8003898:	681b      	ldr	r3, [r3, #0]
 800389a:	4618      	mov	r0, r3
 800389c:	f7fd fbe8 	bl	8001070 <__aeabi_f2iz>
 80038a0:	4603      	mov	r3, r0
 80038a2:	6879      	ldr	r1, [r7, #4]
 80038a4:	4618      	mov	r0, r3
 80038a6:	f7ff fcd3 	bl	8003250 <wallDetector>
 80038aa:	4603      	mov	r3, r0
 80038ac:	4618      	mov	r0, r3
 80038ae:	f7fd f9c5 	bl	8000c3c <__aeabi_i2f>
 80038b2:	4603      	mov	r3, r0
 80038b4:	e025      	b.n	8003902 <lecturaSensor+0x96>
		break;
	case DERECHA:
		return wallDetector(values[1], direccion);
 80038b6:	683b      	ldr	r3, [r7, #0]
 80038b8:	3304      	adds	r3, #4
 80038ba:	681b      	ldr	r3, [r3, #0]
 80038bc:	4618      	mov	r0, r3
 80038be:	f7fd fbd7 	bl	8001070 <__aeabi_f2iz>
 80038c2:	4603      	mov	r3, r0
 80038c4:	6879      	ldr	r1, [r7, #4]
 80038c6:	4618      	mov	r0, r3
 80038c8:	f7ff fcc2 	bl	8003250 <wallDetector>
 80038cc:	4603      	mov	r3, r0
 80038ce:	4618      	mov	r0, r3
 80038d0:	f7fd f9b4 	bl	8000c3c <__aeabi_i2f>
 80038d4:	4603      	mov	r3, r0
 80038d6:	e014      	b.n	8003902 <lecturaSensor+0x96>
		break;
	case IZQUIERDA:
		return wallDetector(values[3], direccion);
 80038d8:	683b      	ldr	r3, [r7, #0]
 80038da:	330c      	adds	r3, #12
 80038dc:	681b      	ldr	r3, [r3, #0]
 80038de:	4618      	mov	r0, r3
 80038e0:	f7fd fbc6 	bl	8001070 <__aeabi_f2iz>
 80038e4:	4603      	mov	r3, r0
 80038e6:	6879      	ldr	r1, [r7, #4]
 80038e8:	4618      	mov	r0, r3
 80038ea:	f7ff fcb1 	bl	8003250 <wallDetector>
 80038ee:	4603      	mov	r3, r0
 80038f0:	4618      	mov	r0, r3
 80038f2:	f7fd f9a3 	bl	8000c3c <__aeabi_i2f>
 80038f6:	4603      	mov	r3, r0
 80038f8:	e003      	b.n	8003902 <lecturaSensor+0x96>
		break;
	case ATRAS:
		return 0;
 80038fa:	f04f 0300 	mov.w	r3, #0
 80038fe:	e000      	b.n	8003902 <lecturaSensor+0x96>
		break;
	}
	return 15;
 8003900:	4b02      	ldr	r3, [pc, #8]	; (800390c <lecturaSensor+0xa0>)
}
 8003902:	4618      	mov	r0, r3
 8003904:	3708      	adds	r7, #8
 8003906:	46bd      	mov	sp, r7
 8003908:	bd80      	pop	{r7, pc}
 800390a:	bf00      	nop
 800390c:	41700000 	.word	0x41700000

08003910 <lecSensor>:

float lecSensor(int n, uint32_t values[10]) {
 8003910:	b580      	push	{r7, lr}
 8003912:	b086      	sub	sp, #24
 8003914:	af00      	add	r7, sp, #0
 8003916:	6078      	str	r0, [r7, #4]
 8003918:	6039      	str	r1, [r7, #0]
	long suma = 0;
 800391a:	2300      	movs	r3, #0
 800391c:	617b      	str	r3, [r7, #20]
	for (int i = 0; i < n; i++) {
 800391e:	2300      	movs	r3, #0
 8003920:	613b      	str	r3, [r7, #16]
 8003922:	e00a      	b.n	800393a <lecSensor+0x2a>
		suma = suma + values[i];
 8003924:	693b      	ldr	r3, [r7, #16]
 8003926:	009b      	lsls	r3, r3, #2
 8003928:	683a      	ldr	r2, [r7, #0]
 800392a:	4413      	add	r3, r2
 800392c:	681a      	ldr	r2, [r3, #0]
 800392e:	697b      	ldr	r3, [r7, #20]
 8003930:	4413      	add	r3, r2
 8003932:	617b      	str	r3, [r7, #20]
	for (int i = 0; i < n; i++) {
 8003934:	693b      	ldr	r3, [r7, #16]
 8003936:	3301      	adds	r3, #1
 8003938:	613b      	str	r3, [r7, #16]
 800393a:	693a      	ldr	r2, [r7, #16]
 800393c:	687b      	ldr	r3, [r7, #4]
 800393e:	429a      	cmp	r2, r3
 8003940:	dbf0      	blt.n	8003924 <lecSensor+0x14>
	}
	float adc = suma / n;
 8003942:	697a      	ldr	r2, [r7, #20]
 8003944:	687b      	ldr	r3, [r7, #4]
 8003946:	fb92 f3f3 	sdiv	r3, r2, r3
 800394a:	4618      	mov	r0, r3
 800394c:	f7fd f976 	bl	8000c3c <__aeabi_i2f>
 8003950:	4603      	mov	r3, r0
 8003952:	60bb      	str	r3, [r7, #8]
	float volts = adc * 0.0008056640; // value from sensor * (5/1024)
 8003954:	68b8      	ldr	r0, [r7, #8]
 8003956:	f7fc fd5f 	bl	8000418 <__aeabi_f2d>
 800395a:	a323      	add	r3, pc, #140	; (adr r3, 80039e8 <lecSensor+0xd8>)
 800395c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003960:	f7fc fdb2 	bl	80004c8 <__aeabi_dmul>
 8003964:	4602      	mov	r2, r0
 8003966:	460b      	mov	r3, r1
 8003968:	4610      	mov	r0, r2
 800396a:	4619      	mov	r1, r3
 800396c:	f7fd f85c 	bl	8000a28 <__aeabi_d2f>
 8003970:	4603      	mov	r3, r0
 8003972:	60fb      	str	r3, [r7, #12]
	if (volts <= 0.35)
 8003974:	68f8      	ldr	r0, [r7, #12]
 8003976:	f7fc fd4f 	bl	8000418 <__aeabi_f2d>
 800397a:	a31d      	add	r3, pc, #116	; (adr r3, 80039f0 <lecSensor+0xe0>)
 800397c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003980:	f7fd f81e 	bl	80009c0 <__aeabi_dcmple>
 8003984:	4603      	mov	r3, r0
 8003986:	2b00      	cmp	r3, #0
 8003988:	d001      	beq.n	800398e <lecSensor+0x7e>
		volts = 0.35;
 800398a:	4b1d      	ldr	r3, [pc, #116]	; (8003a00 <lecSensor+0xf0>)
 800398c:	60fb      	str	r3, [r7, #12]
	volts = pow(volts - 0.3, 0.25);/*convertimos a cm con un aproximacion grafica*/
 800398e:	68f8      	ldr	r0, [r7, #12]
 8003990:	f7fc fd42 	bl	8000418 <__aeabi_f2d>
 8003994:	a318      	add	r3, pc, #96	; (adr r3, 80039f8 <lecSensor+0xe8>)
 8003996:	e9d3 2300 	ldrd	r2, r3, [r3]
 800399a:	f7fc fbdd 	bl	8000158 <__aeabi_dsub>
 800399e:	4602      	mov	r2, r0
 80039a0:	460b      	mov	r3, r1
 80039a2:	4610      	mov	r0, r2
 80039a4:	4619      	mov	r1, r3
 80039a6:	f04f 0200 	mov.w	r2, #0
 80039aa:	4b16      	ldr	r3, [pc, #88]	; (8003a04 <lecSensor+0xf4>)
 80039ac:	f003 fbd0 	bl	8007150 <pow>
 80039b0:	4602      	mov	r2, r0
 80039b2:	460b      	mov	r3, r1
 80039b4:	4610      	mov	r0, r2
 80039b6:	4619      	mov	r1, r3
 80039b8:	f7fd f836 	bl	8000a28 <__aeabi_d2f>
 80039bc:	4603      	mov	r3, r0
 80039be:	60fb      	str	r3, [r7, #12]
	volts = 27.5 / volts; /*no preguntar por los valores*/
 80039c0:	68f9      	ldr	r1, [r7, #12]
 80039c2:	4811      	ldr	r0, [pc, #68]	; (8003a08 <lecSensor+0xf8>)
 80039c4:	f7fd fa42 	bl	8000e4c <__aeabi_fdiv>
 80039c8:	4603      	mov	r3, r0
 80039ca:	60fb      	str	r3, [r7, #12]
	volts -= 18;
 80039cc:	490f      	ldr	r1, [pc, #60]	; (8003a0c <lecSensor+0xfc>)
 80039ce:	68f8      	ldr	r0, [r7, #12]
 80039d0:	f7fd f87e 	bl	8000ad0 <__aeabi_fsub>
 80039d4:	4603      	mov	r3, r0
 80039d6:	60fb      	str	r3, [r7, #12]

	return volts;
 80039d8:	68fb      	ldr	r3, [r7, #12]

}
 80039da:	4618      	mov	r0, r3
 80039dc:	3718      	adds	r7, #24
 80039de:	46bd      	mov	sp, r7
 80039e0:	bd80      	pop	{r7, pc}
 80039e2:	bf00      	nop
 80039e4:	f3af 8000 	nop.w
 80039e8:	440a4e96 	.word	0x440a4e96
 80039ec:	3f4a6666 	.word	0x3f4a6666
 80039f0:	66666666 	.word	0x66666666
 80039f4:	3fd66666 	.word	0x3fd66666
 80039f8:	33333333 	.word	0x33333333
 80039fc:	3fd33333 	.word	0x3fd33333
 8003a00:	3eb33333 	.word	0x3eb33333
 8003a04:	3fd00000 	.word	0x3fd00000
 8003a08:	41dc0000 	.word	0x41dc0000
 8003a0c:	41900000 	.word	0x41900000

08003a10 <lecturaCNY70>:

int lecturaCNY70(int n, uint32_t values[10]) {
 8003a10:	b480      	push	{r7}
 8003a12:	b087      	sub	sp, #28
 8003a14:	af00      	add	r7, sp, #0
 8003a16:	6078      	str	r0, [r7, #4]
 8003a18:	6039      	str	r1, [r7, #0]
	long suma = 0;
 8003a1a:	2300      	movs	r3, #0
 8003a1c:	617b      	str	r3, [r7, #20]
	for (int i = 0; i < n; i++) {
 8003a1e:	2300      	movs	r3, #0
 8003a20:	613b      	str	r3, [r7, #16]
 8003a22:	e00a      	b.n	8003a3a <lecturaCNY70+0x2a>
		suma = suma + values[i];
 8003a24:	693b      	ldr	r3, [r7, #16]
 8003a26:	009b      	lsls	r3, r3, #2
 8003a28:	683a      	ldr	r2, [r7, #0]
 8003a2a:	4413      	add	r3, r2
 8003a2c:	681a      	ldr	r2, [r3, #0]
 8003a2e:	697b      	ldr	r3, [r7, #20]
 8003a30:	4413      	add	r3, r2
 8003a32:	617b      	str	r3, [r7, #20]
	for (int i = 0; i < n; i++) {
 8003a34:	693b      	ldr	r3, [r7, #16]
 8003a36:	3301      	adds	r3, #1
 8003a38:	613b      	str	r3, [r7, #16]
 8003a3a:	693a      	ldr	r2, [r7, #16]
 8003a3c:	687b      	ldr	r3, [r7, #4]
 8003a3e:	429a      	cmp	r2, r3
 8003a40:	dbf0      	blt.n	8003a24 <lecturaCNY70+0x14>
	}
	int adc = (suma / n);
 8003a42:	697a      	ldr	r2, [r7, #20]
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	fb92 f3f3 	sdiv	r3, r2, r3
 8003a4a:	60fb      	str	r3, [r7, #12]
	if (adc < 1000) {
 8003a4c:	68fb      	ldr	r3, [r7, #12]
 8003a4e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003a52:	da01      	bge.n	8003a58 <lecturaCNY70+0x48>
		return BLANCO;
 8003a54:	2300      	movs	r3, #0
 8003a56:	e000      	b.n	8003a5a <lecturaCNY70+0x4a>
	} else {
		return NEGRO;
 8003a58:	2301      	movs	r3, #1
	}
}
 8003a5a:	4618      	mov	r0, r3
 8003a5c:	371c      	adds	r7, #28
 8003a5e:	46bd      	mov	sp, r7
 8003a60:	bc80      	pop	{r7}
 8003a62:	4770      	bx	lr

08003a64 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8003a64:	b480      	push	{r7}
 8003a66:	b085      	sub	sp, #20
 8003a68:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8003a6a:	4b15      	ldr	r3, [pc, #84]	; (8003ac0 <HAL_MspInit+0x5c>)
 8003a6c:	699b      	ldr	r3, [r3, #24]
 8003a6e:	4a14      	ldr	r2, [pc, #80]	; (8003ac0 <HAL_MspInit+0x5c>)
 8003a70:	f043 0301 	orr.w	r3, r3, #1
 8003a74:	6193      	str	r3, [r2, #24]
 8003a76:	4b12      	ldr	r3, [pc, #72]	; (8003ac0 <HAL_MspInit+0x5c>)
 8003a78:	699b      	ldr	r3, [r3, #24]
 8003a7a:	f003 0301 	and.w	r3, r3, #1
 8003a7e:	60bb      	str	r3, [r7, #8]
 8003a80:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8003a82:	4b0f      	ldr	r3, [pc, #60]	; (8003ac0 <HAL_MspInit+0x5c>)
 8003a84:	69db      	ldr	r3, [r3, #28]
 8003a86:	4a0e      	ldr	r2, [pc, #56]	; (8003ac0 <HAL_MspInit+0x5c>)
 8003a88:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003a8c:	61d3      	str	r3, [r2, #28]
 8003a8e:	4b0c      	ldr	r3, [pc, #48]	; (8003ac0 <HAL_MspInit+0x5c>)
 8003a90:	69db      	ldr	r3, [r3, #28]
 8003a92:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003a96:	607b      	str	r3, [r7, #4]
 8003a98:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8003a9a:	4b0a      	ldr	r3, [pc, #40]	; (8003ac4 <HAL_MspInit+0x60>)
 8003a9c:	685b      	ldr	r3, [r3, #4]
 8003a9e:	60fb      	str	r3, [r7, #12]
 8003aa0:	68fb      	ldr	r3, [r7, #12]
 8003aa2:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8003aa6:	60fb      	str	r3, [r7, #12]
 8003aa8:	68fb      	ldr	r3, [r7, #12]
 8003aaa:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8003aae:	60fb      	str	r3, [r7, #12]
 8003ab0:	4a04      	ldr	r2, [pc, #16]	; (8003ac4 <HAL_MspInit+0x60>)
 8003ab2:	68fb      	ldr	r3, [r7, #12]
 8003ab4:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8003ab6:	bf00      	nop
 8003ab8:	3714      	adds	r7, #20
 8003aba:	46bd      	mov	sp, r7
 8003abc:	bc80      	pop	{r7}
 8003abe:	4770      	bx	lr
 8003ac0:	40021000 	.word	0x40021000
 8003ac4:	40010000 	.word	0x40010000

08003ac8 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8003ac8:	b480      	push	{r7}
 8003aca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8003acc:	e7fe      	b.n	8003acc <NMI_Handler+0x4>

08003ace <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8003ace:	b480      	push	{r7}
 8003ad0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8003ad2:	e7fe      	b.n	8003ad2 <HardFault_Handler+0x4>

08003ad4 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8003ad4:	b480      	push	{r7}
 8003ad6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8003ad8:	e7fe      	b.n	8003ad8 <MemManage_Handler+0x4>

08003ada <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8003ada:	b480      	push	{r7}
 8003adc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8003ade:	e7fe      	b.n	8003ade <BusFault_Handler+0x4>

08003ae0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8003ae0:	b480      	push	{r7}
 8003ae2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8003ae4:	e7fe      	b.n	8003ae4 <UsageFault_Handler+0x4>

08003ae6 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8003ae6:	b480      	push	{r7}
 8003ae8:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8003aea:	bf00      	nop
 8003aec:	46bd      	mov	sp, r7
 8003aee:	bc80      	pop	{r7}
 8003af0:	4770      	bx	lr

08003af2 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8003af2:	b480      	push	{r7}
 8003af4:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8003af6:	bf00      	nop
 8003af8:	46bd      	mov	sp, r7
 8003afa:	bc80      	pop	{r7}
 8003afc:	4770      	bx	lr

08003afe <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8003afe:	b480      	push	{r7}
 8003b00:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8003b02:	bf00      	nop
 8003b04:	46bd      	mov	sp, r7
 8003b06:	bc80      	pop	{r7}
 8003b08:	4770      	bx	lr

08003b0a <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8003b0a:	b580      	push	{r7, lr}
 8003b0c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8003b0e:	f000 faed 	bl	80040ec <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8003b12:	bf00      	nop
 8003b14:	bd80      	pop	{r7, pc}
	...

08003b18 <DMA1_Channel1_IRQHandler>:

/**
  * @brief This function handles DMA1 channel1 global interrupt.
  */
void DMA1_Channel1_IRQHandler(void)
{
 8003b18:	b580      	push	{r7, lr}
 8003b1a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */

  /* USER CODE END DMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 8003b1c:	4802      	ldr	r0, [pc, #8]	; (8003b28 <DMA1_Channel1_IRQHandler+0x10>)
 8003b1e:	f001 f93b 	bl	8004d98 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */

  /* USER CODE END DMA1_Channel1_IRQn 1 */
}
 8003b22:	bf00      	nop
 8003b24:	bd80      	pop	{r7, pc}
 8003b26:	bf00      	nop
 8003b28:	200000f8 	.word	0x200000f8

08003b2c <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8003b2c:	b580      	push	{r7, lr}
 8003b2e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8003b30:	4802      	ldr	r0, [pc, #8]	; (8003b3c <USART1_IRQHandler+0x10>)
 8003b32:	f002 ff15 	bl	8006960 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8003b36:	bf00      	nop
 8003b38:	bd80      	pop	{r7, pc}
 8003b3a:	bf00      	nop
 8003b3c:	20002bc4 	.word	0x20002bc4

08003b40 <SystemInit>:
 8003b40:	b480      	push	{r7}
 8003b42:	af00      	add	r7, sp, #0
 8003b44:	bf00      	nop
 8003b46:	46bd      	mov	sp, r7
 8003b48:	bc80      	pop	{r7}
 8003b4a:	4770      	bx	lr

08003b4c <MX_TIM2_Init>:
TIM_HandleTypeDef htim3;
TIM_HandleTypeDef htim4;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8003b4c:	b580      	push	{r7, lr}
 8003b4e:	b08a      	sub	sp, #40	; 0x28
 8003b50:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003b52:	f107 0320 	add.w	r3, r7, #32
 8003b56:	2200      	movs	r2, #0
 8003b58:	601a      	str	r2, [r3, #0]
 8003b5a:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8003b5c:	1d3b      	adds	r3, r7, #4
 8003b5e:	2200      	movs	r2, #0
 8003b60:	601a      	str	r2, [r3, #0]
 8003b62:	605a      	str	r2, [r3, #4]
 8003b64:	609a      	str	r2, [r3, #8]
 8003b66:	60da      	str	r2, [r3, #12]
 8003b68:	611a      	str	r2, [r3, #16]
 8003b6a:	615a      	str	r2, [r3, #20]
 8003b6c:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8003b6e:	4b28      	ldr	r3, [pc, #160]	; (8003c10 <MX_TIM2_Init+0xc4>)
 8003b70:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003b74:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 8003b76:	4b26      	ldr	r3, [pc, #152]	; (8003c10 <MX_TIM2_Init+0xc4>)
 8003b78:	2200      	movs	r2, #0
 8003b7a:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003b7c:	4b24      	ldr	r3, [pc, #144]	; (8003c10 <MX_TIM2_Init+0xc4>)
 8003b7e:	2200      	movs	r2, #0
 8003b80:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 65535;
 8003b82:	4b23      	ldr	r3, [pc, #140]	; (8003c10 <MX_TIM2_Init+0xc4>)
 8003b84:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003b88:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8003b8a:	4b21      	ldr	r3, [pc, #132]	; (8003c10 <MX_TIM2_Init+0xc4>)
 8003b8c:	2200      	movs	r2, #0
 8003b8e:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8003b90:	4b1f      	ldr	r3, [pc, #124]	; (8003c10 <MX_TIM2_Init+0xc4>)
 8003b92:	2200      	movs	r2, #0
 8003b94:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8003b96:	481e      	ldr	r0, [pc, #120]	; (8003c10 <MX_TIM2_Init+0xc4>)
 8003b98:	f002 f8b6 	bl	8005d08 <HAL_TIM_PWM_Init>
 8003b9c:	4603      	mov	r3, r0
 8003b9e:	2b00      	cmp	r3, #0
 8003ba0:	d001      	beq.n	8003ba6 <MX_TIM2_Init+0x5a>
  {
    Error_Handler();
 8003ba2:	f7ff fdcb 	bl	800373c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003ba6:	2300      	movs	r3, #0
 8003ba8:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003baa:	2300      	movs	r3, #0
 8003bac:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8003bae:	f107 0320 	add.w	r3, r7, #32
 8003bb2:	4619      	mov	r1, r3
 8003bb4:	4816      	ldr	r0, [pc, #88]	; (8003c10 <MX_TIM2_Init+0xc4>)
 8003bb6:	f002 fd95 	bl	80066e4 <HAL_TIMEx_MasterConfigSynchronization>
 8003bba:	4603      	mov	r3, r0
 8003bbc:	2b00      	cmp	r3, #0
 8003bbe:	d001      	beq.n	8003bc4 <MX_TIM2_Init+0x78>
  {
    Error_Handler();
 8003bc0:	f7ff fdbc 	bl	800373c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8003bc4:	2360      	movs	r3, #96	; 0x60
 8003bc6:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8003bc8:	2300      	movs	r3, #0
 8003bca:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8003bcc:	2300      	movs	r3, #0
 8003bce:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8003bd0:	2300      	movs	r3, #0
 8003bd2:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8003bd4:	1d3b      	adds	r3, r7, #4
 8003bd6:	2208      	movs	r2, #8
 8003bd8:	4619      	mov	r1, r3
 8003bda:	480d      	ldr	r0, [pc, #52]	; (8003c10 <MX_TIM2_Init+0xc4>)
 8003bdc:	f002 fab6 	bl	800614c <HAL_TIM_PWM_ConfigChannel>
 8003be0:	4603      	mov	r3, r0
 8003be2:	2b00      	cmp	r3, #0
 8003be4:	d001      	beq.n	8003bea <MX_TIM2_Init+0x9e>
  {
    Error_Handler();
 8003be6:	f7ff fda9 	bl	800373c <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8003bea:	1d3b      	adds	r3, r7, #4
 8003bec:	220c      	movs	r2, #12
 8003bee:	4619      	mov	r1, r3
 8003bf0:	4807      	ldr	r0, [pc, #28]	; (8003c10 <MX_TIM2_Init+0xc4>)
 8003bf2:	f002 faab 	bl	800614c <HAL_TIM_PWM_ConfigChannel>
 8003bf6:	4603      	mov	r3, r0
 8003bf8:	2b00      	cmp	r3, #0
 8003bfa:	d001      	beq.n	8003c00 <MX_TIM2_Init+0xb4>
  {
    Error_Handler();
 8003bfc:	f7ff fd9e 	bl	800373c <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8003c00:	4803      	ldr	r0, [pc, #12]	; (8003c10 <MX_TIM2_Init+0xc4>)
 8003c02:	f000 f943 	bl	8003e8c <HAL_TIM_MspPostInit>

}
 8003c06:	bf00      	nop
 8003c08:	3728      	adds	r7, #40	; 0x28
 8003c0a:	46bd      	mov	sp, r7
 8003c0c:	bd80      	pop	{r7, pc}
 8003c0e:	bf00      	nop
 8003c10:	20002aec 	.word	0x20002aec

08003c14 <MX_TIM3_Init>:
/* TIM3 init function */
void MX_TIM3_Init(void)
{
 8003c14:	b580      	push	{r7, lr}
 8003c16:	b08c      	sub	sp, #48	; 0x30
 8003c18:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8003c1a:	f107 030c 	add.w	r3, r7, #12
 8003c1e:	2224      	movs	r2, #36	; 0x24
 8003c20:	2100      	movs	r1, #0
 8003c22:	4618      	mov	r0, r3
 8003c24:	f004 f9a0 	bl	8007f68 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003c28:	1d3b      	adds	r3, r7, #4
 8003c2a:	2200      	movs	r2, #0
 8003c2c:	601a      	str	r2, [r3, #0]
 8003c2e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8003c30:	4b20      	ldr	r3, [pc, #128]	; (8003cb4 <MX_TIM3_Init+0xa0>)
 8003c32:	4a21      	ldr	r2, [pc, #132]	; (8003cb8 <MX_TIM3_Init+0xa4>)
 8003c34:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 0;
 8003c36:	4b1f      	ldr	r3, [pc, #124]	; (8003cb4 <MX_TIM3_Init+0xa0>)
 8003c38:	2200      	movs	r2, #0
 8003c3a:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003c3c:	4b1d      	ldr	r3, [pc, #116]	; (8003cb4 <MX_TIM3_Init+0xa0>)
 8003c3e:	2200      	movs	r2, #0
 8003c40:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 65535;
 8003c42:	4b1c      	ldr	r3, [pc, #112]	; (8003cb4 <MX_TIM3_Init+0xa0>)
 8003c44:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003c48:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8003c4a:	4b1a      	ldr	r3, [pc, #104]	; (8003cb4 <MX_TIM3_Init+0xa0>)
 8003c4c:	2200      	movs	r2, #0
 8003c4e:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8003c50:	4b18      	ldr	r3, [pc, #96]	; (8003cb4 <MX_TIM3_Init+0xa0>)
 8003c52:	2200      	movs	r2, #0
 8003c54:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8003c56:	2303      	movs	r3, #3
 8003c58:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8003c5a:	2300      	movs	r3, #0
 8003c5c:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8003c5e:	2301      	movs	r3, #1
 8003c60:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8003c62:	2300      	movs	r3, #0
 8003c64:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 10;
 8003c66:	230a      	movs	r3, #10
 8003c68:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8003c6a:	2300      	movs	r3, #0
 8003c6c:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8003c6e:	2301      	movs	r3, #1
 8003c70:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8003c72:	2300      	movs	r3, #0
 8003c74:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 0;
 8003c76:	2300      	movs	r3, #0
 8003c78:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 8003c7a:	f107 030c 	add.w	r3, r7, #12
 8003c7e:	4619      	mov	r1, r3
 8003c80:	480c      	ldr	r0, [pc, #48]	; (8003cb4 <MX_TIM3_Init+0xa0>)
 8003c82:	f002 f933 	bl	8005eec <HAL_TIM_Encoder_Init>
 8003c86:	4603      	mov	r3, r0
 8003c88:	2b00      	cmp	r3, #0
 8003c8a:	d001      	beq.n	8003c90 <MX_TIM3_Init+0x7c>
  {
    Error_Handler();
 8003c8c:	f7ff fd56 	bl	800373c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003c90:	2300      	movs	r3, #0
 8003c92:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003c94:	2300      	movs	r3, #0
 8003c96:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8003c98:	1d3b      	adds	r3, r7, #4
 8003c9a:	4619      	mov	r1, r3
 8003c9c:	4805      	ldr	r0, [pc, #20]	; (8003cb4 <MX_TIM3_Init+0xa0>)
 8003c9e:	f002 fd21 	bl	80066e4 <HAL_TIMEx_MasterConfigSynchronization>
 8003ca2:	4603      	mov	r3, r0
 8003ca4:	2b00      	cmp	r3, #0
 8003ca6:	d001      	beq.n	8003cac <MX_TIM3_Init+0x98>
  {
    Error_Handler();
 8003ca8:	f7ff fd48 	bl	800373c <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8003cac:	bf00      	nop
 8003cae:	3730      	adds	r7, #48	; 0x30
 8003cb0:	46bd      	mov	sp, r7
 8003cb2:	bd80      	pop	{r7, pc}
 8003cb4:	20002b34 	.word	0x20002b34
 8003cb8:	40000400 	.word	0x40000400

08003cbc <MX_TIM4_Init>:
/* TIM4 init function */
void MX_TIM4_Init(void)
{
 8003cbc:	b580      	push	{r7, lr}
 8003cbe:	b08c      	sub	sp, #48	; 0x30
 8003cc0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8003cc2:	f107 030c 	add.w	r3, r7, #12
 8003cc6:	2224      	movs	r2, #36	; 0x24
 8003cc8:	2100      	movs	r1, #0
 8003cca:	4618      	mov	r0, r3
 8003ccc:	f004 f94c 	bl	8007f68 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003cd0:	1d3b      	adds	r3, r7, #4
 8003cd2:	2200      	movs	r2, #0
 8003cd4:	601a      	str	r2, [r3, #0]
 8003cd6:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8003cd8:	4b20      	ldr	r3, [pc, #128]	; (8003d5c <MX_TIM4_Init+0xa0>)
 8003cda:	4a21      	ldr	r2, [pc, #132]	; (8003d60 <MX_TIM4_Init+0xa4>)
 8003cdc:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 8003cde:	4b1f      	ldr	r3, [pc, #124]	; (8003d5c <MX_TIM4_Init+0xa0>)
 8003ce0:	2200      	movs	r2, #0
 8003ce2:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003ce4:	4b1d      	ldr	r3, [pc, #116]	; (8003d5c <MX_TIM4_Init+0xa0>)
 8003ce6:	2200      	movs	r2, #0
 8003ce8:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 8003cea:	4b1c      	ldr	r3, [pc, #112]	; (8003d5c <MX_TIM4_Init+0xa0>)
 8003cec:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003cf0:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8003cf2:	4b1a      	ldr	r3, [pc, #104]	; (8003d5c <MX_TIM4_Init+0xa0>)
 8003cf4:	2200      	movs	r2, #0
 8003cf6:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8003cf8:	4b18      	ldr	r3, [pc, #96]	; (8003d5c <MX_TIM4_Init+0xa0>)
 8003cfa:	2280      	movs	r2, #128	; 0x80
 8003cfc:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8003cfe:	2303      	movs	r3, #3
 8003d00:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8003d02:	2300      	movs	r3, #0
 8003d04:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8003d06:	2301      	movs	r3, #1
 8003d08:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8003d0a:	2300      	movs	r3, #0
 8003d0c:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 10;
 8003d0e:	230a      	movs	r3, #10
 8003d10:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8003d12:	2300      	movs	r3, #0
 8003d14:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8003d16:	2301      	movs	r3, #1
 8003d18:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8003d1a:	2300      	movs	r3, #0
 8003d1c:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 0;
 8003d1e:	2300      	movs	r3, #0
 8003d20:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 8003d22:	f107 030c 	add.w	r3, r7, #12
 8003d26:	4619      	mov	r1, r3
 8003d28:	480c      	ldr	r0, [pc, #48]	; (8003d5c <MX_TIM4_Init+0xa0>)
 8003d2a:	f002 f8df 	bl	8005eec <HAL_TIM_Encoder_Init>
 8003d2e:	4603      	mov	r3, r0
 8003d30:	2b00      	cmp	r3, #0
 8003d32:	d001      	beq.n	8003d38 <MX_TIM4_Init+0x7c>
  {
    Error_Handler();
 8003d34:	f7ff fd02 	bl	800373c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003d38:	2300      	movs	r3, #0
 8003d3a:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003d3c:	2300      	movs	r3, #0
 8003d3e:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8003d40:	1d3b      	adds	r3, r7, #4
 8003d42:	4619      	mov	r1, r3
 8003d44:	4805      	ldr	r0, [pc, #20]	; (8003d5c <MX_TIM4_Init+0xa0>)
 8003d46:	f002 fccd 	bl	80066e4 <HAL_TIMEx_MasterConfigSynchronization>
 8003d4a:	4603      	mov	r3, r0
 8003d4c:	2b00      	cmp	r3, #0
 8003d4e:	d001      	beq.n	8003d54 <MX_TIM4_Init+0x98>
  {
    Error_Handler();
 8003d50:	f7ff fcf4 	bl	800373c <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 8003d54:	bf00      	nop
 8003d56:	3730      	adds	r7, #48	; 0x30
 8003d58:	46bd      	mov	sp, r7
 8003d5a:	bd80      	pop	{r7, pc}
 8003d5c:	20002b7c 	.word	0x20002b7c
 8003d60:	40000800 	.word	0x40000800

08003d64 <HAL_TIM_PWM_MspInit>:

void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
{
 8003d64:	b480      	push	{r7}
 8003d66:	b085      	sub	sp, #20
 8003d68:	af00      	add	r7, sp, #0
 8003d6a:	6078      	str	r0, [r7, #4]

  if(tim_pwmHandle->Instance==TIM2)
 8003d6c:	687b      	ldr	r3, [r7, #4]
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003d74:	d10b      	bne.n	8003d8e <HAL_TIM_PWM_MspInit+0x2a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8003d76:	4b08      	ldr	r3, [pc, #32]	; (8003d98 <HAL_TIM_PWM_MspInit+0x34>)
 8003d78:	69db      	ldr	r3, [r3, #28]
 8003d7a:	4a07      	ldr	r2, [pc, #28]	; (8003d98 <HAL_TIM_PWM_MspInit+0x34>)
 8003d7c:	f043 0301 	orr.w	r3, r3, #1
 8003d80:	61d3      	str	r3, [r2, #28]
 8003d82:	4b05      	ldr	r3, [pc, #20]	; (8003d98 <HAL_TIM_PWM_MspInit+0x34>)
 8003d84:	69db      	ldr	r3, [r3, #28]
 8003d86:	f003 0301 	and.w	r3, r3, #1
 8003d8a:	60fb      	str	r3, [r7, #12]
 8003d8c:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
}
 8003d8e:	bf00      	nop
 8003d90:	3714      	adds	r7, #20
 8003d92:	46bd      	mov	sp, r7
 8003d94:	bc80      	pop	{r7}
 8003d96:	4770      	bx	lr
 8003d98:	40021000 	.word	0x40021000

08003d9c <HAL_TIM_Encoder_MspInit>:

void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
{
 8003d9c:	b580      	push	{r7, lr}
 8003d9e:	b08a      	sub	sp, #40	; 0x28
 8003da0:	af00      	add	r7, sp, #0
 8003da2:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003da4:	f107 0318 	add.w	r3, r7, #24
 8003da8:	2200      	movs	r2, #0
 8003daa:	601a      	str	r2, [r3, #0]
 8003dac:	605a      	str	r2, [r3, #4]
 8003dae:	609a      	str	r2, [r3, #8]
 8003db0:	60da      	str	r2, [r3, #12]
  if(tim_encoderHandle->Instance==TIM3)
 8003db2:	687b      	ldr	r3, [r7, #4]
 8003db4:	681b      	ldr	r3, [r3, #0]
 8003db6:	4a30      	ldr	r2, [pc, #192]	; (8003e78 <HAL_TIM_Encoder_MspInit+0xdc>)
 8003db8:	4293      	cmp	r3, r2
 8003dba:	d124      	bne.n	8003e06 <HAL_TIM_Encoder_MspInit+0x6a>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* TIM3 clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 8003dbc:	4b2f      	ldr	r3, [pc, #188]	; (8003e7c <HAL_TIM_Encoder_MspInit+0xe0>)
 8003dbe:	69db      	ldr	r3, [r3, #28]
 8003dc0:	4a2e      	ldr	r2, [pc, #184]	; (8003e7c <HAL_TIM_Encoder_MspInit+0xe0>)
 8003dc2:	f043 0302 	orr.w	r3, r3, #2
 8003dc6:	61d3      	str	r3, [r2, #28]
 8003dc8:	4b2c      	ldr	r3, [pc, #176]	; (8003e7c <HAL_TIM_Encoder_MspInit+0xe0>)
 8003dca:	69db      	ldr	r3, [r3, #28]
 8003dcc:	f003 0302 	and.w	r3, r3, #2
 8003dd0:	617b      	str	r3, [r7, #20]
 8003dd2:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003dd4:	4b29      	ldr	r3, [pc, #164]	; (8003e7c <HAL_TIM_Encoder_MspInit+0xe0>)
 8003dd6:	699b      	ldr	r3, [r3, #24]
 8003dd8:	4a28      	ldr	r2, [pc, #160]	; (8003e7c <HAL_TIM_Encoder_MspInit+0xe0>)
 8003dda:	f043 0304 	orr.w	r3, r3, #4
 8003dde:	6193      	str	r3, [r2, #24]
 8003de0:	4b26      	ldr	r3, [pc, #152]	; (8003e7c <HAL_TIM_Encoder_MspInit+0xe0>)
 8003de2:	699b      	ldr	r3, [r3, #24]
 8003de4:	f003 0304 	and.w	r3, r3, #4
 8003de8:	613b      	str	r3, [r7, #16]
 8003dea:	693b      	ldr	r3, [r7, #16]
    /**TIM3 GPIO Configuration
    PA6     ------> TIM3_CH1
    PA7     ------> TIM3_CH2
    */
    GPIO_InitStruct.Pin = MB1_Pin|MB2_Pin;
 8003dec:	23c0      	movs	r3, #192	; 0xc0
 8003dee:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8003df0:	2300      	movs	r3, #0
 8003df2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003df4:	2300      	movs	r3, #0
 8003df6:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003df8:	f107 0318 	add.w	r3, r7, #24
 8003dfc:	4619      	mov	r1, r3
 8003dfe:	4820      	ldr	r0, [pc, #128]	; (8003e80 <HAL_TIM_Encoder_MspInit+0xe4>)
 8003e00:	f001 f8fe 	bl	8005000 <HAL_GPIO_Init>

  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }
}
 8003e04:	e034      	b.n	8003e70 <HAL_TIM_Encoder_MspInit+0xd4>
  else if(tim_encoderHandle->Instance==TIM4)
 8003e06:	687b      	ldr	r3, [r7, #4]
 8003e08:	681b      	ldr	r3, [r3, #0]
 8003e0a:	4a1e      	ldr	r2, [pc, #120]	; (8003e84 <HAL_TIM_Encoder_MspInit+0xe8>)
 8003e0c:	4293      	cmp	r3, r2
 8003e0e:	d12f      	bne.n	8003e70 <HAL_TIM_Encoder_MspInit+0xd4>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8003e10:	4b1a      	ldr	r3, [pc, #104]	; (8003e7c <HAL_TIM_Encoder_MspInit+0xe0>)
 8003e12:	69db      	ldr	r3, [r3, #28]
 8003e14:	4a19      	ldr	r2, [pc, #100]	; (8003e7c <HAL_TIM_Encoder_MspInit+0xe0>)
 8003e16:	f043 0304 	orr.w	r3, r3, #4
 8003e1a:	61d3      	str	r3, [r2, #28]
 8003e1c:	4b17      	ldr	r3, [pc, #92]	; (8003e7c <HAL_TIM_Encoder_MspInit+0xe0>)
 8003e1e:	69db      	ldr	r3, [r3, #28]
 8003e20:	f003 0304 	and.w	r3, r3, #4
 8003e24:	60fb      	str	r3, [r7, #12]
 8003e26:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003e28:	4b14      	ldr	r3, [pc, #80]	; (8003e7c <HAL_TIM_Encoder_MspInit+0xe0>)
 8003e2a:	699b      	ldr	r3, [r3, #24]
 8003e2c:	4a13      	ldr	r2, [pc, #76]	; (8003e7c <HAL_TIM_Encoder_MspInit+0xe0>)
 8003e2e:	f043 0308 	orr.w	r3, r3, #8
 8003e32:	6193      	str	r3, [r2, #24]
 8003e34:	4b11      	ldr	r3, [pc, #68]	; (8003e7c <HAL_TIM_Encoder_MspInit+0xe0>)
 8003e36:	699b      	ldr	r3, [r3, #24]
 8003e38:	f003 0308 	and.w	r3, r3, #8
 8003e3c:	60bb      	str	r3, [r7, #8]
 8003e3e:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = MA2_Pin;
 8003e40:	2340      	movs	r3, #64	; 0x40
 8003e42:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8003e44:	2300      	movs	r3, #0
 8003e46:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003e48:	2300      	movs	r3, #0
 8003e4a:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(MA2_GPIO_Port, &GPIO_InitStruct);
 8003e4c:	f107 0318 	add.w	r3, r7, #24
 8003e50:	4619      	mov	r1, r3
 8003e52:	480d      	ldr	r0, [pc, #52]	; (8003e88 <HAL_TIM_Encoder_MspInit+0xec>)
 8003e54:	f001 f8d4 	bl	8005000 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = MA1_Pin;
 8003e58:	2380      	movs	r3, #128	; 0x80
 8003e5a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8003e5c:	2300      	movs	r3, #0
 8003e5e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003e60:	2300      	movs	r3, #0
 8003e62:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(MA1_GPIO_Port, &GPIO_InitStruct);
 8003e64:	f107 0318 	add.w	r3, r7, #24
 8003e68:	4619      	mov	r1, r3
 8003e6a:	4807      	ldr	r0, [pc, #28]	; (8003e88 <HAL_TIM_Encoder_MspInit+0xec>)
 8003e6c:	f001 f8c8 	bl	8005000 <HAL_GPIO_Init>
}
 8003e70:	bf00      	nop
 8003e72:	3728      	adds	r7, #40	; 0x28
 8003e74:	46bd      	mov	sp, r7
 8003e76:	bd80      	pop	{r7, pc}
 8003e78:	40000400 	.word	0x40000400
 8003e7c:	40021000 	.word	0x40021000
 8003e80:	40010800 	.word	0x40010800
 8003e84:	40000800 	.word	0x40000800
 8003e88:	40010c00 	.word	0x40010c00

08003e8c <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 8003e8c:	b580      	push	{r7, lr}
 8003e8e:	b088      	sub	sp, #32
 8003e90:	af00      	add	r7, sp, #0
 8003e92:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003e94:	f107 030c 	add.w	r3, r7, #12
 8003e98:	2200      	movs	r2, #0
 8003e9a:	601a      	str	r2, [r3, #0]
 8003e9c:	605a      	str	r2, [r3, #4]
 8003e9e:	609a      	str	r2, [r3, #8]
 8003ea0:	60da      	str	r2, [r3, #12]
  if(timHandle->Instance==TIM2)
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	681b      	ldr	r3, [r3, #0]
 8003ea6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003eaa:	d12a      	bne.n	8003f02 <HAL_TIM_MspPostInit+0x76>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003eac:	4b17      	ldr	r3, [pc, #92]	; (8003f0c <HAL_TIM_MspPostInit+0x80>)
 8003eae:	699b      	ldr	r3, [r3, #24]
 8003eb0:	4a16      	ldr	r2, [pc, #88]	; (8003f0c <HAL_TIM_MspPostInit+0x80>)
 8003eb2:	f043 0308 	orr.w	r3, r3, #8
 8003eb6:	6193      	str	r3, [r2, #24]
 8003eb8:	4b14      	ldr	r3, [pc, #80]	; (8003f0c <HAL_TIM_MspPostInit+0x80>)
 8003eba:	699b      	ldr	r3, [r3, #24]
 8003ebc:	f003 0308 	and.w	r3, r3, #8
 8003ec0:	60bb      	str	r3, [r7, #8]
 8003ec2:	68bb      	ldr	r3, [r7, #8]
    /**TIM2 GPIO Configuration
    PB10     ------> TIM2_CH3
    PB11     ------> TIM2_CH4
    */
    GPIO_InitStruct.Pin = PWMA_Pin|PWMB_Pin;
 8003ec4:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003ec8:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003eca:	2302      	movs	r3, #2
 8003ecc:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003ece:	2302      	movs	r3, #2
 8003ed0:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003ed2:	f107 030c 	add.w	r3, r7, #12
 8003ed6:	4619      	mov	r1, r3
 8003ed8:	480d      	ldr	r0, [pc, #52]	; (8003f10 <HAL_TIM_MspPostInit+0x84>)
 8003eda:	f001 f891 	bl	8005000 <HAL_GPIO_Init>

    __HAL_AFIO_REMAP_TIM2_PARTIAL_2();
 8003ede:	4b0d      	ldr	r3, [pc, #52]	; (8003f14 <HAL_TIM_MspPostInit+0x88>)
 8003ee0:	685b      	ldr	r3, [r3, #4]
 8003ee2:	61fb      	str	r3, [r7, #28]
 8003ee4:	69fb      	ldr	r3, [r7, #28]
 8003ee6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003eea:	61fb      	str	r3, [r7, #28]
 8003eec:	69fb      	ldr	r3, [r7, #28]
 8003eee:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 8003ef2:	61fb      	str	r3, [r7, #28]
 8003ef4:	69fb      	ldr	r3, [r7, #28]
 8003ef6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8003efa:	61fb      	str	r3, [r7, #28]
 8003efc:	4a05      	ldr	r2, [pc, #20]	; (8003f14 <HAL_TIM_MspPostInit+0x88>)
 8003efe:	69fb      	ldr	r3, [r7, #28]
 8003f00:	6053      	str	r3, [r2, #4]
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 8003f02:	bf00      	nop
 8003f04:	3720      	adds	r7, #32
 8003f06:	46bd      	mov	sp, r7
 8003f08:	bd80      	pop	{r7, pc}
 8003f0a:	bf00      	nop
 8003f0c:	40021000 	.word	0x40021000
 8003f10:	40010c00 	.word	0x40010c00
 8003f14:	40010000 	.word	0x40010000

08003f18 <MX_USART1_UART_Init>:
UART_HandleTypeDef huart1;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 8003f18:	b580      	push	{r7, lr}
 8003f1a:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8003f1c:	4b11      	ldr	r3, [pc, #68]	; (8003f64 <MX_USART1_UART_Init+0x4c>)
 8003f1e:	4a12      	ldr	r2, [pc, #72]	; (8003f68 <MX_USART1_UART_Init+0x50>)
 8003f20:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 38400;
 8003f22:	4b10      	ldr	r3, [pc, #64]	; (8003f64 <MX_USART1_UART_Init+0x4c>)
 8003f24:	f44f 4216 	mov.w	r2, #38400	; 0x9600
 8003f28:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8003f2a:	4b0e      	ldr	r3, [pc, #56]	; (8003f64 <MX_USART1_UART_Init+0x4c>)
 8003f2c:	2200      	movs	r2, #0
 8003f2e:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8003f30:	4b0c      	ldr	r3, [pc, #48]	; (8003f64 <MX_USART1_UART_Init+0x4c>)
 8003f32:	2200      	movs	r2, #0
 8003f34:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8003f36:	4b0b      	ldr	r3, [pc, #44]	; (8003f64 <MX_USART1_UART_Init+0x4c>)
 8003f38:	2200      	movs	r2, #0
 8003f3a:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8003f3c:	4b09      	ldr	r3, [pc, #36]	; (8003f64 <MX_USART1_UART_Init+0x4c>)
 8003f3e:	220c      	movs	r2, #12
 8003f40:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8003f42:	4b08      	ldr	r3, [pc, #32]	; (8003f64 <MX_USART1_UART_Init+0x4c>)
 8003f44:	2200      	movs	r2, #0
 8003f46:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8003f48:	4b06      	ldr	r3, [pc, #24]	; (8003f64 <MX_USART1_UART_Init+0x4c>)
 8003f4a:	2200      	movs	r2, #0
 8003f4c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8003f4e:	4805      	ldr	r0, [pc, #20]	; (8003f64 <MX_USART1_UART_Init+0x4c>)
 8003f50:	f002 fc26 	bl	80067a0 <HAL_UART_Init>
 8003f54:	4603      	mov	r3, r0
 8003f56:	2b00      	cmp	r3, #0
 8003f58:	d001      	beq.n	8003f5e <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8003f5a:	f7ff fbef 	bl	800373c <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8003f5e:	bf00      	nop
 8003f60:	bd80      	pop	{r7, pc}
 8003f62:	bf00      	nop
 8003f64:	20002bc4 	.word	0x20002bc4
 8003f68:	40013800 	.word	0x40013800

08003f6c <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8003f6c:	b580      	push	{r7, lr}
 8003f6e:	b088      	sub	sp, #32
 8003f70:	af00      	add	r7, sp, #0
 8003f72:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003f74:	f107 0310 	add.w	r3, r7, #16
 8003f78:	2200      	movs	r2, #0
 8003f7a:	601a      	str	r2, [r3, #0]
 8003f7c:	605a      	str	r2, [r3, #4]
 8003f7e:	609a      	str	r2, [r3, #8]
 8003f80:	60da      	str	r2, [r3, #12]
  if(uartHandle->Instance==USART1)
 8003f82:	687b      	ldr	r3, [r7, #4]
 8003f84:	681b      	ldr	r3, [r3, #0]
 8003f86:	4a20      	ldr	r2, [pc, #128]	; (8004008 <HAL_UART_MspInit+0x9c>)
 8003f88:	4293      	cmp	r3, r2
 8003f8a:	d139      	bne.n	8004000 <HAL_UART_MspInit+0x94>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* USART1 clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8003f8c:	4b1f      	ldr	r3, [pc, #124]	; (800400c <HAL_UART_MspInit+0xa0>)
 8003f8e:	699b      	ldr	r3, [r3, #24]
 8003f90:	4a1e      	ldr	r2, [pc, #120]	; (800400c <HAL_UART_MspInit+0xa0>)
 8003f92:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003f96:	6193      	str	r3, [r2, #24]
 8003f98:	4b1c      	ldr	r3, [pc, #112]	; (800400c <HAL_UART_MspInit+0xa0>)
 8003f9a:	699b      	ldr	r3, [r3, #24]
 8003f9c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003fa0:	60fb      	str	r3, [r7, #12]
 8003fa2:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003fa4:	4b19      	ldr	r3, [pc, #100]	; (800400c <HAL_UART_MspInit+0xa0>)
 8003fa6:	699b      	ldr	r3, [r3, #24]
 8003fa8:	4a18      	ldr	r2, [pc, #96]	; (800400c <HAL_UART_MspInit+0xa0>)
 8003faa:	f043 0304 	orr.w	r3, r3, #4
 8003fae:	6193      	str	r3, [r2, #24]
 8003fb0:	4b16      	ldr	r3, [pc, #88]	; (800400c <HAL_UART_MspInit+0xa0>)
 8003fb2:	699b      	ldr	r3, [r3, #24]
 8003fb4:	f003 0304 	and.w	r3, r3, #4
 8003fb8:	60bb      	str	r3, [r7, #8]
 8003fba:	68bb      	ldr	r3, [r7, #8]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8003fbc:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003fc0:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003fc2:	2302      	movs	r3, #2
 8003fc4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8003fc6:	2303      	movs	r3, #3
 8003fc8:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003fca:	f107 0310 	add.w	r3, r7, #16
 8003fce:	4619      	mov	r1, r3
 8003fd0:	480f      	ldr	r0, [pc, #60]	; (8004010 <HAL_UART_MspInit+0xa4>)
 8003fd2:	f001 f815 	bl	8005000 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8003fd6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003fda:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8003fdc:	2300      	movs	r3, #0
 8003fde:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003fe0:	2300      	movs	r3, #0
 8003fe2:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003fe4:	f107 0310 	add.w	r3, r7, #16
 8003fe8:	4619      	mov	r1, r3
 8003fea:	4809      	ldr	r0, [pc, #36]	; (8004010 <HAL_UART_MspInit+0xa4>)
 8003fec:	f001 f808 	bl	8005000 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 8003ff0:	2200      	movs	r2, #0
 8003ff2:	2100      	movs	r1, #0
 8003ff4:	2025      	movs	r0, #37	; 0x25
 8003ff6:	f000 fd2e 	bl	8004a56 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8003ffa:	2025      	movs	r0, #37	; 0x25
 8003ffc:	f000 fd47 	bl	8004a8e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 8004000:	bf00      	nop
 8004002:	3720      	adds	r7, #32
 8004004:	46bd      	mov	sp, r7
 8004006:	bd80      	pop	{r7, pc}
 8004008:	40013800 	.word	0x40013800
 800400c:	40021000 	.word	0x40021000
 8004010:	40010800 	.word	0x40010800

08004014 <Reset_Handler>:
 8004014:	480c      	ldr	r0, [pc, #48]	; (8004048 <LoopFillZerobss+0x12>)
 8004016:	490d      	ldr	r1, [pc, #52]	; (800404c <LoopFillZerobss+0x16>)
 8004018:	4a0d      	ldr	r2, [pc, #52]	; (8004050 <LoopFillZerobss+0x1a>)
 800401a:	2300      	movs	r3, #0
 800401c:	e002      	b.n	8004024 <LoopCopyDataInit>

0800401e <CopyDataInit>:
 800401e:	58d4      	ldr	r4, [r2, r3]
 8004020:	50c4      	str	r4, [r0, r3]
 8004022:	3304      	adds	r3, #4

08004024 <LoopCopyDataInit>:
 8004024:	18c4      	adds	r4, r0, r3
 8004026:	428c      	cmp	r4, r1
 8004028:	d3f9      	bcc.n	800401e <CopyDataInit>
 800402a:	4a0a      	ldr	r2, [pc, #40]	; (8004054 <LoopFillZerobss+0x1e>)
 800402c:	4c0a      	ldr	r4, [pc, #40]	; (8004058 <LoopFillZerobss+0x22>)
 800402e:	2300      	movs	r3, #0
 8004030:	e001      	b.n	8004036 <LoopFillZerobss>

08004032 <FillZerobss>:
 8004032:	6013      	str	r3, [r2, #0]
 8004034:	3204      	adds	r2, #4

08004036 <LoopFillZerobss>:
 8004036:	42a2      	cmp	r2, r4
 8004038:	d3fb      	bcc.n	8004032 <FillZerobss>
 800403a:	f7ff fd81 	bl	8003b40 <SystemInit>
 800403e:	f003 ff6f 	bl	8007f20 <__libc_init_array>
 8004042:	f7fd f9bd 	bl	80013c0 <main>
 8004046:	4770      	bx	lr
 8004048:	20000000 	.word	0x20000000
 800404c:	200000ac 	.word	0x200000ac
 8004050:	08007ff0 	.word	0x08007ff0
 8004054:	200000ac 	.word	0x200000ac
 8004058:	20002c0c 	.word	0x20002c0c

0800405c <ADC1_2_IRQHandler>:
 800405c:	e7fe      	b.n	800405c <ADC1_2_IRQHandler>
	...

08004060 <HAL_Init>:
 8004060:	b580      	push	{r7, lr}
 8004062:	af00      	add	r7, sp, #0
 8004064:	4b08      	ldr	r3, [pc, #32]	; (8004088 <HAL_Init+0x28>)
 8004066:	681b      	ldr	r3, [r3, #0]
 8004068:	4a07      	ldr	r2, [pc, #28]	; (8004088 <HAL_Init+0x28>)
 800406a:	f043 0310 	orr.w	r3, r3, #16
 800406e:	6013      	str	r3, [r2, #0]
 8004070:	2003      	movs	r0, #3
 8004072:	f000 fce5 	bl	8004a40 <HAL_NVIC_SetPriorityGrouping>
 8004076:	200f      	movs	r0, #15
 8004078:	f000 f808 	bl	800408c <HAL_InitTick>
 800407c:	f7ff fcf2 	bl	8003a64 <HAL_MspInit>
 8004080:	2300      	movs	r3, #0
 8004082:	4618      	mov	r0, r3
 8004084:	bd80      	pop	{r7, pc}
 8004086:	bf00      	nop
 8004088:	40022000 	.word	0x40022000

0800408c <HAL_InitTick>:
 800408c:	b580      	push	{r7, lr}
 800408e:	b082      	sub	sp, #8
 8004090:	af00      	add	r7, sp, #0
 8004092:	6078      	str	r0, [r7, #4]
 8004094:	4b12      	ldr	r3, [pc, #72]	; (80040e0 <HAL_InitTick+0x54>)
 8004096:	681a      	ldr	r2, [r3, #0]
 8004098:	4b12      	ldr	r3, [pc, #72]	; (80040e4 <HAL_InitTick+0x58>)
 800409a:	781b      	ldrb	r3, [r3, #0]
 800409c:	4619      	mov	r1, r3
 800409e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80040a2:	fbb3 f3f1 	udiv	r3, r3, r1
 80040a6:	fbb2 f3f3 	udiv	r3, r2, r3
 80040aa:	4618      	mov	r0, r3
 80040ac:	f000 fcfd 	bl	8004aaa <HAL_SYSTICK_Config>
 80040b0:	4603      	mov	r3, r0
 80040b2:	2b00      	cmp	r3, #0
 80040b4:	d001      	beq.n	80040ba <HAL_InitTick+0x2e>
 80040b6:	2301      	movs	r3, #1
 80040b8:	e00e      	b.n	80040d8 <HAL_InitTick+0x4c>
 80040ba:	687b      	ldr	r3, [r7, #4]
 80040bc:	2b0f      	cmp	r3, #15
 80040be:	d80a      	bhi.n	80040d6 <HAL_InitTick+0x4a>
 80040c0:	2200      	movs	r2, #0
 80040c2:	6879      	ldr	r1, [r7, #4]
 80040c4:	f04f 30ff 	mov.w	r0, #4294967295
 80040c8:	f000 fcc5 	bl	8004a56 <HAL_NVIC_SetPriority>
 80040cc:	4a06      	ldr	r2, [pc, #24]	; (80040e8 <HAL_InitTick+0x5c>)
 80040ce:	687b      	ldr	r3, [r7, #4]
 80040d0:	6013      	str	r3, [r2, #0]
 80040d2:	2300      	movs	r3, #0
 80040d4:	e000      	b.n	80040d8 <HAL_InitTick+0x4c>
 80040d6:	2301      	movs	r3, #1
 80040d8:	4618      	mov	r0, r3
 80040da:	3708      	adds	r7, #8
 80040dc:	46bd      	mov	sp, r7
 80040de:	bd80      	pop	{r7, pc}
 80040e0:	2000003c 	.word	0x2000003c
 80040e4:	20000044 	.word	0x20000044
 80040e8:	20000040 	.word	0x20000040

080040ec <HAL_IncTick>:
 80040ec:	b480      	push	{r7}
 80040ee:	af00      	add	r7, sp, #0
 80040f0:	4b05      	ldr	r3, [pc, #20]	; (8004108 <HAL_IncTick+0x1c>)
 80040f2:	781b      	ldrb	r3, [r3, #0]
 80040f4:	461a      	mov	r2, r3
 80040f6:	4b05      	ldr	r3, [pc, #20]	; (800410c <HAL_IncTick+0x20>)
 80040f8:	681b      	ldr	r3, [r3, #0]
 80040fa:	4413      	add	r3, r2
 80040fc:	4a03      	ldr	r2, [pc, #12]	; (800410c <HAL_IncTick+0x20>)
 80040fe:	6013      	str	r3, [r2, #0]
 8004100:	bf00      	nop
 8004102:	46bd      	mov	sp, r7
 8004104:	bc80      	pop	{r7}
 8004106:	4770      	bx	lr
 8004108:	20000044 	.word	0x20000044
 800410c:	20002c08 	.word	0x20002c08

08004110 <HAL_GetTick>:
 8004110:	b480      	push	{r7}
 8004112:	af00      	add	r7, sp, #0
 8004114:	4b02      	ldr	r3, [pc, #8]	; (8004120 <HAL_GetTick+0x10>)
 8004116:	681b      	ldr	r3, [r3, #0]
 8004118:	4618      	mov	r0, r3
 800411a:	46bd      	mov	sp, r7
 800411c:	bc80      	pop	{r7}
 800411e:	4770      	bx	lr
 8004120:	20002c08 	.word	0x20002c08

08004124 <HAL_ADC_Init>:
 8004124:	b580      	push	{r7, lr}
 8004126:	b086      	sub	sp, #24
 8004128:	af00      	add	r7, sp, #0
 800412a:	6078      	str	r0, [r7, #4]
 800412c:	2300      	movs	r3, #0
 800412e:	75fb      	strb	r3, [r7, #23]
 8004130:	2300      	movs	r3, #0
 8004132:	613b      	str	r3, [r7, #16]
 8004134:	2300      	movs	r3, #0
 8004136:	60bb      	str	r3, [r7, #8]
 8004138:	2300      	movs	r3, #0
 800413a:	60fb      	str	r3, [r7, #12]
 800413c:	687b      	ldr	r3, [r7, #4]
 800413e:	2b00      	cmp	r3, #0
 8004140:	d101      	bne.n	8004146 <HAL_ADC_Init+0x22>
 8004142:	2301      	movs	r3, #1
 8004144:	e0be      	b.n	80042c4 <HAL_ADC_Init+0x1a0>
 8004146:	687b      	ldr	r3, [r7, #4]
 8004148:	689b      	ldr	r3, [r3, #8]
 800414a:	2b00      	cmp	r3, #0
 800414c:	687b      	ldr	r3, [r7, #4]
 800414e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004150:	2b00      	cmp	r3, #0
 8004152:	d109      	bne.n	8004168 <HAL_ADC_Init+0x44>
 8004154:	687b      	ldr	r3, [r7, #4]
 8004156:	2200      	movs	r2, #0
 8004158:	62da      	str	r2, [r3, #44]	; 0x2c
 800415a:	687b      	ldr	r3, [r7, #4]
 800415c:	2200      	movs	r2, #0
 800415e:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8004162:	6878      	ldr	r0, [r7, #4]
 8004164:	f7fd f814 	bl	8001190 <HAL_ADC_MspInit>
 8004168:	6878      	ldr	r0, [r7, #4]
 800416a:	f000 faf5 	bl	8004758 <ADC_ConversionStop_Disable>
 800416e:	4603      	mov	r3, r0
 8004170:	75fb      	strb	r3, [r7, #23]
 8004172:	687b      	ldr	r3, [r7, #4]
 8004174:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004176:	f003 0310 	and.w	r3, r3, #16
 800417a:	2b00      	cmp	r3, #0
 800417c:	f040 8099 	bne.w	80042b2 <HAL_ADC_Init+0x18e>
 8004180:	7dfb      	ldrb	r3, [r7, #23]
 8004182:	2b00      	cmp	r3, #0
 8004184:	f040 8095 	bne.w	80042b2 <HAL_ADC_Init+0x18e>
 8004188:	687b      	ldr	r3, [r7, #4]
 800418a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800418c:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8004190:	f023 0302 	bic.w	r3, r3, #2
 8004194:	f043 0202 	orr.w	r2, r3, #2
 8004198:	687b      	ldr	r3, [r7, #4]
 800419a:	629a      	str	r2, [r3, #40]	; 0x28
 800419c:	687b      	ldr	r3, [r7, #4]
 800419e:	685a      	ldr	r2, [r3, #4]
 80041a0:	687b      	ldr	r3, [r7, #4]
 80041a2:	69db      	ldr	r3, [r3, #28]
 80041a4:	431a      	orrs	r2, r3
 80041a6:	687b      	ldr	r3, [r7, #4]
 80041a8:	7b1b      	ldrb	r3, [r3, #12]
 80041aa:	005b      	lsls	r3, r3, #1
 80041ac:	4313      	orrs	r3, r2
 80041ae:	68ba      	ldr	r2, [r7, #8]
 80041b0:	4313      	orrs	r3, r2
 80041b2:	60bb      	str	r3, [r7, #8]
 80041b4:	687b      	ldr	r3, [r7, #4]
 80041b6:	689b      	ldr	r3, [r3, #8]
 80041b8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80041bc:	d003      	beq.n	80041c6 <HAL_ADC_Init+0xa2>
 80041be:	687b      	ldr	r3, [r7, #4]
 80041c0:	689b      	ldr	r3, [r3, #8]
 80041c2:	2b01      	cmp	r3, #1
 80041c4:	d102      	bne.n	80041cc <HAL_ADC_Init+0xa8>
 80041c6:	f44f 7380 	mov.w	r3, #256	; 0x100
 80041ca:	e000      	b.n	80041ce <HAL_ADC_Init+0xaa>
 80041cc:	2300      	movs	r3, #0
 80041ce:	693a      	ldr	r2, [r7, #16]
 80041d0:	4313      	orrs	r3, r2
 80041d2:	613b      	str	r3, [r7, #16]
 80041d4:	687b      	ldr	r3, [r7, #4]
 80041d6:	7d1b      	ldrb	r3, [r3, #20]
 80041d8:	2b01      	cmp	r3, #1
 80041da:	d119      	bne.n	8004210 <HAL_ADC_Init+0xec>
 80041dc:	687b      	ldr	r3, [r7, #4]
 80041de:	7b1b      	ldrb	r3, [r3, #12]
 80041e0:	2b00      	cmp	r3, #0
 80041e2:	d109      	bne.n	80041f8 <HAL_ADC_Init+0xd4>
 80041e4:	687b      	ldr	r3, [r7, #4]
 80041e6:	699b      	ldr	r3, [r3, #24]
 80041e8:	3b01      	subs	r3, #1
 80041ea:	035a      	lsls	r2, r3, #13
 80041ec:	693b      	ldr	r3, [r7, #16]
 80041ee:	4313      	orrs	r3, r2
 80041f0:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80041f4:	613b      	str	r3, [r7, #16]
 80041f6:	e00b      	b.n	8004210 <HAL_ADC_Init+0xec>
 80041f8:	687b      	ldr	r3, [r7, #4]
 80041fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80041fc:	f043 0220 	orr.w	r2, r3, #32
 8004200:	687b      	ldr	r3, [r7, #4]
 8004202:	629a      	str	r2, [r3, #40]	; 0x28
 8004204:	687b      	ldr	r3, [r7, #4]
 8004206:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004208:	f043 0201 	orr.w	r2, r3, #1
 800420c:	687b      	ldr	r3, [r7, #4]
 800420e:	62da      	str	r2, [r3, #44]	; 0x2c
 8004210:	687b      	ldr	r3, [r7, #4]
 8004212:	681b      	ldr	r3, [r3, #0]
 8004214:	685b      	ldr	r3, [r3, #4]
 8004216:	f423 4169 	bic.w	r1, r3, #59648	; 0xe900
 800421a:	687b      	ldr	r3, [r7, #4]
 800421c:	681b      	ldr	r3, [r3, #0]
 800421e:	693a      	ldr	r2, [r7, #16]
 8004220:	430a      	orrs	r2, r1
 8004222:	605a      	str	r2, [r3, #4]
 8004224:	687b      	ldr	r3, [r7, #4]
 8004226:	681b      	ldr	r3, [r3, #0]
 8004228:	689a      	ldr	r2, [r3, #8]
 800422a:	4b28      	ldr	r3, [pc, #160]	; (80042cc <HAL_ADC_Init+0x1a8>)
 800422c:	4013      	ands	r3, r2
 800422e:	687a      	ldr	r2, [r7, #4]
 8004230:	6812      	ldr	r2, [r2, #0]
 8004232:	68b9      	ldr	r1, [r7, #8]
 8004234:	430b      	orrs	r3, r1
 8004236:	6093      	str	r3, [r2, #8]
 8004238:	687b      	ldr	r3, [r7, #4]
 800423a:	689b      	ldr	r3, [r3, #8]
 800423c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8004240:	d003      	beq.n	800424a <HAL_ADC_Init+0x126>
 8004242:	687b      	ldr	r3, [r7, #4]
 8004244:	689b      	ldr	r3, [r3, #8]
 8004246:	2b01      	cmp	r3, #1
 8004248:	d104      	bne.n	8004254 <HAL_ADC_Init+0x130>
 800424a:	687b      	ldr	r3, [r7, #4]
 800424c:	691b      	ldr	r3, [r3, #16]
 800424e:	3b01      	subs	r3, #1
 8004250:	051b      	lsls	r3, r3, #20
 8004252:	60fb      	str	r3, [r7, #12]
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	681b      	ldr	r3, [r3, #0]
 8004258:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800425a:	f423 0170 	bic.w	r1, r3, #15728640	; 0xf00000
 800425e:	687b      	ldr	r3, [r7, #4]
 8004260:	681b      	ldr	r3, [r3, #0]
 8004262:	68fa      	ldr	r2, [r7, #12]
 8004264:	430a      	orrs	r2, r1
 8004266:	62da      	str	r2, [r3, #44]	; 0x2c
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	681b      	ldr	r3, [r3, #0]
 800426c:	689a      	ldr	r2, [r3, #8]
 800426e:	4b18      	ldr	r3, [pc, #96]	; (80042d0 <HAL_ADC_Init+0x1ac>)
 8004270:	4013      	ands	r3, r2
 8004272:	68ba      	ldr	r2, [r7, #8]
 8004274:	429a      	cmp	r2, r3
 8004276:	d10b      	bne.n	8004290 <HAL_ADC_Init+0x16c>
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	2200      	movs	r2, #0
 800427c:	62da      	str	r2, [r3, #44]	; 0x2c
 800427e:	687b      	ldr	r3, [r7, #4]
 8004280:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004282:	f023 0303 	bic.w	r3, r3, #3
 8004286:	f043 0201 	orr.w	r2, r3, #1
 800428a:	687b      	ldr	r3, [r7, #4]
 800428c:	629a      	str	r2, [r3, #40]	; 0x28
 800428e:	e018      	b.n	80042c2 <HAL_ADC_Init+0x19e>
 8004290:	687b      	ldr	r3, [r7, #4]
 8004292:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004294:	f023 0312 	bic.w	r3, r3, #18
 8004298:	f043 0210 	orr.w	r2, r3, #16
 800429c:	687b      	ldr	r3, [r7, #4]
 800429e:	629a      	str	r2, [r3, #40]	; 0x28
 80042a0:	687b      	ldr	r3, [r7, #4]
 80042a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80042a4:	f043 0201 	orr.w	r2, r3, #1
 80042a8:	687b      	ldr	r3, [r7, #4]
 80042aa:	62da      	str	r2, [r3, #44]	; 0x2c
 80042ac:	2301      	movs	r3, #1
 80042ae:	75fb      	strb	r3, [r7, #23]
 80042b0:	e007      	b.n	80042c2 <HAL_ADC_Init+0x19e>
 80042b2:	687b      	ldr	r3, [r7, #4]
 80042b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80042b6:	f043 0210 	orr.w	r2, r3, #16
 80042ba:	687b      	ldr	r3, [r7, #4]
 80042bc:	629a      	str	r2, [r3, #40]	; 0x28
 80042be:	2301      	movs	r3, #1
 80042c0:	75fb      	strb	r3, [r7, #23]
 80042c2:	7dfb      	ldrb	r3, [r7, #23]
 80042c4:	4618      	mov	r0, r3
 80042c6:	3718      	adds	r7, #24
 80042c8:	46bd      	mov	sp, r7
 80042ca:	bd80      	pop	{r7, pc}
 80042cc:	ffe1f7fd 	.word	0xffe1f7fd
 80042d0:	ff1f0efe 	.word	0xff1f0efe

080042d4 <HAL_ADC_Start_DMA>:
 80042d4:	b580      	push	{r7, lr}
 80042d6:	b086      	sub	sp, #24
 80042d8:	af00      	add	r7, sp, #0
 80042da:	60f8      	str	r0, [r7, #12]
 80042dc:	60b9      	str	r1, [r7, #8]
 80042de:	607a      	str	r2, [r7, #4]
 80042e0:	2300      	movs	r3, #0
 80042e2:	75fb      	strb	r3, [r7, #23]
 80042e4:	68fb      	ldr	r3, [r7, #12]
 80042e6:	681b      	ldr	r3, [r3, #0]
 80042e8:	4a64      	ldr	r2, [pc, #400]	; (800447c <HAL_ADC_Start_DMA+0x1a8>)
 80042ea:	4293      	cmp	r3, r2
 80042ec:	d004      	beq.n	80042f8 <HAL_ADC_Start_DMA+0x24>
 80042ee:	68fb      	ldr	r3, [r7, #12]
 80042f0:	681b      	ldr	r3, [r3, #0]
 80042f2:	4a63      	ldr	r2, [pc, #396]	; (8004480 <HAL_ADC_Start_DMA+0x1ac>)
 80042f4:	4293      	cmp	r3, r2
 80042f6:	d106      	bne.n	8004306 <HAL_ADC_Start_DMA+0x32>
 80042f8:	4b60      	ldr	r3, [pc, #384]	; (800447c <HAL_ADC_Start_DMA+0x1a8>)
 80042fa:	685b      	ldr	r3, [r3, #4]
 80042fc:	f403 2370 	and.w	r3, r3, #983040	; 0xf0000
 8004300:	2b00      	cmp	r3, #0
 8004302:	f040 80b3 	bne.w	800446c <HAL_ADC_Start_DMA+0x198>
 8004306:	68fb      	ldr	r3, [r7, #12]
 8004308:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 800430c:	2b01      	cmp	r3, #1
 800430e:	d101      	bne.n	8004314 <HAL_ADC_Start_DMA+0x40>
 8004310:	2302      	movs	r3, #2
 8004312:	e0ae      	b.n	8004472 <HAL_ADC_Start_DMA+0x19e>
 8004314:	68fb      	ldr	r3, [r7, #12]
 8004316:	2201      	movs	r2, #1
 8004318:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 800431c:	68f8      	ldr	r0, [r7, #12]
 800431e:	f000 f9c1 	bl	80046a4 <ADC_Enable>
 8004322:	4603      	mov	r3, r0
 8004324:	75fb      	strb	r3, [r7, #23]
 8004326:	7dfb      	ldrb	r3, [r7, #23]
 8004328:	2b00      	cmp	r3, #0
 800432a:	f040 809a 	bne.w	8004462 <HAL_ADC_Start_DMA+0x18e>
 800432e:	68fb      	ldr	r3, [r7, #12]
 8004330:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004332:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8004336:	f023 0301 	bic.w	r3, r3, #1
 800433a:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800433e:	68fb      	ldr	r3, [r7, #12]
 8004340:	629a      	str	r2, [r3, #40]	; 0x28
 8004342:	68fb      	ldr	r3, [r7, #12]
 8004344:	681b      	ldr	r3, [r3, #0]
 8004346:	4a4e      	ldr	r2, [pc, #312]	; (8004480 <HAL_ADC_Start_DMA+0x1ac>)
 8004348:	4293      	cmp	r3, r2
 800434a:	d105      	bne.n	8004358 <HAL_ADC_Start_DMA+0x84>
 800434c:	4b4b      	ldr	r3, [pc, #300]	; (800447c <HAL_ADC_Start_DMA+0x1a8>)
 800434e:	685b      	ldr	r3, [r3, #4]
 8004350:	f403 2370 	and.w	r3, r3, #983040	; 0xf0000
 8004354:	2b00      	cmp	r3, #0
 8004356:	d115      	bne.n	8004384 <HAL_ADC_Start_DMA+0xb0>
 8004358:	68fb      	ldr	r3, [r7, #12]
 800435a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800435c:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 8004360:	68fb      	ldr	r3, [r7, #12]
 8004362:	629a      	str	r2, [r3, #40]	; 0x28
 8004364:	68fb      	ldr	r3, [r7, #12]
 8004366:	681b      	ldr	r3, [r3, #0]
 8004368:	685b      	ldr	r3, [r3, #4]
 800436a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800436e:	2b00      	cmp	r3, #0
 8004370:	d026      	beq.n	80043c0 <HAL_ADC_Start_DMA+0xec>
 8004372:	68fb      	ldr	r3, [r7, #12]
 8004374:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004376:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800437a:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 800437e:	68fb      	ldr	r3, [r7, #12]
 8004380:	629a      	str	r2, [r3, #40]	; 0x28
 8004382:	e01d      	b.n	80043c0 <HAL_ADC_Start_DMA+0xec>
 8004384:	68fb      	ldr	r3, [r7, #12]
 8004386:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004388:	f443 1280 	orr.w	r2, r3, #1048576	; 0x100000
 800438c:	68fb      	ldr	r3, [r7, #12]
 800438e:	629a      	str	r2, [r3, #40]	; 0x28
 8004390:	68fb      	ldr	r3, [r7, #12]
 8004392:	681b      	ldr	r3, [r3, #0]
 8004394:	4a39      	ldr	r2, [pc, #228]	; (800447c <HAL_ADC_Start_DMA+0x1a8>)
 8004396:	4293      	cmp	r3, r2
 8004398:	d004      	beq.n	80043a4 <HAL_ADC_Start_DMA+0xd0>
 800439a:	68fb      	ldr	r3, [r7, #12]
 800439c:	681b      	ldr	r3, [r3, #0]
 800439e:	4a38      	ldr	r2, [pc, #224]	; (8004480 <HAL_ADC_Start_DMA+0x1ac>)
 80043a0:	4293      	cmp	r3, r2
 80043a2:	d10d      	bne.n	80043c0 <HAL_ADC_Start_DMA+0xec>
 80043a4:	4b35      	ldr	r3, [pc, #212]	; (800447c <HAL_ADC_Start_DMA+0x1a8>)
 80043a6:	685b      	ldr	r3, [r3, #4]
 80043a8:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80043ac:	2b00      	cmp	r3, #0
 80043ae:	d007      	beq.n	80043c0 <HAL_ADC_Start_DMA+0xec>
 80043b0:	68fb      	ldr	r3, [r7, #12]
 80043b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80043b4:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80043b8:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 80043bc:	68fb      	ldr	r3, [r7, #12]
 80043be:	629a      	str	r2, [r3, #40]	; 0x28
 80043c0:	68fb      	ldr	r3, [r7, #12]
 80043c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80043c4:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80043c8:	2b00      	cmp	r3, #0
 80043ca:	d006      	beq.n	80043da <HAL_ADC_Start_DMA+0x106>
 80043cc:	68fb      	ldr	r3, [r7, #12]
 80043ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80043d0:	f023 0206 	bic.w	r2, r3, #6
 80043d4:	68fb      	ldr	r3, [r7, #12]
 80043d6:	62da      	str	r2, [r3, #44]	; 0x2c
 80043d8:	e002      	b.n	80043e0 <HAL_ADC_Start_DMA+0x10c>
 80043da:	68fb      	ldr	r3, [r7, #12]
 80043dc:	2200      	movs	r2, #0
 80043de:	62da      	str	r2, [r3, #44]	; 0x2c
 80043e0:	68fb      	ldr	r3, [r7, #12]
 80043e2:	2200      	movs	r2, #0
 80043e4:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80043e8:	68fb      	ldr	r3, [r7, #12]
 80043ea:	6a1b      	ldr	r3, [r3, #32]
 80043ec:	4a25      	ldr	r2, [pc, #148]	; (8004484 <HAL_ADC_Start_DMA+0x1b0>)
 80043ee:	629a      	str	r2, [r3, #40]	; 0x28
 80043f0:	68fb      	ldr	r3, [r7, #12]
 80043f2:	6a1b      	ldr	r3, [r3, #32]
 80043f4:	4a24      	ldr	r2, [pc, #144]	; (8004488 <HAL_ADC_Start_DMA+0x1b4>)
 80043f6:	62da      	str	r2, [r3, #44]	; 0x2c
 80043f8:	68fb      	ldr	r3, [r7, #12]
 80043fa:	6a1b      	ldr	r3, [r3, #32]
 80043fc:	4a23      	ldr	r2, [pc, #140]	; (800448c <HAL_ADC_Start_DMA+0x1b8>)
 80043fe:	631a      	str	r2, [r3, #48]	; 0x30
 8004400:	68fb      	ldr	r3, [r7, #12]
 8004402:	681b      	ldr	r3, [r3, #0]
 8004404:	f06f 0202 	mvn.w	r2, #2
 8004408:	601a      	str	r2, [r3, #0]
 800440a:	68fb      	ldr	r3, [r7, #12]
 800440c:	681b      	ldr	r3, [r3, #0]
 800440e:	689a      	ldr	r2, [r3, #8]
 8004410:	68fb      	ldr	r3, [r7, #12]
 8004412:	681b      	ldr	r3, [r3, #0]
 8004414:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004418:	609a      	str	r2, [r3, #8]
 800441a:	68fb      	ldr	r3, [r7, #12]
 800441c:	6a18      	ldr	r0, [r3, #32]
 800441e:	68fb      	ldr	r3, [r7, #12]
 8004420:	681b      	ldr	r3, [r3, #0]
 8004422:	334c      	adds	r3, #76	; 0x4c
 8004424:	4619      	mov	r1, r3
 8004426:	68ba      	ldr	r2, [r7, #8]
 8004428:	687b      	ldr	r3, [r7, #4]
 800442a:	f000 fba5 	bl	8004b78 <HAL_DMA_Start_IT>
 800442e:	68fb      	ldr	r3, [r7, #12]
 8004430:	681b      	ldr	r3, [r3, #0]
 8004432:	689b      	ldr	r3, [r3, #8]
 8004434:	f403 2360 	and.w	r3, r3, #917504	; 0xe0000
 8004438:	f5b3 2f60 	cmp.w	r3, #917504	; 0xe0000
 800443c:	d108      	bne.n	8004450 <HAL_ADC_Start_DMA+0x17c>
 800443e:	68fb      	ldr	r3, [r7, #12]
 8004440:	681b      	ldr	r3, [r3, #0]
 8004442:	689a      	ldr	r2, [r3, #8]
 8004444:	68fb      	ldr	r3, [r7, #12]
 8004446:	681b      	ldr	r3, [r3, #0]
 8004448:	f442 02a0 	orr.w	r2, r2, #5242880	; 0x500000
 800444c:	609a      	str	r2, [r3, #8]
 800444e:	e00f      	b.n	8004470 <HAL_ADC_Start_DMA+0x19c>
 8004450:	68fb      	ldr	r3, [r7, #12]
 8004452:	681b      	ldr	r3, [r3, #0]
 8004454:	689a      	ldr	r2, [r3, #8]
 8004456:	68fb      	ldr	r3, [r7, #12]
 8004458:	681b      	ldr	r3, [r3, #0]
 800445a:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 800445e:	609a      	str	r2, [r3, #8]
 8004460:	e006      	b.n	8004470 <HAL_ADC_Start_DMA+0x19c>
 8004462:	68fb      	ldr	r3, [r7, #12]
 8004464:	2200      	movs	r2, #0
 8004466:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 800446a:	e001      	b.n	8004470 <HAL_ADC_Start_DMA+0x19c>
 800446c:	2301      	movs	r3, #1
 800446e:	75fb      	strb	r3, [r7, #23]
 8004470:	7dfb      	ldrb	r3, [r7, #23]
 8004472:	4618      	mov	r0, r3
 8004474:	3718      	adds	r7, #24
 8004476:	46bd      	mov	sp, r7
 8004478:	bd80      	pop	{r7, pc}
 800447a:	bf00      	nop
 800447c:	40012400 	.word	0x40012400
 8004480:	40012800 	.word	0x40012800
 8004484:	080047db 	.word	0x080047db
 8004488:	08004857 	.word	0x08004857
 800448c:	08004873 	.word	0x08004873

08004490 <HAL_ADC_ConvHalfCpltCallback>:
 8004490:	b480      	push	{r7}
 8004492:	b083      	sub	sp, #12
 8004494:	af00      	add	r7, sp, #0
 8004496:	6078      	str	r0, [r7, #4]
 8004498:	bf00      	nop
 800449a:	370c      	adds	r7, #12
 800449c:	46bd      	mov	sp, r7
 800449e:	bc80      	pop	{r7}
 80044a0:	4770      	bx	lr

080044a2 <HAL_ADC_ErrorCallback>:
 80044a2:	b480      	push	{r7}
 80044a4:	b083      	sub	sp, #12
 80044a6:	af00      	add	r7, sp, #0
 80044a8:	6078      	str	r0, [r7, #4]
 80044aa:	bf00      	nop
 80044ac:	370c      	adds	r7, #12
 80044ae:	46bd      	mov	sp, r7
 80044b0:	bc80      	pop	{r7}
 80044b2:	4770      	bx	lr

080044b4 <HAL_ADC_ConfigChannel>:
 80044b4:	b480      	push	{r7}
 80044b6:	b085      	sub	sp, #20
 80044b8:	af00      	add	r7, sp, #0
 80044ba:	6078      	str	r0, [r7, #4]
 80044bc:	6039      	str	r1, [r7, #0]
 80044be:	2300      	movs	r3, #0
 80044c0:	73fb      	strb	r3, [r7, #15]
 80044c2:	2300      	movs	r3, #0
 80044c4:	60bb      	str	r3, [r7, #8]
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 80044cc:	2b01      	cmp	r3, #1
 80044ce:	d101      	bne.n	80044d4 <HAL_ADC_ConfigChannel+0x20>
 80044d0:	2302      	movs	r3, #2
 80044d2:	e0dc      	b.n	800468e <HAL_ADC_ConfigChannel+0x1da>
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	2201      	movs	r2, #1
 80044d8:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80044dc:	683b      	ldr	r3, [r7, #0]
 80044de:	685b      	ldr	r3, [r3, #4]
 80044e0:	2b06      	cmp	r3, #6
 80044e2:	d81c      	bhi.n	800451e <HAL_ADC_ConfigChannel+0x6a>
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	681b      	ldr	r3, [r3, #0]
 80044e8:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80044ea:	683b      	ldr	r3, [r7, #0]
 80044ec:	685a      	ldr	r2, [r3, #4]
 80044ee:	4613      	mov	r3, r2
 80044f0:	009b      	lsls	r3, r3, #2
 80044f2:	4413      	add	r3, r2
 80044f4:	3b05      	subs	r3, #5
 80044f6:	221f      	movs	r2, #31
 80044f8:	fa02 f303 	lsl.w	r3, r2, r3
 80044fc:	43db      	mvns	r3, r3
 80044fe:	4019      	ands	r1, r3
 8004500:	683b      	ldr	r3, [r7, #0]
 8004502:	6818      	ldr	r0, [r3, #0]
 8004504:	683b      	ldr	r3, [r7, #0]
 8004506:	685a      	ldr	r2, [r3, #4]
 8004508:	4613      	mov	r3, r2
 800450a:	009b      	lsls	r3, r3, #2
 800450c:	4413      	add	r3, r2
 800450e:	3b05      	subs	r3, #5
 8004510:	fa00 f203 	lsl.w	r2, r0, r3
 8004514:	687b      	ldr	r3, [r7, #4]
 8004516:	681b      	ldr	r3, [r3, #0]
 8004518:	430a      	orrs	r2, r1
 800451a:	635a      	str	r2, [r3, #52]	; 0x34
 800451c:	e03c      	b.n	8004598 <HAL_ADC_ConfigChannel+0xe4>
 800451e:	683b      	ldr	r3, [r7, #0]
 8004520:	685b      	ldr	r3, [r3, #4]
 8004522:	2b0c      	cmp	r3, #12
 8004524:	d81c      	bhi.n	8004560 <HAL_ADC_ConfigChannel+0xac>
 8004526:	687b      	ldr	r3, [r7, #4]
 8004528:	681b      	ldr	r3, [r3, #0]
 800452a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800452c:	683b      	ldr	r3, [r7, #0]
 800452e:	685a      	ldr	r2, [r3, #4]
 8004530:	4613      	mov	r3, r2
 8004532:	009b      	lsls	r3, r3, #2
 8004534:	4413      	add	r3, r2
 8004536:	3b23      	subs	r3, #35	; 0x23
 8004538:	221f      	movs	r2, #31
 800453a:	fa02 f303 	lsl.w	r3, r2, r3
 800453e:	43db      	mvns	r3, r3
 8004540:	4019      	ands	r1, r3
 8004542:	683b      	ldr	r3, [r7, #0]
 8004544:	6818      	ldr	r0, [r3, #0]
 8004546:	683b      	ldr	r3, [r7, #0]
 8004548:	685a      	ldr	r2, [r3, #4]
 800454a:	4613      	mov	r3, r2
 800454c:	009b      	lsls	r3, r3, #2
 800454e:	4413      	add	r3, r2
 8004550:	3b23      	subs	r3, #35	; 0x23
 8004552:	fa00 f203 	lsl.w	r2, r0, r3
 8004556:	687b      	ldr	r3, [r7, #4]
 8004558:	681b      	ldr	r3, [r3, #0]
 800455a:	430a      	orrs	r2, r1
 800455c:	631a      	str	r2, [r3, #48]	; 0x30
 800455e:	e01b      	b.n	8004598 <HAL_ADC_ConfigChannel+0xe4>
 8004560:	687b      	ldr	r3, [r7, #4]
 8004562:	681b      	ldr	r3, [r3, #0]
 8004564:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8004566:	683b      	ldr	r3, [r7, #0]
 8004568:	685a      	ldr	r2, [r3, #4]
 800456a:	4613      	mov	r3, r2
 800456c:	009b      	lsls	r3, r3, #2
 800456e:	4413      	add	r3, r2
 8004570:	3b41      	subs	r3, #65	; 0x41
 8004572:	221f      	movs	r2, #31
 8004574:	fa02 f303 	lsl.w	r3, r2, r3
 8004578:	43db      	mvns	r3, r3
 800457a:	4019      	ands	r1, r3
 800457c:	683b      	ldr	r3, [r7, #0]
 800457e:	6818      	ldr	r0, [r3, #0]
 8004580:	683b      	ldr	r3, [r7, #0]
 8004582:	685a      	ldr	r2, [r3, #4]
 8004584:	4613      	mov	r3, r2
 8004586:	009b      	lsls	r3, r3, #2
 8004588:	4413      	add	r3, r2
 800458a:	3b41      	subs	r3, #65	; 0x41
 800458c:	fa00 f203 	lsl.w	r2, r0, r3
 8004590:	687b      	ldr	r3, [r7, #4]
 8004592:	681b      	ldr	r3, [r3, #0]
 8004594:	430a      	orrs	r2, r1
 8004596:	62da      	str	r2, [r3, #44]	; 0x2c
 8004598:	683b      	ldr	r3, [r7, #0]
 800459a:	681b      	ldr	r3, [r3, #0]
 800459c:	2b09      	cmp	r3, #9
 800459e:	d91c      	bls.n	80045da <HAL_ADC_ConfigChannel+0x126>
 80045a0:	687b      	ldr	r3, [r7, #4]
 80045a2:	681b      	ldr	r3, [r3, #0]
 80045a4:	68d9      	ldr	r1, [r3, #12]
 80045a6:	683b      	ldr	r3, [r7, #0]
 80045a8:	681a      	ldr	r2, [r3, #0]
 80045aa:	4613      	mov	r3, r2
 80045ac:	005b      	lsls	r3, r3, #1
 80045ae:	4413      	add	r3, r2
 80045b0:	3b1e      	subs	r3, #30
 80045b2:	2207      	movs	r2, #7
 80045b4:	fa02 f303 	lsl.w	r3, r2, r3
 80045b8:	43db      	mvns	r3, r3
 80045ba:	4019      	ands	r1, r3
 80045bc:	683b      	ldr	r3, [r7, #0]
 80045be:	6898      	ldr	r0, [r3, #8]
 80045c0:	683b      	ldr	r3, [r7, #0]
 80045c2:	681a      	ldr	r2, [r3, #0]
 80045c4:	4613      	mov	r3, r2
 80045c6:	005b      	lsls	r3, r3, #1
 80045c8:	4413      	add	r3, r2
 80045ca:	3b1e      	subs	r3, #30
 80045cc:	fa00 f203 	lsl.w	r2, r0, r3
 80045d0:	687b      	ldr	r3, [r7, #4]
 80045d2:	681b      	ldr	r3, [r3, #0]
 80045d4:	430a      	orrs	r2, r1
 80045d6:	60da      	str	r2, [r3, #12]
 80045d8:	e019      	b.n	800460e <HAL_ADC_ConfigChannel+0x15a>
 80045da:	687b      	ldr	r3, [r7, #4]
 80045dc:	681b      	ldr	r3, [r3, #0]
 80045de:	6919      	ldr	r1, [r3, #16]
 80045e0:	683b      	ldr	r3, [r7, #0]
 80045e2:	681a      	ldr	r2, [r3, #0]
 80045e4:	4613      	mov	r3, r2
 80045e6:	005b      	lsls	r3, r3, #1
 80045e8:	4413      	add	r3, r2
 80045ea:	2207      	movs	r2, #7
 80045ec:	fa02 f303 	lsl.w	r3, r2, r3
 80045f0:	43db      	mvns	r3, r3
 80045f2:	4019      	ands	r1, r3
 80045f4:	683b      	ldr	r3, [r7, #0]
 80045f6:	6898      	ldr	r0, [r3, #8]
 80045f8:	683b      	ldr	r3, [r7, #0]
 80045fa:	681a      	ldr	r2, [r3, #0]
 80045fc:	4613      	mov	r3, r2
 80045fe:	005b      	lsls	r3, r3, #1
 8004600:	4413      	add	r3, r2
 8004602:	fa00 f203 	lsl.w	r2, r0, r3
 8004606:	687b      	ldr	r3, [r7, #4]
 8004608:	681b      	ldr	r3, [r3, #0]
 800460a:	430a      	orrs	r2, r1
 800460c:	611a      	str	r2, [r3, #16]
 800460e:	683b      	ldr	r3, [r7, #0]
 8004610:	681b      	ldr	r3, [r3, #0]
 8004612:	2b10      	cmp	r3, #16
 8004614:	d003      	beq.n	800461e <HAL_ADC_ConfigChannel+0x16a>
 8004616:	683b      	ldr	r3, [r7, #0]
 8004618:	681b      	ldr	r3, [r3, #0]
 800461a:	2b11      	cmp	r3, #17
 800461c:	d132      	bne.n	8004684 <HAL_ADC_ConfigChannel+0x1d0>
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	681b      	ldr	r3, [r3, #0]
 8004622:	4a1d      	ldr	r2, [pc, #116]	; (8004698 <HAL_ADC_ConfigChannel+0x1e4>)
 8004624:	4293      	cmp	r3, r2
 8004626:	d125      	bne.n	8004674 <HAL_ADC_ConfigChannel+0x1c0>
 8004628:	687b      	ldr	r3, [r7, #4]
 800462a:	681b      	ldr	r3, [r3, #0]
 800462c:	689b      	ldr	r3, [r3, #8]
 800462e:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8004632:	2b00      	cmp	r3, #0
 8004634:	d126      	bne.n	8004684 <HAL_ADC_ConfigChannel+0x1d0>
 8004636:	687b      	ldr	r3, [r7, #4]
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	689a      	ldr	r2, [r3, #8]
 800463c:	687b      	ldr	r3, [r7, #4]
 800463e:	681b      	ldr	r3, [r3, #0]
 8004640:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8004644:	609a      	str	r2, [r3, #8]
 8004646:	683b      	ldr	r3, [r7, #0]
 8004648:	681b      	ldr	r3, [r3, #0]
 800464a:	2b10      	cmp	r3, #16
 800464c:	d11a      	bne.n	8004684 <HAL_ADC_ConfigChannel+0x1d0>
 800464e:	4b13      	ldr	r3, [pc, #76]	; (800469c <HAL_ADC_ConfigChannel+0x1e8>)
 8004650:	681b      	ldr	r3, [r3, #0]
 8004652:	4a13      	ldr	r2, [pc, #76]	; (80046a0 <HAL_ADC_ConfigChannel+0x1ec>)
 8004654:	fba2 2303 	umull	r2, r3, r2, r3
 8004658:	0c9a      	lsrs	r2, r3, #18
 800465a:	4613      	mov	r3, r2
 800465c:	009b      	lsls	r3, r3, #2
 800465e:	4413      	add	r3, r2
 8004660:	005b      	lsls	r3, r3, #1
 8004662:	60bb      	str	r3, [r7, #8]
 8004664:	e002      	b.n	800466c <HAL_ADC_ConfigChannel+0x1b8>
 8004666:	68bb      	ldr	r3, [r7, #8]
 8004668:	3b01      	subs	r3, #1
 800466a:	60bb      	str	r3, [r7, #8]
 800466c:	68bb      	ldr	r3, [r7, #8]
 800466e:	2b00      	cmp	r3, #0
 8004670:	d1f9      	bne.n	8004666 <HAL_ADC_ConfigChannel+0x1b2>
 8004672:	e007      	b.n	8004684 <HAL_ADC_ConfigChannel+0x1d0>
 8004674:	687b      	ldr	r3, [r7, #4]
 8004676:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004678:	f043 0220 	orr.w	r2, r3, #32
 800467c:	687b      	ldr	r3, [r7, #4]
 800467e:	629a      	str	r2, [r3, #40]	; 0x28
 8004680:	2301      	movs	r3, #1
 8004682:	73fb      	strb	r3, [r7, #15]
 8004684:	687b      	ldr	r3, [r7, #4]
 8004686:	2200      	movs	r2, #0
 8004688:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 800468c:	7bfb      	ldrb	r3, [r7, #15]
 800468e:	4618      	mov	r0, r3
 8004690:	3714      	adds	r7, #20
 8004692:	46bd      	mov	sp, r7
 8004694:	bc80      	pop	{r7}
 8004696:	4770      	bx	lr
 8004698:	40012400 	.word	0x40012400
 800469c:	2000003c 	.word	0x2000003c
 80046a0:	431bde83 	.word	0x431bde83

080046a4 <ADC_Enable>:
 80046a4:	b580      	push	{r7, lr}
 80046a6:	b084      	sub	sp, #16
 80046a8:	af00      	add	r7, sp, #0
 80046aa:	6078      	str	r0, [r7, #4]
 80046ac:	2300      	movs	r3, #0
 80046ae:	60fb      	str	r3, [r7, #12]
 80046b0:	2300      	movs	r3, #0
 80046b2:	60bb      	str	r3, [r7, #8]
 80046b4:	687b      	ldr	r3, [r7, #4]
 80046b6:	681b      	ldr	r3, [r3, #0]
 80046b8:	689b      	ldr	r3, [r3, #8]
 80046ba:	f003 0301 	and.w	r3, r3, #1
 80046be:	2b01      	cmp	r3, #1
 80046c0:	d040      	beq.n	8004744 <ADC_Enable+0xa0>
 80046c2:	687b      	ldr	r3, [r7, #4]
 80046c4:	681b      	ldr	r3, [r3, #0]
 80046c6:	689a      	ldr	r2, [r3, #8]
 80046c8:	687b      	ldr	r3, [r7, #4]
 80046ca:	681b      	ldr	r3, [r3, #0]
 80046cc:	f042 0201 	orr.w	r2, r2, #1
 80046d0:	609a      	str	r2, [r3, #8]
 80046d2:	4b1f      	ldr	r3, [pc, #124]	; (8004750 <ADC_Enable+0xac>)
 80046d4:	681b      	ldr	r3, [r3, #0]
 80046d6:	4a1f      	ldr	r2, [pc, #124]	; (8004754 <ADC_Enable+0xb0>)
 80046d8:	fba2 2303 	umull	r2, r3, r2, r3
 80046dc:	0c9b      	lsrs	r3, r3, #18
 80046de:	60bb      	str	r3, [r7, #8]
 80046e0:	e002      	b.n	80046e8 <ADC_Enable+0x44>
 80046e2:	68bb      	ldr	r3, [r7, #8]
 80046e4:	3b01      	subs	r3, #1
 80046e6:	60bb      	str	r3, [r7, #8]
 80046e8:	68bb      	ldr	r3, [r7, #8]
 80046ea:	2b00      	cmp	r3, #0
 80046ec:	d1f9      	bne.n	80046e2 <ADC_Enable+0x3e>
 80046ee:	f7ff fd0f 	bl	8004110 <HAL_GetTick>
 80046f2:	60f8      	str	r0, [r7, #12]
 80046f4:	e01f      	b.n	8004736 <ADC_Enable+0x92>
 80046f6:	f7ff fd0b 	bl	8004110 <HAL_GetTick>
 80046fa:	4602      	mov	r2, r0
 80046fc:	68fb      	ldr	r3, [r7, #12]
 80046fe:	1ad3      	subs	r3, r2, r3
 8004700:	2b02      	cmp	r3, #2
 8004702:	d918      	bls.n	8004736 <ADC_Enable+0x92>
 8004704:	687b      	ldr	r3, [r7, #4]
 8004706:	681b      	ldr	r3, [r3, #0]
 8004708:	689b      	ldr	r3, [r3, #8]
 800470a:	f003 0301 	and.w	r3, r3, #1
 800470e:	2b01      	cmp	r3, #1
 8004710:	d011      	beq.n	8004736 <ADC_Enable+0x92>
 8004712:	687b      	ldr	r3, [r7, #4]
 8004714:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004716:	f043 0210 	orr.w	r2, r3, #16
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	629a      	str	r2, [r3, #40]	; 0x28
 800471e:	687b      	ldr	r3, [r7, #4]
 8004720:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004722:	f043 0201 	orr.w	r2, r3, #1
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	62da      	str	r2, [r3, #44]	; 0x2c
 800472a:	687b      	ldr	r3, [r7, #4]
 800472c:	2200      	movs	r2, #0
 800472e:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8004732:	2301      	movs	r3, #1
 8004734:	e007      	b.n	8004746 <ADC_Enable+0xa2>
 8004736:	687b      	ldr	r3, [r7, #4]
 8004738:	681b      	ldr	r3, [r3, #0]
 800473a:	689b      	ldr	r3, [r3, #8]
 800473c:	f003 0301 	and.w	r3, r3, #1
 8004740:	2b01      	cmp	r3, #1
 8004742:	d1d8      	bne.n	80046f6 <ADC_Enable+0x52>
 8004744:	2300      	movs	r3, #0
 8004746:	4618      	mov	r0, r3
 8004748:	3710      	adds	r7, #16
 800474a:	46bd      	mov	sp, r7
 800474c:	bd80      	pop	{r7, pc}
 800474e:	bf00      	nop
 8004750:	2000003c 	.word	0x2000003c
 8004754:	431bde83 	.word	0x431bde83

08004758 <ADC_ConversionStop_Disable>:
 8004758:	b580      	push	{r7, lr}
 800475a:	b084      	sub	sp, #16
 800475c:	af00      	add	r7, sp, #0
 800475e:	6078      	str	r0, [r7, #4]
 8004760:	2300      	movs	r3, #0
 8004762:	60fb      	str	r3, [r7, #12]
 8004764:	687b      	ldr	r3, [r7, #4]
 8004766:	681b      	ldr	r3, [r3, #0]
 8004768:	689b      	ldr	r3, [r3, #8]
 800476a:	f003 0301 	and.w	r3, r3, #1
 800476e:	2b01      	cmp	r3, #1
 8004770:	d12e      	bne.n	80047d0 <ADC_ConversionStop_Disable+0x78>
 8004772:	687b      	ldr	r3, [r7, #4]
 8004774:	681b      	ldr	r3, [r3, #0]
 8004776:	689a      	ldr	r2, [r3, #8]
 8004778:	687b      	ldr	r3, [r7, #4]
 800477a:	681b      	ldr	r3, [r3, #0]
 800477c:	f022 0201 	bic.w	r2, r2, #1
 8004780:	609a      	str	r2, [r3, #8]
 8004782:	f7ff fcc5 	bl	8004110 <HAL_GetTick>
 8004786:	60f8      	str	r0, [r7, #12]
 8004788:	e01b      	b.n	80047c2 <ADC_ConversionStop_Disable+0x6a>
 800478a:	f7ff fcc1 	bl	8004110 <HAL_GetTick>
 800478e:	4602      	mov	r2, r0
 8004790:	68fb      	ldr	r3, [r7, #12]
 8004792:	1ad3      	subs	r3, r2, r3
 8004794:	2b02      	cmp	r3, #2
 8004796:	d914      	bls.n	80047c2 <ADC_ConversionStop_Disable+0x6a>
 8004798:	687b      	ldr	r3, [r7, #4]
 800479a:	681b      	ldr	r3, [r3, #0]
 800479c:	689b      	ldr	r3, [r3, #8]
 800479e:	f003 0301 	and.w	r3, r3, #1
 80047a2:	2b01      	cmp	r3, #1
 80047a4:	d10d      	bne.n	80047c2 <ADC_ConversionStop_Disable+0x6a>
 80047a6:	687b      	ldr	r3, [r7, #4]
 80047a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80047aa:	f043 0210 	orr.w	r2, r3, #16
 80047ae:	687b      	ldr	r3, [r7, #4]
 80047b0:	629a      	str	r2, [r3, #40]	; 0x28
 80047b2:	687b      	ldr	r3, [r7, #4]
 80047b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80047b6:	f043 0201 	orr.w	r2, r3, #1
 80047ba:	687b      	ldr	r3, [r7, #4]
 80047bc:	62da      	str	r2, [r3, #44]	; 0x2c
 80047be:	2301      	movs	r3, #1
 80047c0:	e007      	b.n	80047d2 <ADC_ConversionStop_Disable+0x7a>
 80047c2:	687b      	ldr	r3, [r7, #4]
 80047c4:	681b      	ldr	r3, [r3, #0]
 80047c6:	689b      	ldr	r3, [r3, #8]
 80047c8:	f003 0301 	and.w	r3, r3, #1
 80047cc:	2b01      	cmp	r3, #1
 80047ce:	d0dc      	beq.n	800478a <ADC_ConversionStop_Disable+0x32>
 80047d0:	2300      	movs	r3, #0
 80047d2:	4618      	mov	r0, r3
 80047d4:	3710      	adds	r7, #16
 80047d6:	46bd      	mov	sp, r7
 80047d8:	bd80      	pop	{r7, pc}

080047da <ADC_DMAConvCplt>:
 80047da:	b580      	push	{r7, lr}
 80047dc:	b084      	sub	sp, #16
 80047de:	af00      	add	r7, sp, #0
 80047e0:	6078      	str	r0, [r7, #4]
 80047e2:	687b      	ldr	r3, [r7, #4]
 80047e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047e6:	60fb      	str	r3, [r7, #12]
 80047e8:	68fb      	ldr	r3, [r7, #12]
 80047ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80047ec:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80047f0:	2b00      	cmp	r3, #0
 80047f2:	d127      	bne.n	8004844 <ADC_DMAConvCplt+0x6a>
 80047f4:	68fb      	ldr	r3, [r7, #12]
 80047f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80047f8:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 80047fc:	68fb      	ldr	r3, [r7, #12]
 80047fe:	629a      	str	r2, [r3, #40]	; 0x28
 8004800:	68fb      	ldr	r3, [r7, #12]
 8004802:	681b      	ldr	r3, [r3, #0]
 8004804:	689b      	ldr	r3, [r3, #8]
 8004806:	f403 2360 	and.w	r3, r3, #917504	; 0xe0000
 800480a:	f5b3 2f60 	cmp.w	r3, #917504	; 0xe0000
 800480e:	d115      	bne.n	800483c <ADC_DMAConvCplt+0x62>
 8004810:	68fb      	ldr	r3, [r7, #12]
 8004812:	7b1b      	ldrb	r3, [r3, #12]
 8004814:	2b00      	cmp	r3, #0
 8004816:	d111      	bne.n	800483c <ADC_DMAConvCplt+0x62>
 8004818:	68fb      	ldr	r3, [r7, #12]
 800481a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800481c:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8004820:	68fb      	ldr	r3, [r7, #12]
 8004822:	629a      	str	r2, [r3, #40]	; 0x28
 8004824:	68fb      	ldr	r3, [r7, #12]
 8004826:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004828:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800482c:	2b00      	cmp	r3, #0
 800482e:	d105      	bne.n	800483c <ADC_DMAConvCplt+0x62>
 8004830:	68fb      	ldr	r3, [r7, #12]
 8004832:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004834:	f043 0201 	orr.w	r2, r3, #1
 8004838:	68fb      	ldr	r3, [r7, #12]
 800483a:	629a      	str	r2, [r3, #40]	; 0x28
 800483c:	68f8      	ldr	r0, [r7, #12]
 800483e:	f7fe fc6f 	bl	8003120 <HAL_ADC_ConvCpltCallback>
 8004842:	e004      	b.n	800484e <ADC_DMAConvCplt+0x74>
 8004844:	68fb      	ldr	r3, [r7, #12]
 8004846:	6a1b      	ldr	r3, [r3, #32]
 8004848:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800484a:	6878      	ldr	r0, [r7, #4]
 800484c:	4798      	blx	r3
 800484e:	bf00      	nop
 8004850:	3710      	adds	r7, #16
 8004852:	46bd      	mov	sp, r7
 8004854:	bd80      	pop	{r7, pc}

08004856 <ADC_DMAHalfConvCplt>:
 8004856:	b580      	push	{r7, lr}
 8004858:	b084      	sub	sp, #16
 800485a:	af00      	add	r7, sp, #0
 800485c:	6078      	str	r0, [r7, #4]
 800485e:	687b      	ldr	r3, [r7, #4]
 8004860:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004862:	60fb      	str	r3, [r7, #12]
 8004864:	68f8      	ldr	r0, [r7, #12]
 8004866:	f7ff fe13 	bl	8004490 <HAL_ADC_ConvHalfCpltCallback>
 800486a:	bf00      	nop
 800486c:	3710      	adds	r7, #16
 800486e:	46bd      	mov	sp, r7
 8004870:	bd80      	pop	{r7, pc}

08004872 <ADC_DMAError>:
 8004872:	b580      	push	{r7, lr}
 8004874:	b084      	sub	sp, #16
 8004876:	af00      	add	r7, sp, #0
 8004878:	6078      	str	r0, [r7, #4]
 800487a:	687b      	ldr	r3, [r7, #4]
 800487c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800487e:	60fb      	str	r3, [r7, #12]
 8004880:	68fb      	ldr	r3, [r7, #12]
 8004882:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004884:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8004888:	68fb      	ldr	r3, [r7, #12]
 800488a:	629a      	str	r2, [r3, #40]	; 0x28
 800488c:	68fb      	ldr	r3, [r7, #12]
 800488e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004890:	f043 0204 	orr.w	r2, r3, #4
 8004894:	68fb      	ldr	r3, [r7, #12]
 8004896:	62da      	str	r2, [r3, #44]	; 0x2c
 8004898:	68f8      	ldr	r0, [r7, #12]
 800489a:	f7ff fe02 	bl	80044a2 <HAL_ADC_ErrorCallback>
 800489e:	bf00      	nop
 80048a0:	3710      	adds	r7, #16
 80048a2:	46bd      	mov	sp, r7
 80048a4:	bd80      	pop	{r7, pc}
	...

080048a8 <__NVIC_SetPriorityGrouping>:
 80048a8:	b480      	push	{r7}
 80048aa:	b085      	sub	sp, #20
 80048ac:	af00      	add	r7, sp, #0
 80048ae:	6078      	str	r0, [r7, #4]
 80048b0:	687b      	ldr	r3, [r7, #4]
 80048b2:	f003 0307 	and.w	r3, r3, #7
 80048b6:	60fb      	str	r3, [r7, #12]
 80048b8:	4b0c      	ldr	r3, [pc, #48]	; (80048ec <__NVIC_SetPriorityGrouping+0x44>)
 80048ba:	68db      	ldr	r3, [r3, #12]
 80048bc:	60bb      	str	r3, [r7, #8]
 80048be:	68ba      	ldr	r2, [r7, #8]
 80048c0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80048c4:	4013      	ands	r3, r2
 80048c6:	60bb      	str	r3, [r7, #8]
 80048c8:	68fb      	ldr	r3, [r7, #12]
 80048ca:	021a      	lsls	r2, r3, #8
 80048cc:	68bb      	ldr	r3, [r7, #8]
 80048ce:	4313      	orrs	r3, r2
 80048d0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80048d4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80048d8:	60bb      	str	r3, [r7, #8]
 80048da:	4a04      	ldr	r2, [pc, #16]	; (80048ec <__NVIC_SetPriorityGrouping+0x44>)
 80048dc:	68bb      	ldr	r3, [r7, #8]
 80048de:	60d3      	str	r3, [r2, #12]
 80048e0:	bf00      	nop
 80048e2:	3714      	adds	r7, #20
 80048e4:	46bd      	mov	sp, r7
 80048e6:	bc80      	pop	{r7}
 80048e8:	4770      	bx	lr
 80048ea:	bf00      	nop
 80048ec:	e000ed00 	.word	0xe000ed00

080048f0 <__NVIC_GetPriorityGrouping>:
 80048f0:	b480      	push	{r7}
 80048f2:	af00      	add	r7, sp, #0
 80048f4:	4b04      	ldr	r3, [pc, #16]	; (8004908 <__NVIC_GetPriorityGrouping+0x18>)
 80048f6:	68db      	ldr	r3, [r3, #12]
 80048f8:	0a1b      	lsrs	r3, r3, #8
 80048fa:	f003 0307 	and.w	r3, r3, #7
 80048fe:	4618      	mov	r0, r3
 8004900:	46bd      	mov	sp, r7
 8004902:	bc80      	pop	{r7}
 8004904:	4770      	bx	lr
 8004906:	bf00      	nop
 8004908:	e000ed00 	.word	0xe000ed00

0800490c <__NVIC_EnableIRQ>:
 800490c:	b480      	push	{r7}
 800490e:	b083      	sub	sp, #12
 8004910:	af00      	add	r7, sp, #0
 8004912:	4603      	mov	r3, r0
 8004914:	71fb      	strb	r3, [r7, #7]
 8004916:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800491a:	2b00      	cmp	r3, #0
 800491c:	db0b      	blt.n	8004936 <__NVIC_EnableIRQ+0x2a>
 800491e:	79fb      	ldrb	r3, [r7, #7]
 8004920:	f003 021f 	and.w	r2, r3, #31
 8004924:	4906      	ldr	r1, [pc, #24]	; (8004940 <__NVIC_EnableIRQ+0x34>)
 8004926:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800492a:	095b      	lsrs	r3, r3, #5
 800492c:	2001      	movs	r0, #1
 800492e:	fa00 f202 	lsl.w	r2, r0, r2
 8004932:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004936:	bf00      	nop
 8004938:	370c      	adds	r7, #12
 800493a:	46bd      	mov	sp, r7
 800493c:	bc80      	pop	{r7}
 800493e:	4770      	bx	lr
 8004940:	e000e100 	.word	0xe000e100

08004944 <__NVIC_SetPriority>:
 8004944:	b480      	push	{r7}
 8004946:	b083      	sub	sp, #12
 8004948:	af00      	add	r7, sp, #0
 800494a:	4603      	mov	r3, r0
 800494c:	6039      	str	r1, [r7, #0]
 800494e:	71fb      	strb	r3, [r7, #7]
 8004950:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004954:	2b00      	cmp	r3, #0
 8004956:	db0a      	blt.n	800496e <__NVIC_SetPriority+0x2a>
 8004958:	683b      	ldr	r3, [r7, #0]
 800495a:	b2da      	uxtb	r2, r3
 800495c:	490c      	ldr	r1, [pc, #48]	; (8004990 <__NVIC_SetPriority+0x4c>)
 800495e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004962:	0112      	lsls	r2, r2, #4
 8004964:	b2d2      	uxtb	r2, r2
 8004966:	440b      	add	r3, r1
 8004968:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 800496c:	e00a      	b.n	8004984 <__NVIC_SetPriority+0x40>
 800496e:	683b      	ldr	r3, [r7, #0]
 8004970:	b2da      	uxtb	r2, r3
 8004972:	4908      	ldr	r1, [pc, #32]	; (8004994 <__NVIC_SetPriority+0x50>)
 8004974:	79fb      	ldrb	r3, [r7, #7]
 8004976:	f003 030f 	and.w	r3, r3, #15
 800497a:	3b04      	subs	r3, #4
 800497c:	0112      	lsls	r2, r2, #4
 800497e:	b2d2      	uxtb	r2, r2
 8004980:	440b      	add	r3, r1
 8004982:	761a      	strb	r2, [r3, #24]
 8004984:	bf00      	nop
 8004986:	370c      	adds	r7, #12
 8004988:	46bd      	mov	sp, r7
 800498a:	bc80      	pop	{r7}
 800498c:	4770      	bx	lr
 800498e:	bf00      	nop
 8004990:	e000e100 	.word	0xe000e100
 8004994:	e000ed00 	.word	0xe000ed00

08004998 <NVIC_EncodePriority>:
 8004998:	b480      	push	{r7}
 800499a:	b089      	sub	sp, #36	; 0x24
 800499c:	af00      	add	r7, sp, #0
 800499e:	60f8      	str	r0, [r7, #12]
 80049a0:	60b9      	str	r1, [r7, #8]
 80049a2:	607a      	str	r2, [r7, #4]
 80049a4:	68fb      	ldr	r3, [r7, #12]
 80049a6:	f003 0307 	and.w	r3, r3, #7
 80049aa:	61fb      	str	r3, [r7, #28]
 80049ac:	69fb      	ldr	r3, [r7, #28]
 80049ae:	f1c3 0307 	rsb	r3, r3, #7
 80049b2:	2b04      	cmp	r3, #4
 80049b4:	bf28      	it	cs
 80049b6:	2304      	movcs	r3, #4
 80049b8:	61bb      	str	r3, [r7, #24]
 80049ba:	69fb      	ldr	r3, [r7, #28]
 80049bc:	3304      	adds	r3, #4
 80049be:	2b06      	cmp	r3, #6
 80049c0:	d902      	bls.n	80049c8 <NVIC_EncodePriority+0x30>
 80049c2:	69fb      	ldr	r3, [r7, #28]
 80049c4:	3b03      	subs	r3, #3
 80049c6:	e000      	b.n	80049ca <NVIC_EncodePriority+0x32>
 80049c8:	2300      	movs	r3, #0
 80049ca:	617b      	str	r3, [r7, #20]
 80049cc:	f04f 32ff 	mov.w	r2, #4294967295
 80049d0:	69bb      	ldr	r3, [r7, #24]
 80049d2:	fa02 f303 	lsl.w	r3, r2, r3
 80049d6:	43da      	mvns	r2, r3
 80049d8:	68bb      	ldr	r3, [r7, #8]
 80049da:	401a      	ands	r2, r3
 80049dc:	697b      	ldr	r3, [r7, #20]
 80049de:	409a      	lsls	r2, r3
 80049e0:	f04f 31ff 	mov.w	r1, #4294967295
 80049e4:	697b      	ldr	r3, [r7, #20]
 80049e6:	fa01 f303 	lsl.w	r3, r1, r3
 80049ea:	43d9      	mvns	r1, r3
 80049ec:	687b      	ldr	r3, [r7, #4]
 80049ee:	400b      	ands	r3, r1
 80049f0:	4313      	orrs	r3, r2
 80049f2:	4618      	mov	r0, r3
 80049f4:	3724      	adds	r7, #36	; 0x24
 80049f6:	46bd      	mov	sp, r7
 80049f8:	bc80      	pop	{r7}
 80049fa:	4770      	bx	lr

080049fc <SysTick_Config>:
 80049fc:	b580      	push	{r7, lr}
 80049fe:	b082      	sub	sp, #8
 8004a00:	af00      	add	r7, sp, #0
 8004a02:	6078      	str	r0, [r7, #4]
 8004a04:	687b      	ldr	r3, [r7, #4]
 8004a06:	3b01      	subs	r3, #1
 8004a08:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8004a0c:	d301      	bcc.n	8004a12 <SysTick_Config+0x16>
 8004a0e:	2301      	movs	r3, #1
 8004a10:	e00f      	b.n	8004a32 <SysTick_Config+0x36>
 8004a12:	4a0a      	ldr	r2, [pc, #40]	; (8004a3c <SysTick_Config+0x40>)
 8004a14:	687b      	ldr	r3, [r7, #4]
 8004a16:	3b01      	subs	r3, #1
 8004a18:	6053      	str	r3, [r2, #4]
 8004a1a:	210f      	movs	r1, #15
 8004a1c:	f04f 30ff 	mov.w	r0, #4294967295
 8004a20:	f7ff ff90 	bl	8004944 <__NVIC_SetPriority>
 8004a24:	4b05      	ldr	r3, [pc, #20]	; (8004a3c <SysTick_Config+0x40>)
 8004a26:	2200      	movs	r2, #0
 8004a28:	609a      	str	r2, [r3, #8]
 8004a2a:	4b04      	ldr	r3, [pc, #16]	; (8004a3c <SysTick_Config+0x40>)
 8004a2c:	2207      	movs	r2, #7
 8004a2e:	601a      	str	r2, [r3, #0]
 8004a30:	2300      	movs	r3, #0
 8004a32:	4618      	mov	r0, r3
 8004a34:	3708      	adds	r7, #8
 8004a36:	46bd      	mov	sp, r7
 8004a38:	bd80      	pop	{r7, pc}
 8004a3a:	bf00      	nop
 8004a3c:	e000e010 	.word	0xe000e010

08004a40 <HAL_NVIC_SetPriorityGrouping>:
 8004a40:	b580      	push	{r7, lr}
 8004a42:	b082      	sub	sp, #8
 8004a44:	af00      	add	r7, sp, #0
 8004a46:	6078      	str	r0, [r7, #4]
 8004a48:	6878      	ldr	r0, [r7, #4]
 8004a4a:	f7ff ff2d 	bl	80048a8 <__NVIC_SetPriorityGrouping>
 8004a4e:	bf00      	nop
 8004a50:	3708      	adds	r7, #8
 8004a52:	46bd      	mov	sp, r7
 8004a54:	bd80      	pop	{r7, pc}

08004a56 <HAL_NVIC_SetPriority>:
 8004a56:	b580      	push	{r7, lr}
 8004a58:	b086      	sub	sp, #24
 8004a5a:	af00      	add	r7, sp, #0
 8004a5c:	4603      	mov	r3, r0
 8004a5e:	60b9      	str	r1, [r7, #8]
 8004a60:	607a      	str	r2, [r7, #4]
 8004a62:	73fb      	strb	r3, [r7, #15]
 8004a64:	2300      	movs	r3, #0
 8004a66:	617b      	str	r3, [r7, #20]
 8004a68:	f7ff ff42 	bl	80048f0 <__NVIC_GetPriorityGrouping>
 8004a6c:	6178      	str	r0, [r7, #20]
 8004a6e:	687a      	ldr	r2, [r7, #4]
 8004a70:	68b9      	ldr	r1, [r7, #8]
 8004a72:	6978      	ldr	r0, [r7, #20]
 8004a74:	f7ff ff90 	bl	8004998 <NVIC_EncodePriority>
 8004a78:	4602      	mov	r2, r0
 8004a7a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004a7e:	4611      	mov	r1, r2
 8004a80:	4618      	mov	r0, r3
 8004a82:	f7ff ff5f 	bl	8004944 <__NVIC_SetPriority>
 8004a86:	bf00      	nop
 8004a88:	3718      	adds	r7, #24
 8004a8a:	46bd      	mov	sp, r7
 8004a8c:	bd80      	pop	{r7, pc}

08004a8e <HAL_NVIC_EnableIRQ>:
 8004a8e:	b580      	push	{r7, lr}
 8004a90:	b082      	sub	sp, #8
 8004a92:	af00      	add	r7, sp, #0
 8004a94:	4603      	mov	r3, r0
 8004a96:	71fb      	strb	r3, [r7, #7]
 8004a98:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004a9c:	4618      	mov	r0, r3
 8004a9e:	f7ff ff35 	bl	800490c <__NVIC_EnableIRQ>
 8004aa2:	bf00      	nop
 8004aa4:	3708      	adds	r7, #8
 8004aa6:	46bd      	mov	sp, r7
 8004aa8:	bd80      	pop	{r7, pc}

08004aaa <HAL_SYSTICK_Config>:
 8004aaa:	b580      	push	{r7, lr}
 8004aac:	b082      	sub	sp, #8
 8004aae:	af00      	add	r7, sp, #0
 8004ab0:	6078      	str	r0, [r7, #4]
 8004ab2:	6878      	ldr	r0, [r7, #4]
 8004ab4:	f7ff ffa2 	bl	80049fc <SysTick_Config>
 8004ab8:	4603      	mov	r3, r0
 8004aba:	4618      	mov	r0, r3
 8004abc:	3708      	adds	r7, #8
 8004abe:	46bd      	mov	sp, r7
 8004ac0:	bd80      	pop	{r7, pc}
	...

08004ac4 <HAL_DMA_Init>:
 8004ac4:	b480      	push	{r7}
 8004ac6:	b085      	sub	sp, #20
 8004ac8:	af00      	add	r7, sp, #0
 8004aca:	6078      	str	r0, [r7, #4]
 8004acc:	2300      	movs	r3, #0
 8004ace:	60fb      	str	r3, [r7, #12]
 8004ad0:	687b      	ldr	r3, [r7, #4]
 8004ad2:	2b00      	cmp	r3, #0
 8004ad4:	d101      	bne.n	8004ada <HAL_DMA_Init+0x16>
 8004ad6:	2301      	movs	r3, #1
 8004ad8:	e043      	b.n	8004b62 <HAL_DMA_Init+0x9e>
 8004ada:	687b      	ldr	r3, [r7, #4]
 8004adc:	681b      	ldr	r3, [r3, #0]
 8004ade:	461a      	mov	r2, r3
 8004ae0:	4b22      	ldr	r3, [pc, #136]	; (8004b6c <HAL_DMA_Init+0xa8>)
 8004ae2:	4413      	add	r3, r2
 8004ae4:	4a22      	ldr	r2, [pc, #136]	; (8004b70 <HAL_DMA_Init+0xac>)
 8004ae6:	fba2 2303 	umull	r2, r3, r2, r3
 8004aea:	091b      	lsrs	r3, r3, #4
 8004aec:	009a      	lsls	r2, r3, #2
 8004aee:	687b      	ldr	r3, [r7, #4]
 8004af0:	641a      	str	r2, [r3, #64]	; 0x40
 8004af2:	687b      	ldr	r3, [r7, #4]
 8004af4:	4a1f      	ldr	r2, [pc, #124]	; (8004b74 <HAL_DMA_Init+0xb0>)
 8004af6:	63da      	str	r2, [r3, #60]	; 0x3c
 8004af8:	687b      	ldr	r3, [r7, #4]
 8004afa:	2202      	movs	r2, #2
 8004afc:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8004b00:	687b      	ldr	r3, [r7, #4]
 8004b02:	681b      	ldr	r3, [r3, #0]
 8004b04:	681b      	ldr	r3, [r3, #0]
 8004b06:	60fb      	str	r3, [r7, #12]
 8004b08:	68fb      	ldr	r3, [r7, #12]
 8004b0a:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8004b0e:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 8004b12:	60fb      	str	r3, [r7, #12]
 8004b14:	687b      	ldr	r3, [r7, #4]
 8004b16:	685a      	ldr	r2, [r3, #4]
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	689b      	ldr	r3, [r3, #8]
 8004b1c:	431a      	orrs	r2, r3
 8004b1e:	687b      	ldr	r3, [r7, #4]
 8004b20:	68db      	ldr	r3, [r3, #12]
 8004b22:	431a      	orrs	r2, r3
 8004b24:	687b      	ldr	r3, [r7, #4]
 8004b26:	691b      	ldr	r3, [r3, #16]
 8004b28:	431a      	orrs	r2, r3
 8004b2a:	687b      	ldr	r3, [r7, #4]
 8004b2c:	695b      	ldr	r3, [r3, #20]
 8004b2e:	431a      	orrs	r2, r3
 8004b30:	687b      	ldr	r3, [r7, #4]
 8004b32:	699b      	ldr	r3, [r3, #24]
 8004b34:	431a      	orrs	r2, r3
 8004b36:	687b      	ldr	r3, [r7, #4]
 8004b38:	69db      	ldr	r3, [r3, #28]
 8004b3a:	4313      	orrs	r3, r2
 8004b3c:	68fa      	ldr	r2, [r7, #12]
 8004b3e:	4313      	orrs	r3, r2
 8004b40:	60fb      	str	r3, [r7, #12]
 8004b42:	687b      	ldr	r3, [r7, #4]
 8004b44:	681b      	ldr	r3, [r3, #0]
 8004b46:	68fa      	ldr	r2, [r7, #12]
 8004b48:	601a      	str	r2, [r3, #0]
 8004b4a:	687b      	ldr	r3, [r7, #4]
 8004b4c:	2200      	movs	r2, #0
 8004b4e:	639a      	str	r2, [r3, #56]	; 0x38
 8004b50:	687b      	ldr	r3, [r7, #4]
 8004b52:	2201      	movs	r2, #1
 8004b54:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8004b58:	687b      	ldr	r3, [r7, #4]
 8004b5a:	2200      	movs	r2, #0
 8004b5c:	f883 2020 	strb.w	r2, [r3, #32]
 8004b60:	2300      	movs	r3, #0
 8004b62:	4618      	mov	r0, r3
 8004b64:	3714      	adds	r7, #20
 8004b66:	46bd      	mov	sp, r7
 8004b68:	bc80      	pop	{r7}
 8004b6a:	4770      	bx	lr
 8004b6c:	bffdfff8 	.word	0xbffdfff8
 8004b70:	cccccccd 	.word	0xcccccccd
 8004b74:	40020000 	.word	0x40020000

08004b78 <HAL_DMA_Start_IT>:
 8004b78:	b580      	push	{r7, lr}
 8004b7a:	b086      	sub	sp, #24
 8004b7c:	af00      	add	r7, sp, #0
 8004b7e:	60f8      	str	r0, [r7, #12]
 8004b80:	60b9      	str	r1, [r7, #8]
 8004b82:	607a      	str	r2, [r7, #4]
 8004b84:	603b      	str	r3, [r7, #0]
 8004b86:	2300      	movs	r3, #0
 8004b88:	75fb      	strb	r3, [r7, #23]
 8004b8a:	68fb      	ldr	r3, [r7, #12]
 8004b8c:	f893 3020 	ldrb.w	r3, [r3, #32]
 8004b90:	2b01      	cmp	r3, #1
 8004b92:	d101      	bne.n	8004b98 <HAL_DMA_Start_IT+0x20>
 8004b94:	2302      	movs	r3, #2
 8004b96:	e04a      	b.n	8004c2e <HAL_DMA_Start_IT+0xb6>
 8004b98:	68fb      	ldr	r3, [r7, #12]
 8004b9a:	2201      	movs	r2, #1
 8004b9c:	f883 2020 	strb.w	r2, [r3, #32]
 8004ba0:	68fb      	ldr	r3, [r7, #12]
 8004ba2:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8004ba6:	2b01      	cmp	r3, #1
 8004ba8:	d13a      	bne.n	8004c20 <HAL_DMA_Start_IT+0xa8>
 8004baa:	68fb      	ldr	r3, [r7, #12]
 8004bac:	2202      	movs	r2, #2
 8004bae:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8004bb2:	68fb      	ldr	r3, [r7, #12]
 8004bb4:	2200      	movs	r2, #0
 8004bb6:	639a      	str	r2, [r3, #56]	; 0x38
 8004bb8:	68fb      	ldr	r3, [r7, #12]
 8004bba:	681b      	ldr	r3, [r3, #0]
 8004bbc:	681a      	ldr	r2, [r3, #0]
 8004bbe:	68fb      	ldr	r3, [r7, #12]
 8004bc0:	681b      	ldr	r3, [r3, #0]
 8004bc2:	f022 0201 	bic.w	r2, r2, #1
 8004bc6:	601a      	str	r2, [r3, #0]
 8004bc8:	683b      	ldr	r3, [r7, #0]
 8004bca:	687a      	ldr	r2, [r7, #4]
 8004bcc:	68b9      	ldr	r1, [r7, #8]
 8004bce:	68f8      	ldr	r0, [r7, #12]
 8004bd0:	f000 f9e8 	bl	8004fa4 <DMA_SetConfig>
 8004bd4:	68fb      	ldr	r3, [r7, #12]
 8004bd6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004bd8:	2b00      	cmp	r3, #0
 8004bda:	d008      	beq.n	8004bee <HAL_DMA_Start_IT+0x76>
 8004bdc:	68fb      	ldr	r3, [r7, #12]
 8004bde:	681b      	ldr	r3, [r3, #0]
 8004be0:	681a      	ldr	r2, [r3, #0]
 8004be2:	68fb      	ldr	r3, [r7, #12]
 8004be4:	681b      	ldr	r3, [r3, #0]
 8004be6:	f042 020e 	orr.w	r2, r2, #14
 8004bea:	601a      	str	r2, [r3, #0]
 8004bec:	e00f      	b.n	8004c0e <HAL_DMA_Start_IT+0x96>
 8004bee:	68fb      	ldr	r3, [r7, #12]
 8004bf0:	681b      	ldr	r3, [r3, #0]
 8004bf2:	681a      	ldr	r2, [r3, #0]
 8004bf4:	68fb      	ldr	r3, [r7, #12]
 8004bf6:	681b      	ldr	r3, [r3, #0]
 8004bf8:	f022 0204 	bic.w	r2, r2, #4
 8004bfc:	601a      	str	r2, [r3, #0]
 8004bfe:	68fb      	ldr	r3, [r7, #12]
 8004c00:	681b      	ldr	r3, [r3, #0]
 8004c02:	681a      	ldr	r2, [r3, #0]
 8004c04:	68fb      	ldr	r3, [r7, #12]
 8004c06:	681b      	ldr	r3, [r3, #0]
 8004c08:	f042 020a 	orr.w	r2, r2, #10
 8004c0c:	601a      	str	r2, [r3, #0]
 8004c0e:	68fb      	ldr	r3, [r7, #12]
 8004c10:	681b      	ldr	r3, [r3, #0]
 8004c12:	681a      	ldr	r2, [r3, #0]
 8004c14:	68fb      	ldr	r3, [r7, #12]
 8004c16:	681b      	ldr	r3, [r3, #0]
 8004c18:	f042 0201 	orr.w	r2, r2, #1
 8004c1c:	601a      	str	r2, [r3, #0]
 8004c1e:	e005      	b.n	8004c2c <HAL_DMA_Start_IT+0xb4>
 8004c20:	68fb      	ldr	r3, [r7, #12]
 8004c22:	2200      	movs	r2, #0
 8004c24:	f883 2020 	strb.w	r2, [r3, #32]
 8004c28:	2302      	movs	r3, #2
 8004c2a:	75fb      	strb	r3, [r7, #23]
 8004c2c:	7dfb      	ldrb	r3, [r7, #23]
 8004c2e:	4618      	mov	r0, r3
 8004c30:	3718      	adds	r7, #24
 8004c32:	46bd      	mov	sp, r7
 8004c34:	bd80      	pop	{r7, pc}

08004c36 <HAL_DMA_Abort>:
 8004c36:	b480      	push	{r7}
 8004c38:	b085      	sub	sp, #20
 8004c3a:	af00      	add	r7, sp, #0
 8004c3c:	6078      	str	r0, [r7, #4]
 8004c3e:	2300      	movs	r3, #0
 8004c40:	73fb      	strb	r3, [r7, #15]
 8004c42:	687b      	ldr	r3, [r7, #4]
 8004c44:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8004c48:	2b02      	cmp	r3, #2
 8004c4a:	d008      	beq.n	8004c5e <HAL_DMA_Abort+0x28>
 8004c4c:	687b      	ldr	r3, [r7, #4]
 8004c4e:	2204      	movs	r2, #4
 8004c50:	639a      	str	r2, [r3, #56]	; 0x38
 8004c52:	687b      	ldr	r3, [r7, #4]
 8004c54:	2200      	movs	r2, #0
 8004c56:	f883 2020 	strb.w	r2, [r3, #32]
 8004c5a:	2301      	movs	r3, #1
 8004c5c:	e020      	b.n	8004ca0 <HAL_DMA_Abort+0x6a>
 8004c5e:	687b      	ldr	r3, [r7, #4]
 8004c60:	681b      	ldr	r3, [r3, #0]
 8004c62:	681a      	ldr	r2, [r3, #0]
 8004c64:	687b      	ldr	r3, [r7, #4]
 8004c66:	681b      	ldr	r3, [r3, #0]
 8004c68:	f022 020e 	bic.w	r2, r2, #14
 8004c6c:	601a      	str	r2, [r3, #0]
 8004c6e:	687b      	ldr	r3, [r7, #4]
 8004c70:	681b      	ldr	r3, [r3, #0]
 8004c72:	681a      	ldr	r2, [r3, #0]
 8004c74:	687b      	ldr	r3, [r7, #4]
 8004c76:	681b      	ldr	r3, [r3, #0]
 8004c78:	f022 0201 	bic.w	r2, r2, #1
 8004c7c:	601a      	str	r2, [r3, #0]
 8004c7e:	687b      	ldr	r3, [r7, #4]
 8004c80:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004c82:	687b      	ldr	r3, [r7, #4]
 8004c84:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004c86:	2101      	movs	r1, #1
 8004c88:	fa01 f202 	lsl.w	r2, r1, r2
 8004c8c:	605a      	str	r2, [r3, #4]
 8004c8e:	687b      	ldr	r3, [r7, #4]
 8004c90:	2201      	movs	r2, #1
 8004c92:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8004c96:	687b      	ldr	r3, [r7, #4]
 8004c98:	2200      	movs	r2, #0
 8004c9a:	f883 2020 	strb.w	r2, [r3, #32]
 8004c9e:	7bfb      	ldrb	r3, [r7, #15]
 8004ca0:	4618      	mov	r0, r3
 8004ca2:	3714      	adds	r7, #20
 8004ca4:	46bd      	mov	sp, r7
 8004ca6:	bc80      	pop	{r7}
 8004ca8:	4770      	bx	lr
	...

08004cac <HAL_DMA_Abort_IT>:
 8004cac:	b580      	push	{r7, lr}
 8004cae:	b084      	sub	sp, #16
 8004cb0:	af00      	add	r7, sp, #0
 8004cb2:	6078      	str	r0, [r7, #4]
 8004cb4:	2300      	movs	r3, #0
 8004cb6:	73fb      	strb	r3, [r7, #15]
 8004cb8:	687b      	ldr	r3, [r7, #4]
 8004cba:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8004cbe:	2b02      	cmp	r3, #2
 8004cc0:	d005      	beq.n	8004cce <HAL_DMA_Abort_IT+0x22>
 8004cc2:	687b      	ldr	r3, [r7, #4]
 8004cc4:	2204      	movs	r2, #4
 8004cc6:	639a      	str	r2, [r3, #56]	; 0x38
 8004cc8:	2301      	movs	r3, #1
 8004cca:	73fb      	strb	r3, [r7, #15]
 8004ccc:	e051      	b.n	8004d72 <HAL_DMA_Abort_IT+0xc6>
 8004cce:	687b      	ldr	r3, [r7, #4]
 8004cd0:	681b      	ldr	r3, [r3, #0]
 8004cd2:	681a      	ldr	r2, [r3, #0]
 8004cd4:	687b      	ldr	r3, [r7, #4]
 8004cd6:	681b      	ldr	r3, [r3, #0]
 8004cd8:	f022 020e 	bic.w	r2, r2, #14
 8004cdc:	601a      	str	r2, [r3, #0]
 8004cde:	687b      	ldr	r3, [r7, #4]
 8004ce0:	681b      	ldr	r3, [r3, #0]
 8004ce2:	681a      	ldr	r2, [r3, #0]
 8004ce4:	687b      	ldr	r3, [r7, #4]
 8004ce6:	681b      	ldr	r3, [r3, #0]
 8004ce8:	f022 0201 	bic.w	r2, r2, #1
 8004cec:	601a      	str	r2, [r3, #0]
 8004cee:	687b      	ldr	r3, [r7, #4]
 8004cf0:	681b      	ldr	r3, [r3, #0]
 8004cf2:	4a22      	ldr	r2, [pc, #136]	; (8004d7c <HAL_DMA_Abort_IT+0xd0>)
 8004cf4:	4293      	cmp	r3, r2
 8004cf6:	d029      	beq.n	8004d4c <HAL_DMA_Abort_IT+0xa0>
 8004cf8:	687b      	ldr	r3, [r7, #4]
 8004cfa:	681b      	ldr	r3, [r3, #0]
 8004cfc:	4a20      	ldr	r2, [pc, #128]	; (8004d80 <HAL_DMA_Abort_IT+0xd4>)
 8004cfe:	4293      	cmp	r3, r2
 8004d00:	d022      	beq.n	8004d48 <HAL_DMA_Abort_IT+0x9c>
 8004d02:	687b      	ldr	r3, [r7, #4]
 8004d04:	681b      	ldr	r3, [r3, #0]
 8004d06:	4a1f      	ldr	r2, [pc, #124]	; (8004d84 <HAL_DMA_Abort_IT+0xd8>)
 8004d08:	4293      	cmp	r3, r2
 8004d0a:	d01a      	beq.n	8004d42 <HAL_DMA_Abort_IT+0x96>
 8004d0c:	687b      	ldr	r3, [r7, #4]
 8004d0e:	681b      	ldr	r3, [r3, #0]
 8004d10:	4a1d      	ldr	r2, [pc, #116]	; (8004d88 <HAL_DMA_Abort_IT+0xdc>)
 8004d12:	4293      	cmp	r3, r2
 8004d14:	d012      	beq.n	8004d3c <HAL_DMA_Abort_IT+0x90>
 8004d16:	687b      	ldr	r3, [r7, #4]
 8004d18:	681b      	ldr	r3, [r3, #0]
 8004d1a:	4a1c      	ldr	r2, [pc, #112]	; (8004d8c <HAL_DMA_Abort_IT+0xe0>)
 8004d1c:	4293      	cmp	r3, r2
 8004d1e:	d00a      	beq.n	8004d36 <HAL_DMA_Abort_IT+0x8a>
 8004d20:	687b      	ldr	r3, [r7, #4]
 8004d22:	681b      	ldr	r3, [r3, #0]
 8004d24:	4a1a      	ldr	r2, [pc, #104]	; (8004d90 <HAL_DMA_Abort_IT+0xe4>)
 8004d26:	4293      	cmp	r3, r2
 8004d28:	d102      	bne.n	8004d30 <HAL_DMA_Abort_IT+0x84>
 8004d2a:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8004d2e:	e00e      	b.n	8004d4e <HAL_DMA_Abort_IT+0xa2>
 8004d30:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8004d34:	e00b      	b.n	8004d4e <HAL_DMA_Abort_IT+0xa2>
 8004d36:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8004d3a:	e008      	b.n	8004d4e <HAL_DMA_Abort_IT+0xa2>
 8004d3c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004d40:	e005      	b.n	8004d4e <HAL_DMA_Abort_IT+0xa2>
 8004d42:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004d46:	e002      	b.n	8004d4e <HAL_DMA_Abort_IT+0xa2>
 8004d48:	2310      	movs	r3, #16
 8004d4a:	e000      	b.n	8004d4e <HAL_DMA_Abort_IT+0xa2>
 8004d4c:	2301      	movs	r3, #1
 8004d4e:	4a11      	ldr	r2, [pc, #68]	; (8004d94 <HAL_DMA_Abort_IT+0xe8>)
 8004d50:	6053      	str	r3, [r2, #4]
 8004d52:	687b      	ldr	r3, [r7, #4]
 8004d54:	2201      	movs	r2, #1
 8004d56:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8004d5a:	687b      	ldr	r3, [r7, #4]
 8004d5c:	2200      	movs	r2, #0
 8004d5e:	f883 2020 	strb.w	r2, [r3, #32]
 8004d62:	687b      	ldr	r3, [r7, #4]
 8004d64:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004d66:	2b00      	cmp	r3, #0
 8004d68:	d003      	beq.n	8004d72 <HAL_DMA_Abort_IT+0xc6>
 8004d6a:	687b      	ldr	r3, [r7, #4]
 8004d6c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004d6e:	6878      	ldr	r0, [r7, #4]
 8004d70:	4798      	blx	r3
 8004d72:	7bfb      	ldrb	r3, [r7, #15]
 8004d74:	4618      	mov	r0, r3
 8004d76:	3710      	adds	r7, #16
 8004d78:	46bd      	mov	sp, r7
 8004d7a:	bd80      	pop	{r7, pc}
 8004d7c:	40020008 	.word	0x40020008
 8004d80:	4002001c 	.word	0x4002001c
 8004d84:	40020030 	.word	0x40020030
 8004d88:	40020044 	.word	0x40020044
 8004d8c:	40020058 	.word	0x40020058
 8004d90:	4002006c 	.word	0x4002006c
 8004d94:	40020000 	.word	0x40020000

08004d98 <HAL_DMA_IRQHandler>:
 8004d98:	b580      	push	{r7, lr}
 8004d9a:	b084      	sub	sp, #16
 8004d9c:	af00      	add	r7, sp, #0
 8004d9e:	6078      	str	r0, [r7, #4]
 8004da0:	687b      	ldr	r3, [r7, #4]
 8004da2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004da4:	681b      	ldr	r3, [r3, #0]
 8004da6:	60fb      	str	r3, [r7, #12]
 8004da8:	687b      	ldr	r3, [r7, #4]
 8004daa:	681b      	ldr	r3, [r3, #0]
 8004dac:	681b      	ldr	r3, [r3, #0]
 8004dae:	60bb      	str	r3, [r7, #8]
 8004db0:	687b      	ldr	r3, [r7, #4]
 8004db2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004db4:	2204      	movs	r2, #4
 8004db6:	409a      	lsls	r2, r3
 8004db8:	68fb      	ldr	r3, [r7, #12]
 8004dba:	4013      	ands	r3, r2
 8004dbc:	2b00      	cmp	r3, #0
 8004dbe:	d04f      	beq.n	8004e60 <HAL_DMA_IRQHandler+0xc8>
 8004dc0:	68bb      	ldr	r3, [r7, #8]
 8004dc2:	f003 0304 	and.w	r3, r3, #4
 8004dc6:	2b00      	cmp	r3, #0
 8004dc8:	d04a      	beq.n	8004e60 <HAL_DMA_IRQHandler+0xc8>
 8004dca:	687b      	ldr	r3, [r7, #4]
 8004dcc:	681b      	ldr	r3, [r3, #0]
 8004dce:	681b      	ldr	r3, [r3, #0]
 8004dd0:	f003 0320 	and.w	r3, r3, #32
 8004dd4:	2b00      	cmp	r3, #0
 8004dd6:	d107      	bne.n	8004de8 <HAL_DMA_IRQHandler+0x50>
 8004dd8:	687b      	ldr	r3, [r7, #4]
 8004dda:	681b      	ldr	r3, [r3, #0]
 8004ddc:	681a      	ldr	r2, [r3, #0]
 8004dde:	687b      	ldr	r3, [r7, #4]
 8004de0:	681b      	ldr	r3, [r3, #0]
 8004de2:	f022 0204 	bic.w	r2, r2, #4
 8004de6:	601a      	str	r2, [r3, #0]
 8004de8:	687b      	ldr	r3, [r7, #4]
 8004dea:	681b      	ldr	r3, [r3, #0]
 8004dec:	4a66      	ldr	r2, [pc, #408]	; (8004f88 <HAL_DMA_IRQHandler+0x1f0>)
 8004dee:	4293      	cmp	r3, r2
 8004df0:	d029      	beq.n	8004e46 <HAL_DMA_IRQHandler+0xae>
 8004df2:	687b      	ldr	r3, [r7, #4]
 8004df4:	681b      	ldr	r3, [r3, #0]
 8004df6:	4a65      	ldr	r2, [pc, #404]	; (8004f8c <HAL_DMA_IRQHandler+0x1f4>)
 8004df8:	4293      	cmp	r3, r2
 8004dfa:	d022      	beq.n	8004e42 <HAL_DMA_IRQHandler+0xaa>
 8004dfc:	687b      	ldr	r3, [r7, #4]
 8004dfe:	681b      	ldr	r3, [r3, #0]
 8004e00:	4a63      	ldr	r2, [pc, #396]	; (8004f90 <HAL_DMA_IRQHandler+0x1f8>)
 8004e02:	4293      	cmp	r3, r2
 8004e04:	d01a      	beq.n	8004e3c <HAL_DMA_IRQHandler+0xa4>
 8004e06:	687b      	ldr	r3, [r7, #4]
 8004e08:	681b      	ldr	r3, [r3, #0]
 8004e0a:	4a62      	ldr	r2, [pc, #392]	; (8004f94 <HAL_DMA_IRQHandler+0x1fc>)
 8004e0c:	4293      	cmp	r3, r2
 8004e0e:	d012      	beq.n	8004e36 <HAL_DMA_IRQHandler+0x9e>
 8004e10:	687b      	ldr	r3, [r7, #4]
 8004e12:	681b      	ldr	r3, [r3, #0]
 8004e14:	4a60      	ldr	r2, [pc, #384]	; (8004f98 <HAL_DMA_IRQHandler+0x200>)
 8004e16:	4293      	cmp	r3, r2
 8004e18:	d00a      	beq.n	8004e30 <HAL_DMA_IRQHandler+0x98>
 8004e1a:	687b      	ldr	r3, [r7, #4]
 8004e1c:	681b      	ldr	r3, [r3, #0]
 8004e1e:	4a5f      	ldr	r2, [pc, #380]	; (8004f9c <HAL_DMA_IRQHandler+0x204>)
 8004e20:	4293      	cmp	r3, r2
 8004e22:	d102      	bne.n	8004e2a <HAL_DMA_IRQHandler+0x92>
 8004e24:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8004e28:	e00e      	b.n	8004e48 <HAL_DMA_IRQHandler+0xb0>
 8004e2a:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
 8004e2e:	e00b      	b.n	8004e48 <HAL_DMA_IRQHandler+0xb0>
 8004e30:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8004e34:	e008      	b.n	8004e48 <HAL_DMA_IRQHandler+0xb0>
 8004e36:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8004e3a:	e005      	b.n	8004e48 <HAL_DMA_IRQHandler+0xb0>
 8004e3c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004e40:	e002      	b.n	8004e48 <HAL_DMA_IRQHandler+0xb0>
 8004e42:	2340      	movs	r3, #64	; 0x40
 8004e44:	e000      	b.n	8004e48 <HAL_DMA_IRQHandler+0xb0>
 8004e46:	2304      	movs	r3, #4
 8004e48:	4a55      	ldr	r2, [pc, #340]	; (8004fa0 <HAL_DMA_IRQHandler+0x208>)
 8004e4a:	6053      	str	r3, [r2, #4]
 8004e4c:	687b      	ldr	r3, [r7, #4]
 8004e4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004e50:	2b00      	cmp	r3, #0
 8004e52:	f000 8094 	beq.w	8004f7e <HAL_DMA_IRQHandler+0x1e6>
 8004e56:	687b      	ldr	r3, [r7, #4]
 8004e58:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004e5a:	6878      	ldr	r0, [r7, #4]
 8004e5c:	4798      	blx	r3
 8004e5e:	e08e      	b.n	8004f7e <HAL_DMA_IRQHandler+0x1e6>
 8004e60:	687b      	ldr	r3, [r7, #4]
 8004e62:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e64:	2202      	movs	r2, #2
 8004e66:	409a      	lsls	r2, r3
 8004e68:	68fb      	ldr	r3, [r7, #12]
 8004e6a:	4013      	ands	r3, r2
 8004e6c:	2b00      	cmp	r3, #0
 8004e6e:	d056      	beq.n	8004f1e <HAL_DMA_IRQHandler+0x186>
 8004e70:	68bb      	ldr	r3, [r7, #8]
 8004e72:	f003 0302 	and.w	r3, r3, #2
 8004e76:	2b00      	cmp	r3, #0
 8004e78:	d051      	beq.n	8004f1e <HAL_DMA_IRQHandler+0x186>
 8004e7a:	687b      	ldr	r3, [r7, #4]
 8004e7c:	681b      	ldr	r3, [r3, #0]
 8004e7e:	681b      	ldr	r3, [r3, #0]
 8004e80:	f003 0320 	and.w	r3, r3, #32
 8004e84:	2b00      	cmp	r3, #0
 8004e86:	d10b      	bne.n	8004ea0 <HAL_DMA_IRQHandler+0x108>
 8004e88:	687b      	ldr	r3, [r7, #4]
 8004e8a:	681b      	ldr	r3, [r3, #0]
 8004e8c:	681a      	ldr	r2, [r3, #0]
 8004e8e:	687b      	ldr	r3, [r7, #4]
 8004e90:	681b      	ldr	r3, [r3, #0]
 8004e92:	f022 020a 	bic.w	r2, r2, #10
 8004e96:	601a      	str	r2, [r3, #0]
 8004e98:	687b      	ldr	r3, [r7, #4]
 8004e9a:	2201      	movs	r2, #1
 8004e9c:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8004ea0:	687b      	ldr	r3, [r7, #4]
 8004ea2:	681b      	ldr	r3, [r3, #0]
 8004ea4:	4a38      	ldr	r2, [pc, #224]	; (8004f88 <HAL_DMA_IRQHandler+0x1f0>)
 8004ea6:	4293      	cmp	r3, r2
 8004ea8:	d029      	beq.n	8004efe <HAL_DMA_IRQHandler+0x166>
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	681b      	ldr	r3, [r3, #0]
 8004eae:	4a37      	ldr	r2, [pc, #220]	; (8004f8c <HAL_DMA_IRQHandler+0x1f4>)
 8004eb0:	4293      	cmp	r3, r2
 8004eb2:	d022      	beq.n	8004efa <HAL_DMA_IRQHandler+0x162>
 8004eb4:	687b      	ldr	r3, [r7, #4]
 8004eb6:	681b      	ldr	r3, [r3, #0]
 8004eb8:	4a35      	ldr	r2, [pc, #212]	; (8004f90 <HAL_DMA_IRQHandler+0x1f8>)
 8004eba:	4293      	cmp	r3, r2
 8004ebc:	d01a      	beq.n	8004ef4 <HAL_DMA_IRQHandler+0x15c>
 8004ebe:	687b      	ldr	r3, [r7, #4]
 8004ec0:	681b      	ldr	r3, [r3, #0]
 8004ec2:	4a34      	ldr	r2, [pc, #208]	; (8004f94 <HAL_DMA_IRQHandler+0x1fc>)
 8004ec4:	4293      	cmp	r3, r2
 8004ec6:	d012      	beq.n	8004eee <HAL_DMA_IRQHandler+0x156>
 8004ec8:	687b      	ldr	r3, [r7, #4]
 8004eca:	681b      	ldr	r3, [r3, #0]
 8004ecc:	4a32      	ldr	r2, [pc, #200]	; (8004f98 <HAL_DMA_IRQHandler+0x200>)
 8004ece:	4293      	cmp	r3, r2
 8004ed0:	d00a      	beq.n	8004ee8 <HAL_DMA_IRQHandler+0x150>
 8004ed2:	687b      	ldr	r3, [r7, #4]
 8004ed4:	681b      	ldr	r3, [r3, #0]
 8004ed6:	4a31      	ldr	r2, [pc, #196]	; (8004f9c <HAL_DMA_IRQHandler+0x204>)
 8004ed8:	4293      	cmp	r3, r2
 8004eda:	d102      	bne.n	8004ee2 <HAL_DMA_IRQHandler+0x14a>
 8004edc:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
 8004ee0:	e00e      	b.n	8004f00 <HAL_DMA_IRQHandler+0x168>
 8004ee2:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8004ee6:	e00b      	b.n	8004f00 <HAL_DMA_IRQHandler+0x168>
 8004ee8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8004eec:	e008      	b.n	8004f00 <HAL_DMA_IRQHandler+0x168>
 8004eee:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8004ef2:	e005      	b.n	8004f00 <HAL_DMA_IRQHandler+0x168>
 8004ef4:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004ef8:	e002      	b.n	8004f00 <HAL_DMA_IRQHandler+0x168>
 8004efa:	2320      	movs	r3, #32
 8004efc:	e000      	b.n	8004f00 <HAL_DMA_IRQHandler+0x168>
 8004efe:	2302      	movs	r3, #2
 8004f00:	4a27      	ldr	r2, [pc, #156]	; (8004fa0 <HAL_DMA_IRQHandler+0x208>)
 8004f02:	6053      	str	r3, [r2, #4]
 8004f04:	687b      	ldr	r3, [r7, #4]
 8004f06:	2200      	movs	r2, #0
 8004f08:	f883 2020 	strb.w	r2, [r3, #32]
 8004f0c:	687b      	ldr	r3, [r7, #4]
 8004f0e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004f10:	2b00      	cmp	r3, #0
 8004f12:	d034      	beq.n	8004f7e <HAL_DMA_IRQHandler+0x1e6>
 8004f14:	687b      	ldr	r3, [r7, #4]
 8004f16:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004f18:	6878      	ldr	r0, [r7, #4]
 8004f1a:	4798      	blx	r3
 8004f1c:	e02f      	b.n	8004f7e <HAL_DMA_IRQHandler+0x1e6>
 8004f1e:	687b      	ldr	r3, [r7, #4]
 8004f20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f22:	2208      	movs	r2, #8
 8004f24:	409a      	lsls	r2, r3
 8004f26:	68fb      	ldr	r3, [r7, #12]
 8004f28:	4013      	ands	r3, r2
 8004f2a:	2b00      	cmp	r3, #0
 8004f2c:	d028      	beq.n	8004f80 <HAL_DMA_IRQHandler+0x1e8>
 8004f2e:	68bb      	ldr	r3, [r7, #8]
 8004f30:	f003 0308 	and.w	r3, r3, #8
 8004f34:	2b00      	cmp	r3, #0
 8004f36:	d023      	beq.n	8004f80 <HAL_DMA_IRQHandler+0x1e8>
 8004f38:	687b      	ldr	r3, [r7, #4]
 8004f3a:	681b      	ldr	r3, [r3, #0]
 8004f3c:	681a      	ldr	r2, [r3, #0]
 8004f3e:	687b      	ldr	r3, [r7, #4]
 8004f40:	681b      	ldr	r3, [r3, #0]
 8004f42:	f022 020e 	bic.w	r2, r2, #14
 8004f46:	601a      	str	r2, [r3, #0]
 8004f48:	687b      	ldr	r3, [r7, #4]
 8004f4a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004f4c:	687b      	ldr	r3, [r7, #4]
 8004f4e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004f50:	2101      	movs	r1, #1
 8004f52:	fa01 f202 	lsl.w	r2, r1, r2
 8004f56:	605a      	str	r2, [r3, #4]
 8004f58:	687b      	ldr	r3, [r7, #4]
 8004f5a:	2201      	movs	r2, #1
 8004f5c:	639a      	str	r2, [r3, #56]	; 0x38
 8004f5e:	687b      	ldr	r3, [r7, #4]
 8004f60:	2201      	movs	r2, #1
 8004f62:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8004f66:	687b      	ldr	r3, [r7, #4]
 8004f68:	2200      	movs	r2, #0
 8004f6a:	f883 2020 	strb.w	r2, [r3, #32]
 8004f6e:	687b      	ldr	r3, [r7, #4]
 8004f70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f72:	2b00      	cmp	r3, #0
 8004f74:	d004      	beq.n	8004f80 <HAL_DMA_IRQHandler+0x1e8>
 8004f76:	687b      	ldr	r3, [r7, #4]
 8004f78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f7a:	6878      	ldr	r0, [r7, #4]
 8004f7c:	4798      	blx	r3
 8004f7e:	bf00      	nop
 8004f80:	bf00      	nop
 8004f82:	3710      	adds	r7, #16
 8004f84:	46bd      	mov	sp, r7
 8004f86:	bd80      	pop	{r7, pc}
 8004f88:	40020008 	.word	0x40020008
 8004f8c:	4002001c 	.word	0x4002001c
 8004f90:	40020030 	.word	0x40020030
 8004f94:	40020044 	.word	0x40020044
 8004f98:	40020058 	.word	0x40020058
 8004f9c:	4002006c 	.word	0x4002006c
 8004fa0:	40020000 	.word	0x40020000

08004fa4 <DMA_SetConfig>:
 8004fa4:	b480      	push	{r7}
 8004fa6:	b085      	sub	sp, #20
 8004fa8:	af00      	add	r7, sp, #0
 8004faa:	60f8      	str	r0, [r7, #12]
 8004fac:	60b9      	str	r1, [r7, #8]
 8004fae:	607a      	str	r2, [r7, #4]
 8004fb0:	603b      	str	r3, [r7, #0]
 8004fb2:	68fb      	ldr	r3, [r7, #12]
 8004fb4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004fb6:	68fb      	ldr	r3, [r7, #12]
 8004fb8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004fba:	2101      	movs	r1, #1
 8004fbc:	fa01 f202 	lsl.w	r2, r1, r2
 8004fc0:	605a      	str	r2, [r3, #4]
 8004fc2:	68fb      	ldr	r3, [r7, #12]
 8004fc4:	681b      	ldr	r3, [r3, #0]
 8004fc6:	683a      	ldr	r2, [r7, #0]
 8004fc8:	605a      	str	r2, [r3, #4]
 8004fca:	68fb      	ldr	r3, [r7, #12]
 8004fcc:	685b      	ldr	r3, [r3, #4]
 8004fce:	2b10      	cmp	r3, #16
 8004fd0:	d108      	bne.n	8004fe4 <DMA_SetConfig+0x40>
 8004fd2:	68fb      	ldr	r3, [r7, #12]
 8004fd4:	681b      	ldr	r3, [r3, #0]
 8004fd6:	687a      	ldr	r2, [r7, #4]
 8004fd8:	609a      	str	r2, [r3, #8]
 8004fda:	68fb      	ldr	r3, [r7, #12]
 8004fdc:	681b      	ldr	r3, [r3, #0]
 8004fde:	68ba      	ldr	r2, [r7, #8]
 8004fe0:	60da      	str	r2, [r3, #12]
 8004fe2:	e007      	b.n	8004ff4 <DMA_SetConfig+0x50>
 8004fe4:	68fb      	ldr	r3, [r7, #12]
 8004fe6:	681b      	ldr	r3, [r3, #0]
 8004fe8:	68ba      	ldr	r2, [r7, #8]
 8004fea:	609a      	str	r2, [r3, #8]
 8004fec:	68fb      	ldr	r3, [r7, #12]
 8004fee:	681b      	ldr	r3, [r3, #0]
 8004ff0:	687a      	ldr	r2, [r7, #4]
 8004ff2:	60da      	str	r2, [r3, #12]
 8004ff4:	bf00      	nop
 8004ff6:	3714      	adds	r7, #20
 8004ff8:	46bd      	mov	sp, r7
 8004ffa:	bc80      	pop	{r7}
 8004ffc:	4770      	bx	lr
	...

08005000 <HAL_GPIO_Init>:
 8005000:	b480      	push	{r7}
 8005002:	b08b      	sub	sp, #44	; 0x2c
 8005004:	af00      	add	r7, sp, #0
 8005006:	6078      	str	r0, [r7, #4]
 8005008:	6039      	str	r1, [r7, #0]
 800500a:	2300      	movs	r3, #0
 800500c:	627b      	str	r3, [r7, #36]	; 0x24
 800500e:	2300      	movs	r3, #0
 8005010:	623b      	str	r3, [r7, #32]
 8005012:	e169      	b.n	80052e8 <HAL_GPIO_Init+0x2e8>
 8005014:	2201      	movs	r2, #1
 8005016:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005018:	fa02 f303 	lsl.w	r3, r2, r3
 800501c:	61fb      	str	r3, [r7, #28]
 800501e:	683b      	ldr	r3, [r7, #0]
 8005020:	681b      	ldr	r3, [r3, #0]
 8005022:	69fa      	ldr	r2, [r7, #28]
 8005024:	4013      	ands	r3, r2
 8005026:	61bb      	str	r3, [r7, #24]
 8005028:	69ba      	ldr	r2, [r7, #24]
 800502a:	69fb      	ldr	r3, [r7, #28]
 800502c:	429a      	cmp	r2, r3
 800502e:	f040 8158 	bne.w	80052e2 <HAL_GPIO_Init+0x2e2>
 8005032:	683b      	ldr	r3, [r7, #0]
 8005034:	685b      	ldr	r3, [r3, #4]
 8005036:	4a9a      	ldr	r2, [pc, #616]	; (80052a0 <HAL_GPIO_Init+0x2a0>)
 8005038:	4293      	cmp	r3, r2
 800503a:	d05e      	beq.n	80050fa <HAL_GPIO_Init+0xfa>
 800503c:	4a98      	ldr	r2, [pc, #608]	; (80052a0 <HAL_GPIO_Init+0x2a0>)
 800503e:	4293      	cmp	r3, r2
 8005040:	d875      	bhi.n	800512e <HAL_GPIO_Init+0x12e>
 8005042:	4a98      	ldr	r2, [pc, #608]	; (80052a4 <HAL_GPIO_Init+0x2a4>)
 8005044:	4293      	cmp	r3, r2
 8005046:	d058      	beq.n	80050fa <HAL_GPIO_Init+0xfa>
 8005048:	4a96      	ldr	r2, [pc, #600]	; (80052a4 <HAL_GPIO_Init+0x2a4>)
 800504a:	4293      	cmp	r3, r2
 800504c:	d86f      	bhi.n	800512e <HAL_GPIO_Init+0x12e>
 800504e:	4a96      	ldr	r2, [pc, #600]	; (80052a8 <HAL_GPIO_Init+0x2a8>)
 8005050:	4293      	cmp	r3, r2
 8005052:	d052      	beq.n	80050fa <HAL_GPIO_Init+0xfa>
 8005054:	4a94      	ldr	r2, [pc, #592]	; (80052a8 <HAL_GPIO_Init+0x2a8>)
 8005056:	4293      	cmp	r3, r2
 8005058:	d869      	bhi.n	800512e <HAL_GPIO_Init+0x12e>
 800505a:	4a94      	ldr	r2, [pc, #592]	; (80052ac <HAL_GPIO_Init+0x2ac>)
 800505c:	4293      	cmp	r3, r2
 800505e:	d04c      	beq.n	80050fa <HAL_GPIO_Init+0xfa>
 8005060:	4a92      	ldr	r2, [pc, #584]	; (80052ac <HAL_GPIO_Init+0x2ac>)
 8005062:	4293      	cmp	r3, r2
 8005064:	d863      	bhi.n	800512e <HAL_GPIO_Init+0x12e>
 8005066:	4a92      	ldr	r2, [pc, #584]	; (80052b0 <HAL_GPIO_Init+0x2b0>)
 8005068:	4293      	cmp	r3, r2
 800506a:	d046      	beq.n	80050fa <HAL_GPIO_Init+0xfa>
 800506c:	4a90      	ldr	r2, [pc, #576]	; (80052b0 <HAL_GPIO_Init+0x2b0>)
 800506e:	4293      	cmp	r3, r2
 8005070:	d85d      	bhi.n	800512e <HAL_GPIO_Init+0x12e>
 8005072:	2b12      	cmp	r3, #18
 8005074:	d82a      	bhi.n	80050cc <HAL_GPIO_Init+0xcc>
 8005076:	2b12      	cmp	r3, #18
 8005078:	d859      	bhi.n	800512e <HAL_GPIO_Init+0x12e>
 800507a:	a201      	add	r2, pc, #4	; (adr r2, 8005080 <HAL_GPIO_Init+0x80>)
 800507c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005080:	080050fb 	.word	0x080050fb
 8005084:	080050d5 	.word	0x080050d5
 8005088:	080050e7 	.word	0x080050e7
 800508c:	08005129 	.word	0x08005129
 8005090:	0800512f 	.word	0x0800512f
 8005094:	0800512f 	.word	0x0800512f
 8005098:	0800512f 	.word	0x0800512f
 800509c:	0800512f 	.word	0x0800512f
 80050a0:	0800512f 	.word	0x0800512f
 80050a4:	0800512f 	.word	0x0800512f
 80050a8:	0800512f 	.word	0x0800512f
 80050ac:	0800512f 	.word	0x0800512f
 80050b0:	0800512f 	.word	0x0800512f
 80050b4:	0800512f 	.word	0x0800512f
 80050b8:	0800512f 	.word	0x0800512f
 80050bc:	0800512f 	.word	0x0800512f
 80050c0:	0800512f 	.word	0x0800512f
 80050c4:	080050dd 	.word	0x080050dd
 80050c8:	080050f1 	.word	0x080050f1
 80050cc:	4a79      	ldr	r2, [pc, #484]	; (80052b4 <HAL_GPIO_Init+0x2b4>)
 80050ce:	4293      	cmp	r3, r2
 80050d0:	d013      	beq.n	80050fa <HAL_GPIO_Init+0xfa>
 80050d2:	e02c      	b.n	800512e <HAL_GPIO_Init+0x12e>
 80050d4:	683b      	ldr	r3, [r7, #0]
 80050d6:	68db      	ldr	r3, [r3, #12]
 80050d8:	623b      	str	r3, [r7, #32]
 80050da:	e029      	b.n	8005130 <HAL_GPIO_Init+0x130>
 80050dc:	683b      	ldr	r3, [r7, #0]
 80050de:	68db      	ldr	r3, [r3, #12]
 80050e0:	3304      	adds	r3, #4
 80050e2:	623b      	str	r3, [r7, #32]
 80050e4:	e024      	b.n	8005130 <HAL_GPIO_Init+0x130>
 80050e6:	683b      	ldr	r3, [r7, #0]
 80050e8:	68db      	ldr	r3, [r3, #12]
 80050ea:	3308      	adds	r3, #8
 80050ec:	623b      	str	r3, [r7, #32]
 80050ee:	e01f      	b.n	8005130 <HAL_GPIO_Init+0x130>
 80050f0:	683b      	ldr	r3, [r7, #0]
 80050f2:	68db      	ldr	r3, [r3, #12]
 80050f4:	330c      	adds	r3, #12
 80050f6:	623b      	str	r3, [r7, #32]
 80050f8:	e01a      	b.n	8005130 <HAL_GPIO_Init+0x130>
 80050fa:	683b      	ldr	r3, [r7, #0]
 80050fc:	689b      	ldr	r3, [r3, #8]
 80050fe:	2b00      	cmp	r3, #0
 8005100:	d102      	bne.n	8005108 <HAL_GPIO_Init+0x108>
 8005102:	2304      	movs	r3, #4
 8005104:	623b      	str	r3, [r7, #32]
 8005106:	e013      	b.n	8005130 <HAL_GPIO_Init+0x130>
 8005108:	683b      	ldr	r3, [r7, #0]
 800510a:	689b      	ldr	r3, [r3, #8]
 800510c:	2b01      	cmp	r3, #1
 800510e:	d105      	bne.n	800511c <HAL_GPIO_Init+0x11c>
 8005110:	2308      	movs	r3, #8
 8005112:	623b      	str	r3, [r7, #32]
 8005114:	687b      	ldr	r3, [r7, #4]
 8005116:	69fa      	ldr	r2, [r7, #28]
 8005118:	611a      	str	r2, [r3, #16]
 800511a:	e009      	b.n	8005130 <HAL_GPIO_Init+0x130>
 800511c:	2308      	movs	r3, #8
 800511e:	623b      	str	r3, [r7, #32]
 8005120:	687b      	ldr	r3, [r7, #4]
 8005122:	69fa      	ldr	r2, [r7, #28]
 8005124:	615a      	str	r2, [r3, #20]
 8005126:	e003      	b.n	8005130 <HAL_GPIO_Init+0x130>
 8005128:	2300      	movs	r3, #0
 800512a:	623b      	str	r3, [r7, #32]
 800512c:	e000      	b.n	8005130 <HAL_GPIO_Init+0x130>
 800512e:	bf00      	nop
 8005130:	69bb      	ldr	r3, [r7, #24]
 8005132:	2bff      	cmp	r3, #255	; 0xff
 8005134:	d801      	bhi.n	800513a <HAL_GPIO_Init+0x13a>
 8005136:	687b      	ldr	r3, [r7, #4]
 8005138:	e001      	b.n	800513e <HAL_GPIO_Init+0x13e>
 800513a:	687b      	ldr	r3, [r7, #4]
 800513c:	3304      	adds	r3, #4
 800513e:	617b      	str	r3, [r7, #20]
 8005140:	69bb      	ldr	r3, [r7, #24]
 8005142:	2bff      	cmp	r3, #255	; 0xff
 8005144:	d802      	bhi.n	800514c <HAL_GPIO_Init+0x14c>
 8005146:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005148:	009b      	lsls	r3, r3, #2
 800514a:	e002      	b.n	8005152 <HAL_GPIO_Init+0x152>
 800514c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800514e:	3b08      	subs	r3, #8
 8005150:	009b      	lsls	r3, r3, #2
 8005152:	613b      	str	r3, [r7, #16]
 8005154:	697b      	ldr	r3, [r7, #20]
 8005156:	681a      	ldr	r2, [r3, #0]
 8005158:	210f      	movs	r1, #15
 800515a:	693b      	ldr	r3, [r7, #16]
 800515c:	fa01 f303 	lsl.w	r3, r1, r3
 8005160:	43db      	mvns	r3, r3
 8005162:	401a      	ands	r2, r3
 8005164:	6a39      	ldr	r1, [r7, #32]
 8005166:	693b      	ldr	r3, [r7, #16]
 8005168:	fa01 f303 	lsl.w	r3, r1, r3
 800516c:	431a      	orrs	r2, r3
 800516e:	697b      	ldr	r3, [r7, #20]
 8005170:	601a      	str	r2, [r3, #0]
 8005172:	683b      	ldr	r3, [r7, #0]
 8005174:	685b      	ldr	r3, [r3, #4]
 8005176:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800517a:	2b00      	cmp	r3, #0
 800517c:	f000 80b1 	beq.w	80052e2 <HAL_GPIO_Init+0x2e2>
 8005180:	4b4d      	ldr	r3, [pc, #308]	; (80052b8 <HAL_GPIO_Init+0x2b8>)
 8005182:	699b      	ldr	r3, [r3, #24]
 8005184:	4a4c      	ldr	r2, [pc, #304]	; (80052b8 <HAL_GPIO_Init+0x2b8>)
 8005186:	f043 0301 	orr.w	r3, r3, #1
 800518a:	6193      	str	r3, [r2, #24]
 800518c:	4b4a      	ldr	r3, [pc, #296]	; (80052b8 <HAL_GPIO_Init+0x2b8>)
 800518e:	699b      	ldr	r3, [r3, #24]
 8005190:	f003 0301 	and.w	r3, r3, #1
 8005194:	60bb      	str	r3, [r7, #8]
 8005196:	68bb      	ldr	r3, [r7, #8]
 8005198:	4a48      	ldr	r2, [pc, #288]	; (80052bc <HAL_GPIO_Init+0x2bc>)
 800519a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800519c:	089b      	lsrs	r3, r3, #2
 800519e:	3302      	adds	r3, #2
 80051a0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80051a4:	60fb      	str	r3, [r7, #12]
 80051a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80051a8:	f003 0303 	and.w	r3, r3, #3
 80051ac:	009b      	lsls	r3, r3, #2
 80051ae:	220f      	movs	r2, #15
 80051b0:	fa02 f303 	lsl.w	r3, r2, r3
 80051b4:	43db      	mvns	r3, r3
 80051b6:	68fa      	ldr	r2, [r7, #12]
 80051b8:	4013      	ands	r3, r2
 80051ba:	60fb      	str	r3, [r7, #12]
 80051bc:	687b      	ldr	r3, [r7, #4]
 80051be:	4a40      	ldr	r2, [pc, #256]	; (80052c0 <HAL_GPIO_Init+0x2c0>)
 80051c0:	4293      	cmp	r3, r2
 80051c2:	d013      	beq.n	80051ec <HAL_GPIO_Init+0x1ec>
 80051c4:	687b      	ldr	r3, [r7, #4]
 80051c6:	4a3f      	ldr	r2, [pc, #252]	; (80052c4 <HAL_GPIO_Init+0x2c4>)
 80051c8:	4293      	cmp	r3, r2
 80051ca:	d00d      	beq.n	80051e8 <HAL_GPIO_Init+0x1e8>
 80051cc:	687b      	ldr	r3, [r7, #4]
 80051ce:	4a3e      	ldr	r2, [pc, #248]	; (80052c8 <HAL_GPIO_Init+0x2c8>)
 80051d0:	4293      	cmp	r3, r2
 80051d2:	d007      	beq.n	80051e4 <HAL_GPIO_Init+0x1e4>
 80051d4:	687b      	ldr	r3, [r7, #4]
 80051d6:	4a3d      	ldr	r2, [pc, #244]	; (80052cc <HAL_GPIO_Init+0x2cc>)
 80051d8:	4293      	cmp	r3, r2
 80051da:	d101      	bne.n	80051e0 <HAL_GPIO_Init+0x1e0>
 80051dc:	2303      	movs	r3, #3
 80051de:	e006      	b.n	80051ee <HAL_GPIO_Init+0x1ee>
 80051e0:	2304      	movs	r3, #4
 80051e2:	e004      	b.n	80051ee <HAL_GPIO_Init+0x1ee>
 80051e4:	2302      	movs	r3, #2
 80051e6:	e002      	b.n	80051ee <HAL_GPIO_Init+0x1ee>
 80051e8:	2301      	movs	r3, #1
 80051ea:	e000      	b.n	80051ee <HAL_GPIO_Init+0x1ee>
 80051ec:	2300      	movs	r3, #0
 80051ee:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80051f0:	f002 0203 	and.w	r2, r2, #3
 80051f4:	0092      	lsls	r2, r2, #2
 80051f6:	4093      	lsls	r3, r2
 80051f8:	68fa      	ldr	r2, [r7, #12]
 80051fa:	4313      	orrs	r3, r2
 80051fc:	60fb      	str	r3, [r7, #12]
 80051fe:	492f      	ldr	r1, [pc, #188]	; (80052bc <HAL_GPIO_Init+0x2bc>)
 8005200:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005202:	089b      	lsrs	r3, r3, #2
 8005204:	3302      	adds	r3, #2
 8005206:	68fa      	ldr	r2, [r7, #12]
 8005208:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800520c:	683b      	ldr	r3, [r7, #0]
 800520e:	685b      	ldr	r3, [r3, #4]
 8005210:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005214:	2b00      	cmp	r3, #0
 8005216:	d006      	beq.n	8005226 <HAL_GPIO_Init+0x226>
 8005218:	4b2d      	ldr	r3, [pc, #180]	; (80052d0 <HAL_GPIO_Init+0x2d0>)
 800521a:	681a      	ldr	r2, [r3, #0]
 800521c:	492c      	ldr	r1, [pc, #176]	; (80052d0 <HAL_GPIO_Init+0x2d0>)
 800521e:	69bb      	ldr	r3, [r7, #24]
 8005220:	4313      	orrs	r3, r2
 8005222:	600b      	str	r3, [r1, #0]
 8005224:	e006      	b.n	8005234 <HAL_GPIO_Init+0x234>
 8005226:	4b2a      	ldr	r3, [pc, #168]	; (80052d0 <HAL_GPIO_Init+0x2d0>)
 8005228:	681a      	ldr	r2, [r3, #0]
 800522a:	69bb      	ldr	r3, [r7, #24]
 800522c:	43db      	mvns	r3, r3
 800522e:	4928      	ldr	r1, [pc, #160]	; (80052d0 <HAL_GPIO_Init+0x2d0>)
 8005230:	4013      	ands	r3, r2
 8005232:	600b      	str	r3, [r1, #0]
 8005234:	683b      	ldr	r3, [r7, #0]
 8005236:	685b      	ldr	r3, [r3, #4]
 8005238:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800523c:	2b00      	cmp	r3, #0
 800523e:	d006      	beq.n	800524e <HAL_GPIO_Init+0x24e>
 8005240:	4b23      	ldr	r3, [pc, #140]	; (80052d0 <HAL_GPIO_Init+0x2d0>)
 8005242:	685a      	ldr	r2, [r3, #4]
 8005244:	4922      	ldr	r1, [pc, #136]	; (80052d0 <HAL_GPIO_Init+0x2d0>)
 8005246:	69bb      	ldr	r3, [r7, #24]
 8005248:	4313      	orrs	r3, r2
 800524a:	604b      	str	r3, [r1, #4]
 800524c:	e006      	b.n	800525c <HAL_GPIO_Init+0x25c>
 800524e:	4b20      	ldr	r3, [pc, #128]	; (80052d0 <HAL_GPIO_Init+0x2d0>)
 8005250:	685a      	ldr	r2, [r3, #4]
 8005252:	69bb      	ldr	r3, [r7, #24]
 8005254:	43db      	mvns	r3, r3
 8005256:	491e      	ldr	r1, [pc, #120]	; (80052d0 <HAL_GPIO_Init+0x2d0>)
 8005258:	4013      	ands	r3, r2
 800525a:	604b      	str	r3, [r1, #4]
 800525c:	683b      	ldr	r3, [r7, #0]
 800525e:	685b      	ldr	r3, [r3, #4]
 8005260:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8005264:	2b00      	cmp	r3, #0
 8005266:	d006      	beq.n	8005276 <HAL_GPIO_Init+0x276>
 8005268:	4b19      	ldr	r3, [pc, #100]	; (80052d0 <HAL_GPIO_Init+0x2d0>)
 800526a:	689a      	ldr	r2, [r3, #8]
 800526c:	4918      	ldr	r1, [pc, #96]	; (80052d0 <HAL_GPIO_Init+0x2d0>)
 800526e:	69bb      	ldr	r3, [r7, #24]
 8005270:	4313      	orrs	r3, r2
 8005272:	608b      	str	r3, [r1, #8]
 8005274:	e006      	b.n	8005284 <HAL_GPIO_Init+0x284>
 8005276:	4b16      	ldr	r3, [pc, #88]	; (80052d0 <HAL_GPIO_Init+0x2d0>)
 8005278:	689a      	ldr	r2, [r3, #8]
 800527a:	69bb      	ldr	r3, [r7, #24]
 800527c:	43db      	mvns	r3, r3
 800527e:	4914      	ldr	r1, [pc, #80]	; (80052d0 <HAL_GPIO_Init+0x2d0>)
 8005280:	4013      	ands	r3, r2
 8005282:	608b      	str	r3, [r1, #8]
 8005284:	683b      	ldr	r3, [r7, #0]
 8005286:	685b      	ldr	r3, [r3, #4]
 8005288:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800528c:	2b00      	cmp	r3, #0
 800528e:	d021      	beq.n	80052d4 <HAL_GPIO_Init+0x2d4>
 8005290:	4b0f      	ldr	r3, [pc, #60]	; (80052d0 <HAL_GPIO_Init+0x2d0>)
 8005292:	68da      	ldr	r2, [r3, #12]
 8005294:	490e      	ldr	r1, [pc, #56]	; (80052d0 <HAL_GPIO_Init+0x2d0>)
 8005296:	69bb      	ldr	r3, [r7, #24]
 8005298:	4313      	orrs	r3, r2
 800529a:	60cb      	str	r3, [r1, #12]
 800529c:	e021      	b.n	80052e2 <HAL_GPIO_Init+0x2e2>
 800529e:	bf00      	nop
 80052a0:	10320000 	.word	0x10320000
 80052a4:	10310000 	.word	0x10310000
 80052a8:	10220000 	.word	0x10220000
 80052ac:	10210000 	.word	0x10210000
 80052b0:	10120000 	.word	0x10120000
 80052b4:	10110000 	.word	0x10110000
 80052b8:	40021000 	.word	0x40021000
 80052bc:	40010000 	.word	0x40010000
 80052c0:	40010800 	.word	0x40010800
 80052c4:	40010c00 	.word	0x40010c00
 80052c8:	40011000 	.word	0x40011000
 80052cc:	40011400 	.word	0x40011400
 80052d0:	40010400 	.word	0x40010400
 80052d4:	4b0b      	ldr	r3, [pc, #44]	; (8005304 <HAL_GPIO_Init+0x304>)
 80052d6:	68da      	ldr	r2, [r3, #12]
 80052d8:	69bb      	ldr	r3, [r7, #24]
 80052da:	43db      	mvns	r3, r3
 80052dc:	4909      	ldr	r1, [pc, #36]	; (8005304 <HAL_GPIO_Init+0x304>)
 80052de:	4013      	ands	r3, r2
 80052e0:	60cb      	str	r3, [r1, #12]
 80052e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80052e4:	3301      	adds	r3, #1
 80052e6:	627b      	str	r3, [r7, #36]	; 0x24
 80052e8:	683b      	ldr	r3, [r7, #0]
 80052ea:	681a      	ldr	r2, [r3, #0]
 80052ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80052ee:	fa22 f303 	lsr.w	r3, r2, r3
 80052f2:	2b00      	cmp	r3, #0
 80052f4:	f47f ae8e 	bne.w	8005014 <HAL_GPIO_Init+0x14>
 80052f8:	bf00      	nop
 80052fa:	bf00      	nop
 80052fc:	372c      	adds	r7, #44	; 0x2c
 80052fe:	46bd      	mov	sp, r7
 8005300:	bc80      	pop	{r7}
 8005302:	4770      	bx	lr
 8005304:	40010400 	.word	0x40010400

08005308 <HAL_GPIO_ReadPin>:
 8005308:	b480      	push	{r7}
 800530a:	b085      	sub	sp, #20
 800530c:	af00      	add	r7, sp, #0
 800530e:	6078      	str	r0, [r7, #4]
 8005310:	460b      	mov	r3, r1
 8005312:	807b      	strh	r3, [r7, #2]
 8005314:	687b      	ldr	r3, [r7, #4]
 8005316:	689a      	ldr	r2, [r3, #8]
 8005318:	887b      	ldrh	r3, [r7, #2]
 800531a:	4013      	ands	r3, r2
 800531c:	2b00      	cmp	r3, #0
 800531e:	d002      	beq.n	8005326 <HAL_GPIO_ReadPin+0x1e>
 8005320:	2301      	movs	r3, #1
 8005322:	73fb      	strb	r3, [r7, #15]
 8005324:	e001      	b.n	800532a <HAL_GPIO_ReadPin+0x22>
 8005326:	2300      	movs	r3, #0
 8005328:	73fb      	strb	r3, [r7, #15]
 800532a:	7bfb      	ldrb	r3, [r7, #15]
 800532c:	4618      	mov	r0, r3
 800532e:	3714      	adds	r7, #20
 8005330:	46bd      	mov	sp, r7
 8005332:	bc80      	pop	{r7}
 8005334:	4770      	bx	lr

08005336 <HAL_GPIO_WritePin>:
 8005336:	b480      	push	{r7}
 8005338:	b083      	sub	sp, #12
 800533a:	af00      	add	r7, sp, #0
 800533c:	6078      	str	r0, [r7, #4]
 800533e:	460b      	mov	r3, r1
 8005340:	807b      	strh	r3, [r7, #2]
 8005342:	4613      	mov	r3, r2
 8005344:	707b      	strb	r3, [r7, #1]
 8005346:	787b      	ldrb	r3, [r7, #1]
 8005348:	2b00      	cmp	r3, #0
 800534a:	d003      	beq.n	8005354 <HAL_GPIO_WritePin+0x1e>
 800534c:	887a      	ldrh	r2, [r7, #2]
 800534e:	687b      	ldr	r3, [r7, #4]
 8005350:	611a      	str	r2, [r3, #16]
 8005352:	e003      	b.n	800535c <HAL_GPIO_WritePin+0x26>
 8005354:	887b      	ldrh	r3, [r7, #2]
 8005356:	041a      	lsls	r2, r3, #16
 8005358:	687b      	ldr	r3, [r7, #4]
 800535a:	611a      	str	r2, [r3, #16]
 800535c:	bf00      	nop
 800535e:	370c      	adds	r7, #12
 8005360:	46bd      	mov	sp, r7
 8005362:	bc80      	pop	{r7}
 8005364:	4770      	bx	lr
	...

08005368 <HAL_RCC_OscConfig>:
 8005368:	b580      	push	{r7, lr}
 800536a:	b086      	sub	sp, #24
 800536c:	af00      	add	r7, sp, #0
 800536e:	6078      	str	r0, [r7, #4]
 8005370:	687b      	ldr	r3, [r7, #4]
 8005372:	2b00      	cmp	r3, #0
 8005374:	d101      	bne.n	800537a <HAL_RCC_OscConfig+0x12>
 8005376:	2301      	movs	r3, #1
 8005378:	e272      	b.n	8005860 <HAL_RCC_OscConfig+0x4f8>
 800537a:	687b      	ldr	r3, [r7, #4]
 800537c:	681b      	ldr	r3, [r3, #0]
 800537e:	f003 0301 	and.w	r3, r3, #1
 8005382:	2b00      	cmp	r3, #0
 8005384:	f000 8087 	beq.w	8005496 <HAL_RCC_OscConfig+0x12e>
 8005388:	4b92      	ldr	r3, [pc, #584]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 800538a:	685b      	ldr	r3, [r3, #4]
 800538c:	f003 030c 	and.w	r3, r3, #12
 8005390:	2b04      	cmp	r3, #4
 8005392:	d00c      	beq.n	80053ae <HAL_RCC_OscConfig+0x46>
 8005394:	4b8f      	ldr	r3, [pc, #572]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 8005396:	685b      	ldr	r3, [r3, #4]
 8005398:	f003 030c 	and.w	r3, r3, #12
 800539c:	2b08      	cmp	r3, #8
 800539e:	d112      	bne.n	80053c6 <HAL_RCC_OscConfig+0x5e>
 80053a0:	4b8c      	ldr	r3, [pc, #560]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 80053a2:	685b      	ldr	r3, [r3, #4]
 80053a4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80053a8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80053ac:	d10b      	bne.n	80053c6 <HAL_RCC_OscConfig+0x5e>
 80053ae:	4b89      	ldr	r3, [pc, #548]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 80053b0:	681b      	ldr	r3, [r3, #0]
 80053b2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80053b6:	2b00      	cmp	r3, #0
 80053b8:	d06c      	beq.n	8005494 <HAL_RCC_OscConfig+0x12c>
 80053ba:	687b      	ldr	r3, [r7, #4]
 80053bc:	685b      	ldr	r3, [r3, #4]
 80053be:	2b00      	cmp	r3, #0
 80053c0:	d168      	bne.n	8005494 <HAL_RCC_OscConfig+0x12c>
 80053c2:	2301      	movs	r3, #1
 80053c4:	e24c      	b.n	8005860 <HAL_RCC_OscConfig+0x4f8>
 80053c6:	687b      	ldr	r3, [r7, #4]
 80053c8:	685b      	ldr	r3, [r3, #4]
 80053ca:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80053ce:	d106      	bne.n	80053de <HAL_RCC_OscConfig+0x76>
 80053d0:	4b80      	ldr	r3, [pc, #512]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 80053d2:	681b      	ldr	r3, [r3, #0]
 80053d4:	4a7f      	ldr	r2, [pc, #508]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 80053d6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80053da:	6013      	str	r3, [r2, #0]
 80053dc:	e02e      	b.n	800543c <HAL_RCC_OscConfig+0xd4>
 80053de:	687b      	ldr	r3, [r7, #4]
 80053e0:	685b      	ldr	r3, [r3, #4]
 80053e2:	2b00      	cmp	r3, #0
 80053e4:	d10c      	bne.n	8005400 <HAL_RCC_OscConfig+0x98>
 80053e6:	4b7b      	ldr	r3, [pc, #492]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 80053e8:	681b      	ldr	r3, [r3, #0]
 80053ea:	4a7a      	ldr	r2, [pc, #488]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 80053ec:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80053f0:	6013      	str	r3, [r2, #0]
 80053f2:	4b78      	ldr	r3, [pc, #480]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 80053f4:	681b      	ldr	r3, [r3, #0]
 80053f6:	4a77      	ldr	r2, [pc, #476]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 80053f8:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80053fc:	6013      	str	r3, [r2, #0]
 80053fe:	e01d      	b.n	800543c <HAL_RCC_OscConfig+0xd4>
 8005400:	687b      	ldr	r3, [r7, #4]
 8005402:	685b      	ldr	r3, [r3, #4]
 8005404:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8005408:	d10c      	bne.n	8005424 <HAL_RCC_OscConfig+0xbc>
 800540a:	4b72      	ldr	r3, [pc, #456]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 800540c:	681b      	ldr	r3, [r3, #0]
 800540e:	4a71      	ldr	r2, [pc, #452]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 8005410:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005414:	6013      	str	r3, [r2, #0]
 8005416:	4b6f      	ldr	r3, [pc, #444]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 8005418:	681b      	ldr	r3, [r3, #0]
 800541a:	4a6e      	ldr	r2, [pc, #440]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 800541c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005420:	6013      	str	r3, [r2, #0]
 8005422:	e00b      	b.n	800543c <HAL_RCC_OscConfig+0xd4>
 8005424:	4b6b      	ldr	r3, [pc, #428]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 8005426:	681b      	ldr	r3, [r3, #0]
 8005428:	4a6a      	ldr	r2, [pc, #424]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 800542a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800542e:	6013      	str	r3, [r2, #0]
 8005430:	4b68      	ldr	r3, [pc, #416]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 8005432:	681b      	ldr	r3, [r3, #0]
 8005434:	4a67      	ldr	r2, [pc, #412]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 8005436:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800543a:	6013      	str	r3, [r2, #0]
 800543c:	687b      	ldr	r3, [r7, #4]
 800543e:	685b      	ldr	r3, [r3, #4]
 8005440:	2b00      	cmp	r3, #0
 8005442:	d013      	beq.n	800546c <HAL_RCC_OscConfig+0x104>
 8005444:	f7fe fe64 	bl	8004110 <HAL_GetTick>
 8005448:	6138      	str	r0, [r7, #16]
 800544a:	e008      	b.n	800545e <HAL_RCC_OscConfig+0xf6>
 800544c:	f7fe fe60 	bl	8004110 <HAL_GetTick>
 8005450:	4602      	mov	r2, r0
 8005452:	693b      	ldr	r3, [r7, #16]
 8005454:	1ad3      	subs	r3, r2, r3
 8005456:	2b64      	cmp	r3, #100	; 0x64
 8005458:	d901      	bls.n	800545e <HAL_RCC_OscConfig+0xf6>
 800545a:	2303      	movs	r3, #3
 800545c:	e200      	b.n	8005860 <HAL_RCC_OscConfig+0x4f8>
 800545e:	4b5d      	ldr	r3, [pc, #372]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 8005460:	681b      	ldr	r3, [r3, #0]
 8005462:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005466:	2b00      	cmp	r3, #0
 8005468:	d0f0      	beq.n	800544c <HAL_RCC_OscConfig+0xe4>
 800546a:	e014      	b.n	8005496 <HAL_RCC_OscConfig+0x12e>
 800546c:	f7fe fe50 	bl	8004110 <HAL_GetTick>
 8005470:	6138      	str	r0, [r7, #16]
 8005472:	e008      	b.n	8005486 <HAL_RCC_OscConfig+0x11e>
 8005474:	f7fe fe4c 	bl	8004110 <HAL_GetTick>
 8005478:	4602      	mov	r2, r0
 800547a:	693b      	ldr	r3, [r7, #16]
 800547c:	1ad3      	subs	r3, r2, r3
 800547e:	2b64      	cmp	r3, #100	; 0x64
 8005480:	d901      	bls.n	8005486 <HAL_RCC_OscConfig+0x11e>
 8005482:	2303      	movs	r3, #3
 8005484:	e1ec      	b.n	8005860 <HAL_RCC_OscConfig+0x4f8>
 8005486:	4b53      	ldr	r3, [pc, #332]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 8005488:	681b      	ldr	r3, [r3, #0]
 800548a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800548e:	2b00      	cmp	r3, #0
 8005490:	d1f0      	bne.n	8005474 <HAL_RCC_OscConfig+0x10c>
 8005492:	e000      	b.n	8005496 <HAL_RCC_OscConfig+0x12e>
 8005494:	bf00      	nop
 8005496:	687b      	ldr	r3, [r7, #4]
 8005498:	681b      	ldr	r3, [r3, #0]
 800549a:	f003 0302 	and.w	r3, r3, #2
 800549e:	2b00      	cmp	r3, #0
 80054a0:	d063      	beq.n	800556a <HAL_RCC_OscConfig+0x202>
 80054a2:	4b4c      	ldr	r3, [pc, #304]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 80054a4:	685b      	ldr	r3, [r3, #4]
 80054a6:	f003 030c 	and.w	r3, r3, #12
 80054aa:	2b00      	cmp	r3, #0
 80054ac:	d00b      	beq.n	80054c6 <HAL_RCC_OscConfig+0x15e>
 80054ae:	4b49      	ldr	r3, [pc, #292]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 80054b0:	685b      	ldr	r3, [r3, #4]
 80054b2:	f003 030c 	and.w	r3, r3, #12
 80054b6:	2b08      	cmp	r3, #8
 80054b8:	d11c      	bne.n	80054f4 <HAL_RCC_OscConfig+0x18c>
 80054ba:	4b46      	ldr	r3, [pc, #280]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 80054bc:	685b      	ldr	r3, [r3, #4]
 80054be:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80054c2:	2b00      	cmp	r3, #0
 80054c4:	d116      	bne.n	80054f4 <HAL_RCC_OscConfig+0x18c>
 80054c6:	4b43      	ldr	r3, [pc, #268]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 80054c8:	681b      	ldr	r3, [r3, #0]
 80054ca:	f003 0302 	and.w	r3, r3, #2
 80054ce:	2b00      	cmp	r3, #0
 80054d0:	d005      	beq.n	80054de <HAL_RCC_OscConfig+0x176>
 80054d2:	687b      	ldr	r3, [r7, #4]
 80054d4:	691b      	ldr	r3, [r3, #16]
 80054d6:	2b01      	cmp	r3, #1
 80054d8:	d001      	beq.n	80054de <HAL_RCC_OscConfig+0x176>
 80054da:	2301      	movs	r3, #1
 80054dc:	e1c0      	b.n	8005860 <HAL_RCC_OscConfig+0x4f8>
 80054de:	4b3d      	ldr	r3, [pc, #244]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 80054e0:	681b      	ldr	r3, [r3, #0]
 80054e2:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80054e6:	687b      	ldr	r3, [r7, #4]
 80054e8:	695b      	ldr	r3, [r3, #20]
 80054ea:	00db      	lsls	r3, r3, #3
 80054ec:	4939      	ldr	r1, [pc, #228]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 80054ee:	4313      	orrs	r3, r2
 80054f0:	600b      	str	r3, [r1, #0]
 80054f2:	e03a      	b.n	800556a <HAL_RCC_OscConfig+0x202>
 80054f4:	687b      	ldr	r3, [r7, #4]
 80054f6:	691b      	ldr	r3, [r3, #16]
 80054f8:	2b00      	cmp	r3, #0
 80054fa:	d020      	beq.n	800553e <HAL_RCC_OscConfig+0x1d6>
 80054fc:	4b36      	ldr	r3, [pc, #216]	; (80055d8 <HAL_RCC_OscConfig+0x270>)
 80054fe:	2201      	movs	r2, #1
 8005500:	601a      	str	r2, [r3, #0]
 8005502:	f7fe fe05 	bl	8004110 <HAL_GetTick>
 8005506:	6138      	str	r0, [r7, #16]
 8005508:	e008      	b.n	800551c <HAL_RCC_OscConfig+0x1b4>
 800550a:	f7fe fe01 	bl	8004110 <HAL_GetTick>
 800550e:	4602      	mov	r2, r0
 8005510:	693b      	ldr	r3, [r7, #16]
 8005512:	1ad3      	subs	r3, r2, r3
 8005514:	2b02      	cmp	r3, #2
 8005516:	d901      	bls.n	800551c <HAL_RCC_OscConfig+0x1b4>
 8005518:	2303      	movs	r3, #3
 800551a:	e1a1      	b.n	8005860 <HAL_RCC_OscConfig+0x4f8>
 800551c:	4b2d      	ldr	r3, [pc, #180]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 800551e:	681b      	ldr	r3, [r3, #0]
 8005520:	f003 0302 	and.w	r3, r3, #2
 8005524:	2b00      	cmp	r3, #0
 8005526:	d0f0      	beq.n	800550a <HAL_RCC_OscConfig+0x1a2>
 8005528:	4b2a      	ldr	r3, [pc, #168]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 800552a:	681b      	ldr	r3, [r3, #0]
 800552c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8005530:	687b      	ldr	r3, [r7, #4]
 8005532:	695b      	ldr	r3, [r3, #20]
 8005534:	00db      	lsls	r3, r3, #3
 8005536:	4927      	ldr	r1, [pc, #156]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 8005538:	4313      	orrs	r3, r2
 800553a:	600b      	str	r3, [r1, #0]
 800553c:	e015      	b.n	800556a <HAL_RCC_OscConfig+0x202>
 800553e:	4b26      	ldr	r3, [pc, #152]	; (80055d8 <HAL_RCC_OscConfig+0x270>)
 8005540:	2200      	movs	r2, #0
 8005542:	601a      	str	r2, [r3, #0]
 8005544:	f7fe fde4 	bl	8004110 <HAL_GetTick>
 8005548:	6138      	str	r0, [r7, #16]
 800554a:	e008      	b.n	800555e <HAL_RCC_OscConfig+0x1f6>
 800554c:	f7fe fde0 	bl	8004110 <HAL_GetTick>
 8005550:	4602      	mov	r2, r0
 8005552:	693b      	ldr	r3, [r7, #16]
 8005554:	1ad3      	subs	r3, r2, r3
 8005556:	2b02      	cmp	r3, #2
 8005558:	d901      	bls.n	800555e <HAL_RCC_OscConfig+0x1f6>
 800555a:	2303      	movs	r3, #3
 800555c:	e180      	b.n	8005860 <HAL_RCC_OscConfig+0x4f8>
 800555e:	4b1d      	ldr	r3, [pc, #116]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 8005560:	681b      	ldr	r3, [r3, #0]
 8005562:	f003 0302 	and.w	r3, r3, #2
 8005566:	2b00      	cmp	r3, #0
 8005568:	d1f0      	bne.n	800554c <HAL_RCC_OscConfig+0x1e4>
 800556a:	687b      	ldr	r3, [r7, #4]
 800556c:	681b      	ldr	r3, [r3, #0]
 800556e:	f003 0308 	and.w	r3, r3, #8
 8005572:	2b00      	cmp	r3, #0
 8005574:	d03a      	beq.n	80055ec <HAL_RCC_OscConfig+0x284>
 8005576:	687b      	ldr	r3, [r7, #4]
 8005578:	699b      	ldr	r3, [r3, #24]
 800557a:	2b00      	cmp	r3, #0
 800557c:	d019      	beq.n	80055b2 <HAL_RCC_OscConfig+0x24a>
 800557e:	4b17      	ldr	r3, [pc, #92]	; (80055dc <HAL_RCC_OscConfig+0x274>)
 8005580:	2201      	movs	r2, #1
 8005582:	601a      	str	r2, [r3, #0]
 8005584:	f7fe fdc4 	bl	8004110 <HAL_GetTick>
 8005588:	6138      	str	r0, [r7, #16]
 800558a:	e008      	b.n	800559e <HAL_RCC_OscConfig+0x236>
 800558c:	f7fe fdc0 	bl	8004110 <HAL_GetTick>
 8005590:	4602      	mov	r2, r0
 8005592:	693b      	ldr	r3, [r7, #16]
 8005594:	1ad3      	subs	r3, r2, r3
 8005596:	2b02      	cmp	r3, #2
 8005598:	d901      	bls.n	800559e <HAL_RCC_OscConfig+0x236>
 800559a:	2303      	movs	r3, #3
 800559c:	e160      	b.n	8005860 <HAL_RCC_OscConfig+0x4f8>
 800559e:	4b0d      	ldr	r3, [pc, #52]	; (80055d4 <HAL_RCC_OscConfig+0x26c>)
 80055a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055a2:	f003 0302 	and.w	r3, r3, #2
 80055a6:	2b00      	cmp	r3, #0
 80055a8:	d0f0      	beq.n	800558c <HAL_RCC_OscConfig+0x224>
 80055aa:	2001      	movs	r0, #1
 80055ac:	f000 fad8 	bl	8005b60 <RCC_Delay>
 80055b0:	e01c      	b.n	80055ec <HAL_RCC_OscConfig+0x284>
 80055b2:	4b0a      	ldr	r3, [pc, #40]	; (80055dc <HAL_RCC_OscConfig+0x274>)
 80055b4:	2200      	movs	r2, #0
 80055b6:	601a      	str	r2, [r3, #0]
 80055b8:	f7fe fdaa 	bl	8004110 <HAL_GetTick>
 80055bc:	6138      	str	r0, [r7, #16]
 80055be:	e00f      	b.n	80055e0 <HAL_RCC_OscConfig+0x278>
 80055c0:	f7fe fda6 	bl	8004110 <HAL_GetTick>
 80055c4:	4602      	mov	r2, r0
 80055c6:	693b      	ldr	r3, [r7, #16]
 80055c8:	1ad3      	subs	r3, r2, r3
 80055ca:	2b02      	cmp	r3, #2
 80055cc:	d908      	bls.n	80055e0 <HAL_RCC_OscConfig+0x278>
 80055ce:	2303      	movs	r3, #3
 80055d0:	e146      	b.n	8005860 <HAL_RCC_OscConfig+0x4f8>
 80055d2:	bf00      	nop
 80055d4:	40021000 	.word	0x40021000
 80055d8:	42420000 	.word	0x42420000
 80055dc:	42420480 	.word	0x42420480
 80055e0:	4b92      	ldr	r3, [pc, #584]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 80055e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055e4:	f003 0302 	and.w	r3, r3, #2
 80055e8:	2b00      	cmp	r3, #0
 80055ea:	d1e9      	bne.n	80055c0 <HAL_RCC_OscConfig+0x258>
 80055ec:	687b      	ldr	r3, [r7, #4]
 80055ee:	681b      	ldr	r3, [r3, #0]
 80055f0:	f003 0304 	and.w	r3, r3, #4
 80055f4:	2b00      	cmp	r3, #0
 80055f6:	f000 80a6 	beq.w	8005746 <HAL_RCC_OscConfig+0x3de>
 80055fa:	2300      	movs	r3, #0
 80055fc:	75fb      	strb	r3, [r7, #23]
 80055fe:	4b8b      	ldr	r3, [pc, #556]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 8005600:	69db      	ldr	r3, [r3, #28]
 8005602:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005606:	2b00      	cmp	r3, #0
 8005608:	d10d      	bne.n	8005626 <HAL_RCC_OscConfig+0x2be>
 800560a:	4b88      	ldr	r3, [pc, #544]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 800560c:	69db      	ldr	r3, [r3, #28]
 800560e:	4a87      	ldr	r2, [pc, #540]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 8005610:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005614:	61d3      	str	r3, [r2, #28]
 8005616:	4b85      	ldr	r3, [pc, #532]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 8005618:	69db      	ldr	r3, [r3, #28]
 800561a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800561e:	60bb      	str	r3, [r7, #8]
 8005620:	68bb      	ldr	r3, [r7, #8]
 8005622:	2301      	movs	r3, #1
 8005624:	75fb      	strb	r3, [r7, #23]
 8005626:	4b82      	ldr	r3, [pc, #520]	; (8005830 <HAL_RCC_OscConfig+0x4c8>)
 8005628:	681b      	ldr	r3, [r3, #0]
 800562a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800562e:	2b00      	cmp	r3, #0
 8005630:	d118      	bne.n	8005664 <HAL_RCC_OscConfig+0x2fc>
 8005632:	4b7f      	ldr	r3, [pc, #508]	; (8005830 <HAL_RCC_OscConfig+0x4c8>)
 8005634:	681b      	ldr	r3, [r3, #0]
 8005636:	4a7e      	ldr	r2, [pc, #504]	; (8005830 <HAL_RCC_OscConfig+0x4c8>)
 8005638:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800563c:	6013      	str	r3, [r2, #0]
 800563e:	f7fe fd67 	bl	8004110 <HAL_GetTick>
 8005642:	6138      	str	r0, [r7, #16]
 8005644:	e008      	b.n	8005658 <HAL_RCC_OscConfig+0x2f0>
 8005646:	f7fe fd63 	bl	8004110 <HAL_GetTick>
 800564a:	4602      	mov	r2, r0
 800564c:	693b      	ldr	r3, [r7, #16]
 800564e:	1ad3      	subs	r3, r2, r3
 8005650:	2b64      	cmp	r3, #100	; 0x64
 8005652:	d901      	bls.n	8005658 <HAL_RCC_OscConfig+0x2f0>
 8005654:	2303      	movs	r3, #3
 8005656:	e103      	b.n	8005860 <HAL_RCC_OscConfig+0x4f8>
 8005658:	4b75      	ldr	r3, [pc, #468]	; (8005830 <HAL_RCC_OscConfig+0x4c8>)
 800565a:	681b      	ldr	r3, [r3, #0]
 800565c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005660:	2b00      	cmp	r3, #0
 8005662:	d0f0      	beq.n	8005646 <HAL_RCC_OscConfig+0x2de>
 8005664:	687b      	ldr	r3, [r7, #4]
 8005666:	68db      	ldr	r3, [r3, #12]
 8005668:	2b01      	cmp	r3, #1
 800566a:	d106      	bne.n	800567a <HAL_RCC_OscConfig+0x312>
 800566c:	4b6f      	ldr	r3, [pc, #444]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 800566e:	6a1b      	ldr	r3, [r3, #32]
 8005670:	4a6e      	ldr	r2, [pc, #440]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 8005672:	f043 0301 	orr.w	r3, r3, #1
 8005676:	6213      	str	r3, [r2, #32]
 8005678:	e02d      	b.n	80056d6 <HAL_RCC_OscConfig+0x36e>
 800567a:	687b      	ldr	r3, [r7, #4]
 800567c:	68db      	ldr	r3, [r3, #12]
 800567e:	2b00      	cmp	r3, #0
 8005680:	d10c      	bne.n	800569c <HAL_RCC_OscConfig+0x334>
 8005682:	4b6a      	ldr	r3, [pc, #424]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 8005684:	6a1b      	ldr	r3, [r3, #32]
 8005686:	4a69      	ldr	r2, [pc, #420]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 8005688:	f023 0301 	bic.w	r3, r3, #1
 800568c:	6213      	str	r3, [r2, #32]
 800568e:	4b67      	ldr	r3, [pc, #412]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 8005690:	6a1b      	ldr	r3, [r3, #32]
 8005692:	4a66      	ldr	r2, [pc, #408]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 8005694:	f023 0304 	bic.w	r3, r3, #4
 8005698:	6213      	str	r3, [r2, #32]
 800569a:	e01c      	b.n	80056d6 <HAL_RCC_OscConfig+0x36e>
 800569c:	687b      	ldr	r3, [r7, #4]
 800569e:	68db      	ldr	r3, [r3, #12]
 80056a0:	2b05      	cmp	r3, #5
 80056a2:	d10c      	bne.n	80056be <HAL_RCC_OscConfig+0x356>
 80056a4:	4b61      	ldr	r3, [pc, #388]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 80056a6:	6a1b      	ldr	r3, [r3, #32]
 80056a8:	4a60      	ldr	r2, [pc, #384]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 80056aa:	f043 0304 	orr.w	r3, r3, #4
 80056ae:	6213      	str	r3, [r2, #32]
 80056b0:	4b5e      	ldr	r3, [pc, #376]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 80056b2:	6a1b      	ldr	r3, [r3, #32]
 80056b4:	4a5d      	ldr	r2, [pc, #372]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 80056b6:	f043 0301 	orr.w	r3, r3, #1
 80056ba:	6213      	str	r3, [r2, #32]
 80056bc:	e00b      	b.n	80056d6 <HAL_RCC_OscConfig+0x36e>
 80056be:	4b5b      	ldr	r3, [pc, #364]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 80056c0:	6a1b      	ldr	r3, [r3, #32]
 80056c2:	4a5a      	ldr	r2, [pc, #360]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 80056c4:	f023 0301 	bic.w	r3, r3, #1
 80056c8:	6213      	str	r3, [r2, #32]
 80056ca:	4b58      	ldr	r3, [pc, #352]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 80056cc:	6a1b      	ldr	r3, [r3, #32]
 80056ce:	4a57      	ldr	r2, [pc, #348]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 80056d0:	f023 0304 	bic.w	r3, r3, #4
 80056d4:	6213      	str	r3, [r2, #32]
 80056d6:	687b      	ldr	r3, [r7, #4]
 80056d8:	68db      	ldr	r3, [r3, #12]
 80056da:	2b00      	cmp	r3, #0
 80056dc:	d015      	beq.n	800570a <HAL_RCC_OscConfig+0x3a2>
 80056de:	f7fe fd17 	bl	8004110 <HAL_GetTick>
 80056e2:	6138      	str	r0, [r7, #16]
 80056e4:	e00a      	b.n	80056fc <HAL_RCC_OscConfig+0x394>
 80056e6:	f7fe fd13 	bl	8004110 <HAL_GetTick>
 80056ea:	4602      	mov	r2, r0
 80056ec:	693b      	ldr	r3, [r7, #16]
 80056ee:	1ad3      	subs	r3, r2, r3
 80056f0:	f241 3288 	movw	r2, #5000	; 0x1388
 80056f4:	4293      	cmp	r3, r2
 80056f6:	d901      	bls.n	80056fc <HAL_RCC_OscConfig+0x394>
 80056f8:	2303      	movs	r3, #3
 80056fa:	e0b1      	b.n	8005860 <HAL_RCC_OscConfig+0x4f8>
 80056fc:	4b4b      	ldr	r3, [pc, #300]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 80056fe:	6a1b      	ldr	r3, [r3, #32]
 8005700:	f003 0302 	and.w	r3, r3, #2
 8005704:	2b00      	cmp	r3, #0
 8005706:	d0ee      	beq.n	80056e6 <HAL_RCC_OscConfig+0x37e>
 8005708:	e014      	b.n	8005734 <HAL_RCC_OscConfig+0x3cc>
 800570a:	f7fe fd01 	bl	8004110 <HAL_GetTick>
 800570e:	6138      	str	r0, [r7, #16]
 8005710:	e00a      	b.n	8005728 <HAL_RCC_OscConfig+0x3c0>
 8005712:	f7fe fcfd 	bl	8004110 <HAL_GetTick>
 8005716:	4602      	mov	r2, r0
 8005718:	693b      	ldr	r3, [r7, #16]
 800571a:	1ad3      	subs	r3, r2, r3
 800571c:	f241 3288 	movw	r2, #5000	; 0x1388
 8005720:	4293      	cmp	r3, r2
 8005722:	d901      	bls.n	8005728 <HAL_RCC_OscConfig+0x3c0>
 8005724:	2303      	movs	r3, #3
 8005726:	e09b      	b.n	8005860 <HAL_RCC_OscConfig+0x4f8>
 8005728:	4b40      	ldr	r3, [pc, #256]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 800572a:	6a1b      	ldr	r3, [r3, #32]
 800572c:	f003 0302 	and.w	r3, r3, #2
 8005730:	2b00      	cmp	r3, #0
 8005732:	d1ee      	bne.n	8005712 <HAL_RCC_OscConfig+0x3aa>
 8005734:	7dfb      	ldrb	r3, [r7, #23]
 8005736:	2b01      	cmp	r3, #1
 8005738:	d105      	bne.n	8005746 <HAL_RCC_OscConfig+0x3de>
 800573a:	4b3c      	ldr	r3, [pc, #240]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 800573c:	69db      	ldr	r3, [r3, #28]
 800573e:	4a3b      	ldr	r2, [pc, #236]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 8005740:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005744:	61d3      	str	r3, [r2, #28]
 8005746:	687b      	ldr	r3, [r7, #4]
 8005748:	69db      	ldr	r3, [r3, #28]
 800574a:	2b00      	cmp	r3, #0
 800574c:	f000 8087 	beq.w	800585e <HAL_RCC_OscConfig+0x4f6>
 8005750:	4b36      	ldr	r3, [pc, #216]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 8005752:	685b      	ldr	r3, [r3, #4]
 8005754:	f003 030c 	and.w	r3, r3, #12
 8005758:	2b08      	cmp	r3, #8
 800575a:	d061      	beq.n	8005820 <HAL_RCC_OscConfig+0x4b8>
 800575c:	687b      	ldr	r3, [r7, #4]
 800575e:	69db      	ldr	r3, [r3, #28]
 8005760:	2b02      	cmp	r3, #2
 8005762:	d146      	bne.n	80057f2 <HAL_RCC_OscConfig+0x48a>
 8005764:	4b33      	ldr	r3, [pc, #204]	; (8005834 <HAL_RCC_OscConfig+0x4cc>)
 8005766:	2200      	movs	r2, #0
 8005768:	601a      	str	r2, [r3, #0]
 800576a:	f7fe fcd1 	bl	8004110 <HAL_GetTick>
 800576e:	6138      	str	r0, [r7, #16]
 8005770:	e008      	b.n	8005784 <HAL_RCC_OscConfig+0x41c>
 8005772:	f7fe fccd 	bl	8004110 <HAL_GetTick>
 8005776:	4602      	mov	r2, r0
 8005778:	693b      	ldr	r3, [r7, #16]
 800577a:	1ad3      	subs	r3, r2, r3
 800577c:	2b02      	cmp	r3, #2
 800577e:	d901      	bls.n	8005784 <HAL_RCC_OscConfig+0x41c>
 8005780:	2303      	movs	r3, #3
 8005782:	e06d      	b.n	8005860 <HAL_RCC_OscConfig+0x4f8>
 8005784:	4b29      	ldr	r3, [pc, #164]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 8005786:	681b      	ldr	r3, [r3, #0]
 8005788:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800578c:	2b00      	cmp	r3, #0
 800578e:	d1f0      	bne.n	8005772 <HAL_RCC_OscConfig+0x40a>
 8005790:	687b      	ldr	r3, [r7, #4]
 8005792:	6a1b      	ldr	r3, [r3, #32]
 8005794:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005798:	d108      	bne.n	80057ac <HAL_RCC_OscConfig+0x444>
 800579a:	4b24      	ldr	r3, [pc, #144]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 800579c:	685b      	ldr	r3, [r3, #4]
 800579e:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 80057a2:	687b      	ldr	r3, [r7, #4]
 80057a4:	689b      	ldr	r3, [r3, #8]
 80057a6:	4921      	ldr	r1, [pc, #132]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 80057a8:	4313      	orrs	r3, r2
 80057aa:	604b      	str	r3, [r1, #4]
 80057ac:	4b1f      	ldr	r3, [pc, #124]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 80057ae:	685b      	ldr	r3, [r3, #4]
 80057b0:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 80057b4:	687b      	ldr	r3, [r7, #4]
 80057b6:	6a19      	ldr	r1, [r3, #32]
 80057b8:	687b      	ldr	r3, [r7, #4]
 80057ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057bc:	430b      	orrs	r3, r1
 80057be:	491b      	ldr	r1, [pc, #108]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 80057c0:	4313      	orrs	r3, r2
 80057c2:	604b      	str	r3, [r1, #4]
 80057c4:	4b1b      	ldr	r3, [pc, #108]	; (8005834 <HAL_RCC_OscConfig+0x4cc>)
 80057c6:	2201      	movs	r2, #1
 80057c8:	601a      	str	r2, [r3, #0]
 80057ca:	f7fe fca1 	bl	8004110 <HAL_GetTick>
 80057ce:	6138      	str	r0, [r7, #16]
 80057d0:	e008      	b.n	80057e4 <HAL_RCC_OscConfig+0x47c>
 80057d2:	f7fe fc9d 	bl	8004110 <HAL_GetTick>
 80057d6:	4602      	mov	r2, r0
 80057d8:	693b      	ldr	r3, [r7, #16]
 80057da:	1ad3      	subs	r3, r2, r3
 80057dc:	2b02      	cmp	r3, #2
 80057de:	d901      	bls.n	80057e4 <HAL_RCC_OscConfig+0x47c>
 80057e0:	2303      	movs	r3, #3
 80057e2:	e03d      	b.n	8005860 <HAL_RCC_OscConfig+0x4f8>
 80057e4:	4b11      	ldr	r3, [pc, #68]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 80057e6:	681b      	ldr	r3, [r3, #0]
 80057e8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80057ec:	2b00      	cmp	r3, #0
 80057ee:	d0f0      	beq.n	80057d2 <HAL_RCC_OscConfig+0x46a>
 80057f0:	e035      	b.n	800585e <HAL_RCC_OscConfig+0x4f6>
 80057f2:	4b10      	ldr	r3, [pc, #64]	; (8005834 <HAL_RCC_OscConfig+0x4cc>)
 80057f4:	2200      	movs	r2, #0
 80057f6:	601a      	str	r2, [r3, #0]
 80057f8:	f7fe fc8a 	bl	8004110 <HAL_GetTick>
 80057fc:	6138      	str	r0, [r7, #16]
 80057fe:	e008      	b.n	8005812 <HAL_RCC_OscConfig+0x4aa>
 8005800:	f7fe fc86 	bl	8004110 <HAL_GetTick>
 8005804:	4602      	mov	r2, r0
 8005806:	693b      	ldr	r3, [r7, #16]
 8005808:	1ad3      	subs	r3, r2, r3
 800580a:	2b02      	cmp	r3, #2
 800580c:	d901      	bls.n	8005812 <HAL_RCC_OscConfig+0x4aa>
 800580e:	2303      	movs	r3, #3
 8005810:	e026      	b.n	8005860 <HAL_RCC_OscConfig+0x4f8>
 8005812:	4b06      	ldr	r3, [pc, #24]	; (800582c <HAL_RCC_OscConfig+0x4c4>)
 8005814:	681b      	ldr	r3, [r3, #0]
 8005816:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800581a:	2b00      	cmp	r3, #0
 800581c:	d1f0      	bne.n	8005800 <HAL_RCC_OscConfig+0x498>
 800581e:	e01e      	b.n	800585e <HAL_RCC_OscConfig+0x4f6>
 8005820:	687b      	ldr	r3, [r7, #4]
 8005822:	69db      	ldr	r3, [r3, #28]
 8005824:	2b01      	cmp	r3, #1
 8005826:	d107      	bne.n	8005838 <HAL_RCC_OscConfig+0x4d0>
 8005828:	2301      	movs	r3, #1
 800582a:	e019      	b.n	8005860 <HAL_RCC_OscConfig+0x4f8>
 800582c:	40021000 	.word	0x40021000
 8005830:	40007000 	.word	0x40007000
 8005834:	42420060 	.word	0x42420060
 8005838:	4b0b      	ldr	r3, [pc, #44]	; (8005868 <HAL_RCC_OscConfig+0x500>)
 800583a:	685b      	ldr	r3, [r3, #4]
 800583c:	60fb      	str	r3, [r7, #12]
 800583e:	68fb      	ldr	r3, [r7, #12]
 8005840:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8005844:	687b      	ldr	r3, [r7, #4]
 8005846:	6a1b      	ldr	r3, [r3, #32]
 8005848:	429a      	cmp	r2, r3
 800584a:	d106      	bne.n	800585a <HAL_RCC_OscConfig+0x4f2>
 800584c:	68fb      	ldr	r3, [r7, #12]
 800584e:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8005852:	687b      	ldr	r3, [r7, #4]
 8005854:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005856:	429a      	cmp	r2, r3
 8005858:	d001      	beq.n	800585e <HAL_RCC_OscConfig+0x4f6>
 800585a:	2301      	movs	r3, #1
 800585c:	e000      	b.n	8005860 <HAL_RCC_OscConfig+0x4f8>
 800585e:	2300      	movs	r3, #0
 8005860:	4618      	mov	r0, r3
 8005862:	3718      	adds	r7, #24
 8005864:	46bd      	mov	sp, r7
 8005866:	bd80      	pop	{r7, pc}
 8005868:	40021000 	.word	0x40021000

0800586c <HAL_RCC_ClockConfig>:
 800586c:	b580      	push	{r7, lr}
 800586e:	b084      	sub	sp, #16
 8005870:	af00      	add	r7, sp, #0
 8005872:	6078      	str	r0, [r7, #4]
 8005874:	6039      	str	r1, [r7, #0]
 8005876:	687b      	ldr	r3, [r7, #4]
 8005878:	2b00      	cmp	r3, #0
 800587a:	d101      	bne.n	8005880 <HAL_RCC_ClockConfig+0x14>
 800587c:	2301      	movs	r3, #1
 800587e:	e0d0      	b.n	8005a22 <HAL_RCC_ClockConfig+0x1b6>
 8005880:	4b6a      	ldr	r3, [pc, #424]	; (8005a2c <HAL_RCC_ClockConfig+0x1c0>)
 8005882:	681b      	ldr	r3, [r3, #0]
 8005884:	f003 0307 	and.w	r3, r3, #7
 8005888:	683a      	ldr	r2, [r7, #0]
 800588a:	429a      	cmp	r2, r3
 800588c:	d910      	bls.n	80058b0 <HAL_RCC_ClockConfig+0x44>
 800588e:	4b67      	ldr	r3, [pc, #412]	; (8005a2c <HAL_RCC_ClockConfig+0x1c0>)
 8005890:	681b      	ldr	r3, [r3, #0]
 8005892:	f023 0207 	bic.w	r2, r3, #7
 8005896:	4965      	ldr	r1, [pc, #404]	; (8005a2c <HAL_RCC_ClockConfig+0x1c0>)
 8005898:	683b      	ldr	r3, [r7, #0]
 800589a:	4313      	orrs	r3, r2
 800589c:	600b      	str	r3, [r1, #0]
 800589e:	4b63      	ldr	r3, [pc, #396]	; (8005a2c <HAL_RCC_ClockConfig+0x1c0>)
 80058a0:	681b      	ldr	r3, [r3, #0]
 80058a2:	f003 0307 	and.w	r3, r3, #7
 80058a6:	683a      	ldr	r2, [r7, #0]
 80058a8:	429a      	cmp	r2, r3
 80058aa:	d001      	beq.n	80058b0 <HAL_RCC_ClockConfig+0x44>
 80058ac:	2301      	movs	r3, #1
 80058ae:	e0b8      	b.n	8005a22 <HAL_RCC_ClockConfig+0x1b6>
 80058b0:	687b      	ldr	r3, [r7, #4]
 80058b2:	681b      	ldr	r3, [r3, #0]
 80058b4:	f003 0302 	and.w	r3, r3, #2
 80058b8:	2b00      	cmp	r3, #0
 80058ba:	d020      	beq.n	80058fe <HAL_RCC_ClockConfig+0x92>
 80058bc:	687b      	ldr	r3, [r7, #4]
 80058be:	681b      	ldr	r3, [r3, #0]
 80058c0:	f003 0304 	and.w	r3, r3, #4
 80058c4:	2b00      	cmp	r3, #0
 80058c6:	d005      	beq.n	80058d4 <HAL_RCC_ClockConfig+0x68>
 80058c8:	4b59      	ldr	r3, [pc, #356]	; (8005a30 <HAL_RCC_ClockConfig+0x1c4>)
 80058ca:	685b      	ldr	r3, [r3, #4]
 80058cc:	4a58      	ldr	r2, [pc, #352]	; (8005a30 <HAL_RCC_ClockConfig+0x1c4>)
 80058ce:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80058d2:	6053      	str	r3, [r2, #4]
 80058d4:	687b      	ldr	r3, [r7, #4]
 80058d6:	681b      	ldr	r3, [r3, #0]
 80058d8:	f003 0308 	and.w	r3, r3, #8
 80058dc:	2b00      	cmp	r3, #0
 80058de:	d005      	beq.n	80058ec <HAL_RCC_ClockConfig+0x80>
 80058e0:	4b53      	ldr	r3, [pc, #332]	; (8005a30 <HAL_RCC_ClockConfig+0x1c4>)
 80058e2:	685b      	ldr	r3, [r3, #4]
 80058e4:	4a52      	ldr	r2, [pc, #328]	; (8005a30 <HAL_RCC_ClockConfig+0x1c4>)
 80058e6:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 80058ea:	6053      	str	r3, [r2, #4]
 80058ec:	4b50      	ldr	r3, [pc, #320]	; (8005a30 <HAL_RCC_ClockConfig+0x1c4>)
 80058ee:	685b      	ldr	r3, [r3, #4]
 80058f0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80058f4:	687b      	ldr	r3, [r7, #4]
 80058f6:	689b      	ldr	r3, [r3, #8]
 80058f8:	494d      	ldr	r1, [pc, #308]	; (8005a30 <HAL_RCC_ClockConfig+0x1c4>)
 80058fa:	4313      	orrs	r3, r2
 80058fc:	604b      	str	r3, [r1, #4]
 80058fe:	687b      	ldr	r3, [r7, #4]
 8005900:	681b      	ldr	r3, [r3, #0]
 8005902:	f003 0301 	and.w	r3, r3, #1
 8005906:	2b00      	cmp	r3, #0
 8005908:	d040      	beq.n	800598c <HAL_RCC_ClockConfig+0x120>
 800590a:	687b      	ldr	r3, [r7, #4]
 800590c:	685b      	ldr	r3, [r3, #4]
 800590e:	2b01      	cmp	r3, #1
 8005910:	d107      	bne.n	8005922 <HAL_RCC_ClockConfig+0xb6>
 8005912:	4b47      	ldr	r3, [pc, #284]	; (8005a30 <HAL_RCC_ClockConfig+0x1c4>)
 8005914:	681b      	ldr	r3, [r3, #0]
 8005916:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800591a:	2b00      	cmp	r3, #0
 800591c:	d115      	bne.n	800594a <HAL_RCC_ClockConfig+0xde>
 800591e:	2301      	movs	r3, #1
 8005920:	e07f      	b.n	8005a22 <HAL_RCC_ClockConfig+0x1b6>
 8005922:	687b      	ldr	r3, [r7, #4]
 8005924:	685b      	ldr	r3, [r3, #4]
 8005926:	2b02      	cmp	r3, #2
 8005928:	d107      	bne.n	800593a <HAL_RCC_ClockConfig+0xce>
 800592a:	4b41      	ldr	r3, [pc, #260]	; (8005a30 <HAL_RCC_ClockConfig+0x1c4>)
 800592c:	681b      	ldr	r3, [r3, #0]
 800592e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005932:	2b00      	cmp	r3, #0
 8005934:	d109      	bne.n	800594a <HAL_RCC_ClockConfig+0xde>
 8005936:	2301      	movs	r3, #1
 8005938:	e073      	b.n	8005a22 <HAL_RCC_ClockConfig+0x1b6>
 800593a:	4b3d      	ldr	r3, [pc, #244]	; (8005a30 <HAL_RCC_ClockConfig+0x1c4>)
 800593c:	681b      	ldr	r3, [r3, #0]
 800593e:	f003 0302 	and.w	r3, r3, #2
 8005942:	2b00      	cmp	r3, #0
 8005944:	d101      	bne.n	800594a <HAL_RCC_ClockConfig+0xde>
 8005946:	2301      	movs	r3, #1
 8005948:	e06b      	b.n	8005a22 <HAL_RCC_ClockConfig+0x1b6>
 800594a:	4b39      	ldr	r3, [pc, #228]	; (8005a30 <HAL_RCC_ClockConfig+0x1c4>)
 800594c:	685b      	ldr	r3, [r3, #4]
 800594e:	f023 0203 	bic.w	r2, r3, #3
 8005952:	687b      	ldr	r3, [r7, #4]
 8005954:	685b      	ldr	r3, [r3, #4]
 8005956:	4936      	ldr	r1, [pc, #216]	; (8005a30 <HAL_RCC_ClockConfig+0x1c4>)
 8005958:	4313      	orrs	r3, r2
 800595a:	604b      	str	r3, [r1, #4]
 800595c:	f7fe fbd8 	bl	8004110 <HAL_GetTick>
 8005960:	60f8      	str	r0, [r7, #12]
 8005962:	e00a      	b.n	800597a <HAL_RCC_ClockConfig+0x10e>
 8005964:	f7fe fbd4 	bl	8004110 <HAL_GetTick>
 8005968:	4602      	mov	r2, r0
 800596a:	68fb      	ldr	r3, [r7, #12]
 800596c:	1ad3      	subs	r3, r2, r3
 800596e:	f241 3288 	movw	r2, #5000	; 0x1388
 8005972:	4293      	cmp	r3, r2
 8005974:	d901      	bls.n	800597a <HAL_RCC_ClockConfig+0x10e>
 8005976:	2303      	movs	r3, #3
 8005978:	e053      	b.n	8005a22 <HAL_RCC_ClockConfig+0x1b6>
 800597a:	4b2d      	ldr	r3, [pc, #180]	; (8005a30 <HAL_RCC_ClockConfig+0x1c4>)
 800597c:	685b      	ldr	r3, [r3, #4]
 800597e:	f003 020c 	and.w	r2, r3, #12
 8005982:	687b      	ldr	r3, [r7, #4]
 8005984:	685b      	ldr	r3, [r3, #4]
 8005986:	009b      	lsls	r3, r3, #2
 8005988:	429a      	cmp	r2, r3
 800598a:	d1eb      	bne.n	8005964 <HAL_RCC_ClockConfig+0xf8>
 800598c:	4b27      	ldr	r3, [pc, #156]	; (8005a2c <HAL_RCC_ClockConfig+0x1c0>)
 800598e:	681b      	ldr	r3, [r3, #0]
 8005990:	f003 0307 	and.w	r3, r3, #7
 8005994:	683a      	ldr	r2, [r7, #0]
 8005996:	429a      	cmp	r2, r3
 8005998:	d210      	bcs.n	80059bc <HAL_RCC_ClockConfig+0x150>
 800599a:	4b24      	ldr	r3, [pc, #144]	; (8005a2c <HAL_RCC_ClockConfig+0x1c0>)
 800599c:	681b      	ldr	r3, [r3, #0]
 800599e:	f023 0207 	bic.w	r2, r3, #7
 80059a2:	4922      	ldr	r1, [pc, #136]	; (8005a2c <HAL_RCC_ClockConfig+0x1c0>)
 80059a4:	683b      	ldr	r3, [r7, #0]
 80059a6:	4313      	orrs	r3, r2
 80059a8:	600b      	str	r3, [r1, #0]
 80059aa:	4b20      	ldr	r3, [pc, #128]	; (8005a2c <HAL_RCC_ClockConfig+0x1c0>)
 80059ac:	681b      	ldr	r3, [r3, #0]
 80059ae:	f003 0307 	and.w	r3, r3, #7
 80059b2:	683a      	ldr	r2, [r7, #0]
 80059b4:	429a      	cmp	r2, r3
 80059b6:	d001      	beq.n	80059bc <HAL_RCC_ClockConfig+0x150>
 80059b8:	2301      	movs	r3, #1
 80059ba:	e032      	b.n	8005a22 <HAL_RCC_ClockConfig+0x1b6>
 80059bc:	687b      	ldr	r3, [r7, #4]
 80059be:	681b      	ldr	r3, [r3, #0]
 80059c0:	f003 0304 	and.w	r3, r3, #4
 80059c4:	2b00      	cmp	r3, #0
 80059c6:	d008      	beq.n	80059da <HAL_RCC_ClockConfig+0x16e>
 80059c8:	4b19      	ldr	r3, [pc, #100]	; (8005a30 <HAL_RCC_ClockConfig+0x1c4>)
 80059ca:	685b      	ldr	r3, [r3, #4]
 80059cc:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80059d0:	687b      	ldr	r3, [r7, #4]
 80059d2:	68db      	ldr	r3, [r3, #12]
 80059d4:	4916      	ldr	r1, [pc, #88]	; (8005a30 <HAL_RCC_ClockConfig+0x1c4>)
 80059d6:	4313      	orrs	r3, r2
 80059d8:	604b      	str	r3, [r1, #4]
 80059da:	687b      	ldr	r3, [r7, #4]
 80059dc:	681b      	ldr	r3, [r3, #0]
 80059de:	f003 0308 	and.w	r3, r3, #8
 80059e2:	2b00      	cmp	r3, #0
 80059e4:	d009      	beq.n	80059fa <HAL_RCC_ClockConfig+0x18e>
 80059e6:	4b12      	ldr	r3, [pc, #72]	; (8005a30 <HAL_RCC_ClockConfig+0x1c4>)
 80059e8:	685b      	ldr	r3, [r3, #4]
 80059ea:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80059ee:	687b      	ldr	r3, [r7, #4]
 80059f0:	691b      	ldr	r3, [r3, #16]
 80059f2:	00db      	lsls	r3, r3, #3
 80059f4:	490e      	ldr	r1, [pc, #56]	; (8005a30 <HAL_RCC_ClockConfig+0x1c4>)
 80059f6:	4313      	orrs	r3, r2
 80059f8:	604b      	str	r3, [r1, #4]
 80059fa:	f000 f821 	bl	8005a40 <HAL_RCC_GetSysClockFreq>
 80059fe:	4602      	mov	r2, r0
 8005a00:	4b0b      	ldr	r3, [pc, #44]	; (8005a30 <HAL_RCC_ClockConfig+0x1c4>)
 8005a02:	685b      	ldr	r3, [r3, #4]
 8005a04:	091b      	lsrs	r3, r3, #4
 8005a06:	f003 030f 	and.w	r3, r3, #15
 8005a0a:	490a      	ldr	r1, [pc, #40]	; (8005a34 <HAL_RCC_ClockConfig+0x1c8>)
 8005a0c:	5ccb      	ldrb	r3, [r1, r3]
 8005a0e:	fa22 f303 	lsr.w	r3, r2, r3
 8005a12:	4a09      	ldr	r2, [pc, #36]	; (8005a38 <HAL_RCC_ClockConfig+0x1cc>)
 8005a14:	6013      	str	r3, [r2, #0]
 8005a16:	4b09      	ldr	r3, [pc, #36]	; (8005a3c <HAL_RCC_ClockConfig+0x1d0>)
 8005a18:	681b      	ldr	r3, [r3, #0]
 8005a1a:	4618      	mov	r0, r3
 8005a1c:	f7fe fb36 	bl	800408c <HAL_InitTick>
 8005a20:	2300      	movs	r3, #0
 8005a22:	4618      	mov	r0, r3
 8005a24:	3710      	adds	r7, #16
 8005a26:	46bd      	mov	sp, r7
 8005a28:	bd80      	pop	{r7, pc}
 8005a2a:	bf00      	nop
 8005a2c:	40022000 	.word	0x40022000
 8005a30:	40021000 	.word	0x40021000
 8005a34:	08007fa0 	.word	0x08007fa0
 8005a38:	2000003c 	.word	0x2000003c
 8005a3c:	20000040 	.word	0x20000040

08005a40 <HAL_RCC_GetSysClockFreq>:
 8005a40:	b490      	push	{r4, r7}
 8005a42:	b08a      	sub	sp, #40	; 0x28
 8005a44:	af00      	add	r7, sp, #0
 8005a46:	4b29      	ldr	r3, [pc, #164]	; (8005aec <HAL_RCC_GetSysClockFreq+0xac>)
 8005a48:	1d3c      	adds	r4, r7, #4
 8005a4a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8005a4c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8005a50:	f240 2301 	movw	r3, #513	; 0x201
 8005a54:	803b      	strh	r3, [r7, #0]
 8005a56:	2300      	movs	r3, #0
 8005a58:	61fb      	str	r3, [r7, #28]
 8005a5a:	2300      	movs	r3, #0
 8005a5c:	61bb      	str	r3, [r7, #24]
 8005a5e:	2300      	movs	r3, #0
 8005a60:	627b      	str	r3, [r7, #36]	; 0x24
 8005a62:	2300      	movs	r3, #0
 8005a64:	617b      	str	r3, [r7, #20]
 8005a66:	2300      	movs	r3, #0
 8005a68:	623b      	str	r3, [r7, #32]
 8005a6a:	4b21      	ldr	r3, [pc, #132]	; (8005af0 <HAL_RCC_GetSysClockFreq+0xb0>)
 8005a6c:	685b      	ldr	r3, [r3, #4]
 8005a6e:	61fb      	str	r3, [r7, #28]
 8005a70:	69fb      	ldr	r3, [r7, #28]
 8005a72:	f003 030c 	and.w	r3, r3, #12
 8005a76:	2b04      	cmp	r3, #4
 8005a78:	d002      	beq.n	8005a80 <HAL_RCC_GetSysClockFreq+0x40>
 8005a7a:	2b08      	cmp	r3, #8
 8005a7c:	d003      	beq.n	8005a86 <HAL_RCC_GetSysClockFreq+0x46>
 8005a7e:	e02b      	b.n	8005ad8 <HAL_RCC_GetSysClockFreq+0x98>
 8005a80:	4b1c      	ldr	r3, [pc, #112]	; (8005af4 <HAL_RCC_GetSysClockFreq+0xb4>)
 8005a82:	623b      	str	r3, [r7, #32]
 8005a84:	e02b      	b.n	8005ade <HAL_RCC_GetSysClockFreq+0x9e>
 8005a86:	69fb      	ldr	r3, [r7, #28]
 8005a88:	0c9b      	lsrs	r3, r3, #18
 8005a8a:	f003 030f 	and.w	r3, r3, #15
 8005a8e:	3328      	adds	r3, #40	; 0x28
 8005a90:	443b      	add	r3, r7
 8005a92:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8005a96:	617b      	str	r3, [r7, #20]
 8005a98:	69fb      	ldr	r3, [r7, #28]
 8005a9a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005a9e:	2b00      	cmp	r3, #0
 8005aa0:	d012      	beq.n	8005ac8 <HAL_RCC_GetSysClockFreq+0x88>
 8005aa2:	4b13      	ldr	r3, [pc, #76]	; (8005af0 <HAL_RCC_GetSysClockFreq+0xb0>)
 8005aa4:	685b      	ldr	r3, [r3, #4]
 8005aa6:	0c5b      	lsrs	r3, r3, #17
 8005aa8:	f003 0301 	and.w	r3, r3, #1
 8005aac:	3328      	adds	r3, #40	; 0x28
 8005aae:	443b      	add	r3, r7
 8005ab0:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8005ab4:	61bb      	str	r3, [r7, #24]
 8005ab6:	697b      	ldr	r3, [r7, #20]
 8005ab8:	4a0e      	ldr	r2, [pc, #56]	; (8005af4 <HAL_RCC_GetSysClockFreq+0xb4>)
 8005aba:	fb03 f202 	mul.w	r2, r3, r2
 8005abe:	69bb      	ldr	r3, [r7, #24]
 8005ac0:	fbb2 f3f3 	udiv	r3, r2, r3
 8005ac4:	627b      	str	r3, [r7, #36]	; 0x24
 8005ac6:	e004      	b.n	8005ad2 <HAL_RCC_GetSysClockFreq+0x92>
 8005ac8:	697b      	ldr	r3, [r7, #20]
 8005aca:	4a0b      	ldr	r2, [pc, #44]	; (8005af8 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005acc:	fb02 f303 	mul.w	r3, r2, r3
 8005ad0:	627b      	str	r3, [r7, #36]	; 0x24
 8005ad2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005ad4:	623b      	str	r3, [r7, #32]
 8005ad6:	e002      	b.n	8005ade <HAL_RCC_GetSysClockFreq+0x9e>
 8005ad8:	4b06      	ldr	r3, [pc, #24]	; (8005af4 <HAL_RCC_GetSysClockFreq+0xb4>)
 8005ada:	623b      	str	r3, [r7, #32]
 8005adc:	bf00      	nop
 8005ade:	6a3b      	ldr	r3, [r7, #32]
 8005ae0:	4618      	mov	r0, r3
 8005ae2:	3728      	adds	r7, #40	; 0x28
 8005ae4:	46bd      	mov	sp, r7
 8005ae6:	bc90      	pop	{r4, r7}
 8005ae8:	4770      	bx	lr
 8005aea:	bf00      	nop
 8005aec:	08007f90 	.word	0x08007f90
 8005af0:	40021000 	.word	0x40021000
 8005af4:	007a1200 	.word	0x007a1200
 8005af8:	003d0900 	.word	0x003d0900

08005afc <HAL_RCC_GetHCLKFreq>:
 8005afc:	b480      	push	{r7}
 8005afe:	af00      	add	r7, sp, #0
 8005b00:	4b02      	ldr	r3, [pc, #8]	; (8005b0c <HAL_RCC_GetHCLKFreq+0x10>)
 8005b02:	681b      	ldr	r3, [r3, #0]
 8005b04:	4618      	mov	r0, r3
 8005b06:	46bd      	mov	sp, r7
 8005b08:	bc80      	pop	{r7}
 8005b0a:	4770      	bx	lr
 8005b0c:	2000003c 	.word	0x2000003c

08005b10 <HAL_RCC_GetPCLK1Freq>:
 8005b10:	b580      	push	{r7, lr}
 8005b12:	af00      	add	r7, sp, #0
 8005b14:	f7ff fff2 	bl	8005afc <HAL_RCC_GetHCLKFreq>
 8005b18:	4602      	mov	r2, r0
 8005b1a:	4b05      	ldr	r3, [pc, #20]	; (8005b30 <HAL_RCC_GetPCLK1Freq+0x20>)
 8005b1c:	685b      	ldr	r3, [r3, #4]
 8005b1e:	0a1b      	lsrs	r3, r3, #8
 8005b20:	f003 0307 	and.w	r3, r3, #7
 8005b24:	4903      	ldr	r1, [pc, #12]	; (8005b34 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005b26:	5ccb      	ldrb	r3, [r1, r3]
 8005b28:	fa22 f303 	lsr.w	r3, r2, r3
 8005b2c:	4618      	mov	r0, r3
 8005b2e:	bd80      	pop	{r7, pc}
 8005b30:	40021000 	.word	0x40021000
 8005b34:	08007fb0 	.word	0x08007fb0

08005b38 <HAL_RCC_GetPCLK2Freq>:
 8005b38:	b580      	push	{r7, lr}
 8005b3a:	af00      	add	r7, sp, #0
 8005b3c:	f7ff ffde 	bl	8005afc <HAL_RCC_GetHCLKFreq>
 8005b40:	4602      	mov	r2, r0
 8005b42:	4b05      	ldr	r3, [pc, #20]	; (8005b58 <HAL_RCC_GetPCLK2Freq+0x20>)
 8005b44:	685b      	ldr	r3, [r3, #4]
 8005b46:	0adb      	lsrs	r3, r3, #11
 8005b48:	f003 0307 	and.w	r3, r3, #7
 8005b4c:	4903      	ldr	r1, [pc, #12]	; (8005b5c <HAL_RCC_GetPCLK2Freq+0x24>)
 8005b4e:	5ccb      	ldrb	r3, [r1, r3]
 8005b50:	fa22 f303 	lsr.w	r3, r2, r3
 8005b54:	4618      	mov	r0, r3
 8005b56:	bd80      	pop	{r7, pc}
 8005b58:	40021000 	.word	0x40021000
 8005b5c:	08007fb0 	.word	0x08007fb0

08005b60 <RCC_Delay>:
 8005b60:	b480      	push	{r7}
 8005b62:	b085      	sub	sp, #20
 8005b64:	af00      	add	r7, sp, #0
 8005b66:	6078      	str	r0, [r7, #4]
 8005b68:	4b0a      	ldr	r3, [pc, #40]	; (8005b94 <RCC_Delay+0x34>)
 8005b6a:	681b      	ldr	r3, [r3, #0]
 8005b6c:	4a0a      	ldr	r2, [pc, #40]	; (8005b98 <RCC_Delay+0x38>)
 8005b6e:	fba2 2303 	umull	r2, r3, r2, r3
 8005b72:	0a5b      	lsrs	r3, r3, #9
 8005b74:	687a      	ldr	r2, [r7, #4]
 8005b76:	fb02 f303 	mul.w	r3, r2, r3
 8005b7a:	60fb      	str	r3, [r7, #12]
 8005b7c:	bf00      	nop
 8005b7e:	68fb      	ldr	r3, [r7, #12]
 8005b80:	1e5a      	subs	r2, r3, #1
 8005b82:	60fa      	str	r2, [r7, #12]
 8005b84:	2b00      	cmp	r3, #0
 8005b86:	d1f9      	bne.n	8005b7c <RCC_Delay+0x1c>
 8005b88:	bf00      	nop
 8005b8a:	bf00      	nop
 8005b8c:	3714      	adds	r7, #20
 8005b8e:	46bd      	mov	sp, r7
 8005b90:	bc80      	pop	{r7}
 8005b92:	4770      	bx	lr
 8005b94:	2000003c 	.word	0x2000003c
 8005b98:	10624dd3 	.word	0x10624dd3

08005b9c <HAL_RCCEx_PeriphCLKConfig>:
 8005b9c:	b580      	push	{r7, lr}
 8005b9e:	b086      	sub	sp, #24
 8005ba0:	af00      	add	r7, sp, #0
 8005ba2:	6078      	str	r0, [r7, #4]
 8005ba4:	2300      	movs	r3, #0
 8005ba6:	613b      	str	r3, [r7, #16]
 8005ba8:	2300      	movs	r3, #0
 8005baa:	60fb      	str	r3, [r7, #12]
 8005bac:	687b      	ldr	r3, [r7, #4]
 8005bae:	681b      	ldr	r3, [r3, #0]
 8005bb0:	f003 0301 	and.w	r3, r3, #1
 8005bb4:	2b00      	cmp	r3, #0
 8005bb6:	d07d      	beq.n	8005cb4 <HAL_RCCEx_PeriphCLKConfig+0x118>
 8005bb8:	2300      	movs	r3, #0
 8005bba:	75fb      	strb	r3, [r7, #23]
 8005bbc:	4b4f      	ldr	r3, [pc, #316]	; (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005bbe:	69db      	ldr	r3, [r3, #28]
 8005bc0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005bc4:	2b00      	cmp	r3, #0
 8005bc6:	d10d      	bne.n	8005be4 <HAL_RCCEx_PeriphCLKConfig+0x48>
 8005bc8:	4b4c      	ldr	r3, [pc, #304]	; (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005bca:	69db      	ldr	r3, [r3, #28]
 8005bcc:	4a4b      	ldr	r2, [pc, #300]	; (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005bce:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005bd2:	61d3      	str	r3, [r2, #28]
 8005bd4:	4b49      	ldr	r3, [pc, #292]	; (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005bd6:	69db      	ldr	r3, [r3, #28]
 8005bd8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005bdc:	60bb      	str	r3, [r7, #8]
 8005bde:	68bb      	ldr	r3, [r7, #8]
 8005be0:	2301      	movs	r3, #1
 8005be2:	75fb      	strb	r3, [r7, #23]
 8005be4:	4b46      	ldr	r3, [pc, #280]	; (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8005be6:	681b      	ldr	r3, [r3, #0]
 8005be8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005bec:	2b00      	cmp	r3, #0
 8005bee:	d118      	bne.n	8005c22 <HAL_RCCEx_PeriphCLKConfig+0x86>
 8005bf0:	4b43      	ldr	r3, [pc, #268]	; (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8005bf2:	681b      	ldr	r3, [r3, #0]
 8005bf4:	4a42      	ldr	r2, [pc, #264]	; (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8005bf6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005bfa:	6013      	str	r3, [r2, #0]
 8005bfc:	f7fe fa88 	bl	8004110 <HAL_GetTick>
 8005c00:	6138      	str	r0, [r7, #16]
 8005c02:	e008      	b.n	8005c16 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8005c04:	f7fe fa84 	bl	8004110 <HAL_GetTick>
 8005c08:	4602      	mov	r2, r0
 8005c0a:	693b      	ldr	r3, [r7, #16]
 8005c0c:	1ad3      	subs	r3, r2, r3
 8005c0e:	2b64      	cmp	r3, #100	; 0x64
 8005c10:	d901      	bls.n	8005c16 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8005c12:	2303      	movs	r3, #3
 8005c14:	e06d      	b.n	8005cf2 <HAL_RCCEx_PeriphCLKConfig+0x156>
 8005c16:	4b3a      	ldr	r3, [pc, #232]	; (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8005c18:	681b      	ldr	r3, [r3, #0]
 8005c1a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005c1e:	2b00      	cmp	r3, #0
 8005c20:	d0f0      	beq.n	8005c04 <HAL_RCCEx_PeriphCLKConfig+0x68>
 8005c22:	4b36      	ldr	r3, [pc, #216]	; (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005c24:	6a1b      	ldr	r3, [r3, #32]
 8005c26:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005c2a:	60fb      	str	r3, [r7, #12]
 8005c2c:	68fb      	ldr	r3, [r7, #12]
 8005c2e:	2b00      	cmp	r3, #0
 8005c30:	d02e      	beq.n	8005c90 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8005c32:	687b      	ldr	r3, [r7, #4]
 8005c34:	685b      	ldr	r3, [r3, #4]
 8005c36:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005c3a:	68fa      	ldr	r2, [r7, #12]
 8005c3c:	429a      	cmp	r2, r3
 8005c3e:	d027      	beq.n	8005c90 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8005c40:	4b2e      	ldr	r3, [pc, #184]	; (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005c42:	6a1b      	ldr	r3, [r3, #32]
 8005c44:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005c48:	60fb      	str	r3, [r7, #12]
 8005c4a:	4b2e      	ldr	r3, [pc, #184]	; (8005d04 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8005c4c:	2201      	movs	r2, #1
 8005c4e:	601a      	str	r2, [r3, #0]
 8005c50:	4b2c      	ldr	r3, [pc, #176]	; (8005d04 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8005c52:	2200      	movs	r2, #0
 8005c54:	601a      	str	r2, [r3, #0]
 8005c56:	4a29      	ldr	r2, [pc, #164]	; (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005c58:	68fb      	ldr	r3, [r7, #12]
 8005c5a:	6213      	str	r3, [r2, #32]
 8005c5c:	68fb      	ldr	r3, [r7, #12]
 8005c5e:	f003 0301 	and.w	r3, r3, #1
 8005c62:	2b00      	cmp	r3, #0
 8005c64:	d014      	beq.n	8005c90 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8005c66:	f7fe fa53 	bl	8004110 <HAL_GetTick>
 8005c6a:	6138      	str	r0, [r7, #16]
 8005c6c:	e00a      	b.n	8005c84 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8005c6e:	f7fe fa4f 	bl	8004110 <HAL_GetTick>
 8005c72:	4602      	mov	r2, r0
 8005c74:	693b      	ldr	r3, [r7, #16]
 8005c76:	1ad3      	subs	r3, r2, r3
 8005c78:	f241 3288 	movw	r2, #5000	; 0x1388
 8005c7c:	4293      	cmp	r3, r2
 8005c7e:	d901      	bls.n	8005c84 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8005c80:	2303      	movs	r3, #3
 8005c82:	e036      	b.n	8005cf2 <HAL_RCCEx_PeriphCLKConfig+0x156>
 8005c84:	4b1d      	ldr	r3, [pc, #116]	; (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005c86:	6a1b      	ldr	r3, [r3, #32]
 8005c88:	f003 0302 	and.w	r3, r3, #2
 8005c8c:	2b00      	cmp	r3, #0
 8005c8e:	d0ee      	beq.n	8005c6e <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8005c90:	4b1a      	ldr	r3, [pc, #104]	; (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005c92:	6a1b      	ldr	r3, [r3, #32]
 8005c94:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8005c98:	687b      	ldr	r3, [r7, #4]
 8005c9a:	685b      	ldr	r3, [r3, #4]
 8005c9c:	4917      	ldr	r1, [pc, #92]	; (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005c9e:	4313      	orrs	r3, r2
 8005ca0:	620b      	str	r3, [r1, #32]
 8005ca2:	7dfb      	ldrb	r3, [r7, #23]
 8005ca4:	2b01      	cmp	r3, #1
 8005ca6:	d105      	bne.n	8005cb4 <HAL_RCCEx_PeriphCLKConfig+0x118>
 8005ca8:	4b14      	ldr	r3, [pc, #80]	; (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005caa:	69db      	ldr	r3, [r3, #28]
 8005cac:	4a13      	ldr	r2, [pc, #76]	; (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005cae:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005cb2:	61d3      	str	r3, [r2, #28]
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	681b      	ldr	r3, [r3, #0]
 8005cb8:	f003 0302 	and.w	r3, r3, #2
 8005cbc:	2b00      	cmp	r3, #0
 8005cbe:	d008      	beq.n	8005cd2 <HAL_RCCEx_PeriphCLKConfig+0x136>
 8005cc0:	4b0e      	ldr	r3, [pc, #56]	; (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005cc2:	685b      	ldr	r3, [r3, #4]
 8005cc4:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8005cc8:	687b      	ldr	r3, [r7, #4]
 8005cca:	689b      	ldr	r3, [r3, #8]
 8005ccc:	490b      	ldr	r1, [pc, #44]	; (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005cce:	4313      	orrs	r3, r2
 8005cd0:	604b      	str	r3, [r1, #4]
 8005cd2:	687b      	ldr	r3, [r7, #4]
 8005cd4:	681b      	ldr	r3, [r3, #0]
 8005cd6:	f003 0310 	and.w	r3, r3, #16
 8005cda:	2b00      	cmp	r3, #0
 8005cdc:	d008      	beq.n	8005cf0 <HAL_RCCEx_PeriphCLKConfig+0x154>
 8005cde:	4b07      	ldr	r3, [pc, #28]	; (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005ce0:	685b      	ldr	r3, [r3, #4]
 8005ce2:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 8005ce6:	687b      	ldr	r3, [r7, #4]
 8005ce8:	68db      	ldr	r3, [r3, #12]
 8005cea:	4904      	ldr	r1, [pc, #16]	; (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005cec:	4313      	orrs	r3, r2
 8005cee:	604b      	str	r3, [r1, #4]
 8005cf0:	2300      	movs	r3, #0
 8005cf2:	4618      	mov	r0, r3
 8005cf4:	3718      	adds	r7, #24
 8005cf6:	46bd      	mov	sp, r7
 8005cf8:	bd80      	pop	{r7, pc}
 8005cfa:	bf00      	nop
 8005cfc:	40021000 	.word	0x40021000
 8005d00:	40007000 	.word	0x40007000
 8005d04:	42420440 	.word	0x42420440

08005d08 <HAL_TIM_PWM_Init>:
 8005d08:	b580      	push	{r7, lr}
 8005d0a:	b082      	sub	sp, #8
 8005d0c:	af00      	add	r7, sp, #0
 8005d0e:	6078      	str	r0, [r7, #4]
 8005d10:	687b      	ldr	r3, [r7, #4]
 8005d12:	2b00      	cmp	r3, #0
 8005d14:	d101      	bne.n	8005d1a <HAL_TIM_PWM_Init+0x12>
 8005d16:	2301      	movs	r3, #1
 8005d18:	e041      	b.n	8005d9e <HAL_TIM_PWM_Init+0x96>
 8005d1a:	687b      	ldr	r3, [r7, #4]
 8005d1c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005d20:	b2db      	uxtb	r3, r3
 8005d22:	2b00      	cmp	r3, #0
 8005d24:	d106      	bne.n	8005d34 <HAL_TIM_PWM_Init+0x2c>
 8005d26:	687b      	ldr	r3, [r7, #4]
 8005d28:	2200      	movs	r2, #0
 8005d2a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005d2e:	6878      	ldr	r0, [r7, #4]
 8005d30:	f7fe f818 	bl	8003d64 <HAL_TIM_PWM_MspInit>
 8005d34:	687b      	ldr	r3, [r7, #4]
 8005d36:	2202      	movs	r2, #2
 8005d38:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005d3c:	687b      	ldr	r3, [r7, #4]
 8005d3e:	681a      	ldr	r2, [r3, #0]
 8005d40:	687b      	ldr	r3, [r7, #4]
 8005d42:	3304      	adds	r3, #4
 8005d44:	4619      	mov	r1, r3
 8005d46:	4610      	mov	r0, r2
 8005d48:	f000 fabe 	bl	80062c8 <TIM_Base_SetConfig>
 8005d4c:	687b      	ldr	r3, [r7, #4]
 8005d4e:	2201      	movs	r2, #1
 8005d50:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8005d54:	687b      	ldr	r3, [r7, #4]
 8005d56:	2201      	movs	r2, #1
 8005d58:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005d5c:	687b      	ldr	r3, [r7, #4]
 8005d5e:	2201      	movs	r2, #1
 8005d60:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005d64:	687b      	ldr	r3, [r7, #4]
 8005d66:	2201      	movs	r2, #1
 8005d68:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005d6c:	687b      	ldr	r3, [r7, #4]
 8005d6e:	2201      	movs	r2, #1
 8005d70:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005d74:	687b      	ldr	r3, [r7, #4]
 8005d76:	2201      	movs	r2, #1
 8005d78:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005d7c:	687b      	ldr	r3, [r7, #4]
 8005d7e:	2201      	movs	r2, #1
 8005d80:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8005d84:	687b      	ldr	r3, [r7, #4]
 8005d86:	2201      	movs	r2, #1
 8005d88:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8005d8c:	687b      	ldr	r3, [r7, #4]
 8005d8e:	2201      	movs	r2, #1
 8005d90:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8005d94:	687b      	ldr	r3, [r7, #4]
 8005d96:	2201      	movs	r2, #1
 8005d98:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005d9c:	2300      	movs	r3, #0
 8005d9e:	4618      	mov	r0, r3
 8005da0:	3708      	adds	r7, #8
 8005da2:	46bd      	mov	sp, r7
 8005da4:	bd80      	pop	{r7, pc}
	...

08005da8 <HAL_TIM_PWM_Start>:
 8005da8:	b580      	push	{r7, lr}
 8005daa:	b084      	sub	sp, #16
 8005dac:	af00      	add	r7, sp, #0
 8005dae:	6078      	str	r0, [r7, #4]
 8005db0:	6039      	str	r1, [r7, #0]
 8005db2:	683b      	ldr	r3, [r7, #0]
 8005db4:	2b00      	cmp	r3, #0
 8005db6:	d109      	bne.n	8005dcc <HAL_TIM_PWM_Start+0x24>
 8005db8:	687b      	ldr	r3, [r7, #4]
 8005dba:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8005dbe:	b2db      	uxtb	r3, r3
 8005dc0:	2b01      	cmp	r3, #1
 8005dc2:	bf14      	ite	ne
 8005dc4:	2301      	movne	r3, #1
 8005dc6:	2300      	moveq	r3, #0
 8005dc8:	b2db      	uxtb	r3, r3
 8005dca:	e022      	b.n	8005e12 <HAL_TIM_PWM_Start+0x6a>
 8005dcc:	683b      	ldr	r3, [r7, #0]
 8005dce:	2b04      	cmp	r3, #4
 8005dd0:	d109      	bne.n	8005de6 <HAL_TIM_PWM_Start+0x3e>
 8005dd2:	687b      	ldr	r3, [r7, #4]
 8005dd4:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8005dd8:	b2db      	uxtb	r3, r3
 8005dda:	2b01      	cmp	r3, #1
 8005ddc:	bf14      	ite	ne
 8005dde:	2301      	movne	r3, #1
 8005de0:	2300      	moveq	r3, #0
 8005de2:	b2db      	uxtb	r3, r3
 8005de4:	e015      	b.n	8005e12 <HAL_TIM_PWM_Start+0x6a>
 8005de6:	683b      	ldr	r3, [r7, #0]
 8005de8:	2b08      	cmp	r3, #8
 8005dea:	d109      	bne.n	8005e00 <HAL_TIM_PWM_Start+0x58>
 8005dec:	687b      	ldr	r3, [r7, #4]
 8005dee:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8005df2:	b2db      	uxtb	r3, r3
 8005df4:	2b01      	cmp	r3, #1
 8005df6:	bf14      	ite	ne
 8005df8:	2301      	movne	r3, #1
 8005dfa:	2300      	moveq	r3, #0
 8005dfc:	b2db      	uxtb	r3, r3
 8005dfe:	e008      	b.n	8005e12 <HAL_TIM_PWM_Start+0x6a>
 8005e00:	687b      	ldr	r3, [r7, #4]
 8005e02:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8005e06:	b2db      	uxtb	r3, r3
 8005e08:	2b01      	cmp	r3, #1
 8005e0a:	bf14      	ite	ne
 8005e0c:	2301      	movne	r3, #1
 8005e0e:	2300      	moveq	r3, #0
 8005e10:	b2db      	uxtb	r3, r3
 8005e12:	2b00      	cmp	r3, #0
 8005e14:	d001      	beq.n	8005e1a <HAL_TIM_PWM_Start+0x72>
 8005e16:	2301      	movs	r3, #1
 8005e18:	e05e      	b.n	8005ed8 <HAL_TIM_PWM_Start+0x130>
 8005e1a:	683b      	ldr	r3, [r7, #0]
 8005e1c:	2b00      	cmp	r3, #0
 8005e1e:	d104      	bne.n	8005e2a <HAL_TIM_PWM_Start+0x82>
 8005e20:	687b      	ldr	r3, [r7, #4]
 8005e22:	2202      	movs	r2, #2
 8005e24:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005e28:	e013      	b.n	8005e52 <HAL_TIM_PWM_Start+0xaa>
 8005e2a:	683b      	ldr	r3, [r7, #0]
 8005e2c:	2b04      	cmp	r3, #4
 8005e2e:	d104      	bne.n	8005e3a <HAL_TIM_PWM_Start+0x92>
 8005e30:	687b      	ldr	r3, [r7, #4]
 8005e32:	2202      	movs	r2, #2
 8005e34:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005e38:	e00b      	b.n	8005e52 <HAL_TIM_PWM_Start+0xaa>
 8005e3a:	683b      	ldr	r3, [r7, #0]
 8005e3c:	2b08      	cmp	r3, #8
 8005e3e:	d104      	bne.n	8005e4a <HAL_TIM_PWM_Start+0xa2>
 8005e40:	687b      	ldr	r3, [r7, #4]
 8005e42:	2202      	movs	r2, #2
 8005e44:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005e48:	e003      	b.n	8005e52 <HAL_TIM_PWM_Start+0xaa>
 8005e4a:	687b      	ldr	r3, [r7, #4]
 8005e4c:	2202      	movs	r2, #2
 8005e4e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005e52:	687b      	ldr	r3, [r7, #4]
 8005e54:	681b      	ldr	r3, [r3, #0]
 8005e56:	2201      	movs	r2, #1
 8005e58:	6839      	ldr	r1, [r7, #0]
 8005e5a:	4618      	mov	r0, r3
 8005e5c:	f000 fc1e 	bl	800669c <TIM_CCxChannelCmd>
 8005e60:	687b      	ldr	r3, [r7, #4]
 8005e62:	681b      	ldr	r3, [r3, #0]
 8005e64:	4a1e      	ldr	r2, [pc, #120]	; (8005ee0 <HAL_TIM_PWM_Start+0x138>)
 8005e66:	4293      	cmp	r3, r2
 8005e68:	d107      	bne.n	8005e7a <HAL_TIM_PWM_Start+0xd2>
 8005e6a:	687b      	ldr	r3, [r7, #4]
 8005e6c:	681b      	ldr	r3, [r3, #0]
 8005e6e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005e70:	687b      	ldr	r3, [r7, #4]
 8005e72:	681b      	ldr	r3, [r3, #0]
 8005e74:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005e78:	645a      	str	r2, [r3, #68]	; 0x44
 8005e7a:	687b      	ldr	r3, [r7, #4]
 8005e7c:	681b      	ldr	r3, [r3, #0]
 8005e7e:	4a18      	ldr	r2, [pc, #96]	; (8005ee0 <HAL_TIM_PWM_Start+0x138>)
 8005e80:	4293      	cmp	r3, r2
 8005e82:	d00e      	beq.n	8005ea2 <HAL_TIM_PWM_Start+0xfa>
 8005e84:	687b      	ldr	r3, [r7, #4]
 8005e86:	681b      	ldr	r3, [r3, #0]
 8005e88:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005e8c:	d009      	beq.n	8005ea2 <HAL_TIM_PWM_Start+0xfa>
 8005e8e:	687b      	ldr	r3, [r7, #4]
 8005e90:	681b      	ldr	r3, [r3, #0]
 8005e92:	4a14      	ldr	r2, [pc, #80]	; (8005ee4 <HAL_TIM_PWM_Start+0x13c>)
 8005e94:	4293      	cmp	r3, r2
 8005e96:	d004      	beq.n	8005ea2 <HAL_TIM_PWM_Start+0xfa>
 8005e98:	687b      	ldr	r3, [r7, #4]
 8005e9a:	681b      	ldr	r3, [r3, #0]
 8005e9c:	4a12      	ldr	r2, [pc, #72]	; (8005ee8 <HAL_TIM_PWM_Start+0x140>)
 8005e9e:	4293      	cmp	r3, r2
 8005ea0:	d111      	bne.n	8005ec6 <HAL_TIM_PWM_Start+0x11e>
 8005ea2:	687b      	ldr	r3, [r7, #4]
 8005ea4:	681b      	ldr	r3, [r3, #0]
 8005ea6:	689b      	ldr	r3, [r3, #8]
 8005ea8:	f003 0307 	and.w	r3, r3, #7
 8005eac:	60fb      	str	r3, [r7, #12]
 8005eae:	68fb      	ldr	r3, [r7, #12]
 8005eb0:	2b06      	cmp	r3, #6
 8005eb2:	d010      	beq.n	8005ed6 <HAL_TIM_PWM_Start+0x12e>
 8005eb4:	687b      	ldr	r3, [r7, #4]
 8005eb6:	681b      	ldr	r3, [r3, #0]
 8005eb8:	681a      	ldr	r2, [r3, #0]
 8005eba:	687b      	ldr	r3, [r7, #4]
 8005ebc:	681b      	ldr	r3, [r3, #0]
 8005ebe:	f042 0201 	orr.w	r2, r2, #1
 8005ec2:	601a      	str	r2, [r3, #0]
 8005ec4:	e007      	b.n	8005ed6 <HAL_TIM_PWM_Start+0x12e>
 8005ec6:	687b      	ldr	r3, [r7, #4]
 8005ec8:	681b      	ldr	r3, [r3, #0]
 8005eca:	681a      	ldr	r2, [r3, #0]
 8005ecc:	687b      	ldr	r3, [r7, #4]
 8005ece:	681b      	ldr	r3, [r3, #0]
 8005ed0:	f042 0201 	orr.w	r2, r2, #1
 8005ed4:	601a      	str	r2, [r3, #0]
 8005ed6:	2300      	movs	r3, #0
 8005ed8:	4618      	mov	r0, r3
 8005eda:	3710      	adds	r7, #16
 8005edc:	46bd      	mov	sp, r7
 8005ede:	bd80      	pop	{r7, pc}
 8005ee0:	40012c00 	.word	0x40012c00
 8005ee4:	40000400 	.word	0x40000400
 8005ee8:	40000800 	.word	0x40000800

08005eec <HAL_TIM_Encoder_Init>:
 8005eec:	b580      	push	{r7, lr}
 8005eee:	b086      	sub	sp, #24
 8005ef0:	af00      	add	r7, sp, #0
 8005ef2:	6078      	str	r0, [r7, #4]
 8005ef4:	6039      	str	r1, [r7, #0]
 8005ef6:	687b      	ldr	r3, [r7, #4]
 8005ef8:	2b00      	cmp	r3, #0
 8005efa:	d101      	bne.n	8005f00 <HAL_TIM_Encoder_Init+0x14>
 8005efc:	2301      	movs	r3, #1
 8005efe:	e093      	b.n	8006028 <HAL_TIM_Encoder_Init+0x13c>
 8005f00:	687b      	ldr	r3, [r7, #4]
 8005f02:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005f06:	b2db      	uxtb	r3, r3
 8005f08:	2b00      	cmp	r3, #0
 8005f0a:	d106      	bne.n	8005f1a <HAL_TIM_Encoder_Init+0x2e>
 8005f0c:	687b      	ldr	r3, [r7, #4]
 8005f0e:	2200      	movs	r2, #0
 8005f10:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005f14:	6878      	ldr	r0, [r7, #4]
 8005f16:	f7fd ff41 	bl	8003d9c <HAL_TIM_Encoder_MspInit>
 8005f1a:	687b      	ldr	r3, [r7, #4]
 8005f1c:	2202      	movs	r2, #2
 8005f1e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005f22:	687b      	ldr	r3, [r7, #4]
 8005f24:	681b      	ldr	r3, [r3, #0]
 8005f26:	689b      	ldr	r3, [r3, #8]
 8005f28:	687a      	ldr	r2, [r7, #4]
 8005f2a:	6812      	ldr	r2, [r2, #0]
 8005f2c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8005f30:	f023 0307 	bic.w	r3, r3, #7
 8005f34:	6093      	str	r3, [r2, #8]
 8005f36:	687b      	ldr	r3, [r7, #4]
 8005f38:	681a      	ldr	r2, [r3, #0]
 8005f3a:	687b      	ldr	r3, [r7, #4]
 8005f3c:	3304      	adds	r3, #4
 8005f3e:	4619      	mov	r1, r3
 8005f40:	4610      	mov	r0, r2
 8005f42:	f000 f9c1 	bl	80062c8 <TIM_Base_SetConfig>
 8005f46:	687b      	ldr	r3, [r7, #4]
 8005f48:	681b      	ldr	r3, [r3, #0]
 8005f4a:	689b      	ldr	r3, [r3, #8]
 8005f4c:	617b      	str	r3, [r7, #20]
 8005f4e:	687b      	ldr	r3, [r7, #4]
 8005f50:	681b      	ldr	r3, [r3, #0]
 8005f52:	699b      	ldr	r3, [r3, #24]
 8005f54:	613b      	str	r3, [r7, #16]
 8005f56:	687b      	ldr	r3, [r7, #4]
 8005f58:	681b      	ldr	r3, [r3, #0]
 8005f5a:	6a1b      	ldr	r3, [r3, #32]
 8005f5c:	60fb      	str	r3, [r7, #12]
 8005f5e:	683b      	ldr	r3, [r7, #0]
 8005f60:	681b      	ldr	r3, [r3, #0]
 8005f62:	697a      	ldr	r2, [r7, #20]
 8005f64:	4313      	orrs	r3, r2
 8005f66:	617b      	str	r3, [r7, #20]
 8005f68:	693b      	ldr	r3, [r7, #16]
 8005f6a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005f6e:	f023 0303 	bic.w	r3, r3, #3
 8005f72:	613b      	str	r3, [r7, #16]
 8005f74:	683b      	ldr	r3, [r7, #0]
 8005f76:	689a      	ldr	r2, [r3, #8]
 8005f78:	683b      	ldr	r3, [r7, #0]
 8005f7a:	699b      	ldr	r3, [r3, #24]
 8005f7c:	021b      	lsls	r3, r3, #8
 8005f7e:	4313      	orrs	r3, r2
 8005f80:	693a      	ldr	r2, [r7, #16]
 8005f82:	4313      	orrs	r3, r2
 8005f84:	613b      	str	r3, [r7, #16]
 8005f86:	693b      	ldr	r3, [r7, #16]
 8005f88:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8005f8c:	f023 030c 	bic.w	r3, r3, #12
 8005f90:	613b      	str	r3, [r7, #16]
 8005f92:	693b      	ldr	r3, [r7, #16]
 8005f94:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8005f98:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005f9c:	613b      	str	r3, [r7, #16]
 8005f9e:	683b      	ldr	r3, [r7, #0]
 8005fa0:	68da      	ldr	r2, [r3, #12]
 8005fa2:	683b      	ldr	r3, [r7, #0]
 8005fa4:	69db      	ldr	r3, [r3, #28]
 8005fa6:	021b      	lsls	r3, r3, #8
 8005fa8:	4313      	orrs	r3, r2
 8005faa:	693a      	ldr	r2, [r7, #16]
 8005fac:	4313      	orrs	r3, r2
 8005fae:	613b      	str	r3, [r7, #16]
 8005fb0:	683b      	ldr	r3, [r7, #0]
 8005fb2:	691b      	ldr	r3, [r3, #16]
 8005fb4:	011a      	lsls	r2, r3, #4
 8005fb6:	683b      	ldr	r3, [r7, #0]
 8005fb8:	6a1b      	ldr	r3, [r3, #32]
 8005fba:	031b      	lsls	r3, r3, #12
 8005fbc:	4313      	orrs	r3, r2
 8005fbe:	693a      	ldr	r2, [r7, #16]
 8005fc0:	4313      	orrs	r3, r2
 8005fc2:	613b      	str	r3, [r7, #16]
 8005fc4:	68fb      	ldr	r3, [r7, #12]
 8005fc6:	f023 0322 	bic.w	r3, r3, #34	; 0x22
 8005fca:	60fb      	str	r3, [r7, #12]
 8005fcc:	683b      	ldr	r3, [r7, #0]
 8005fce:	685a      	ldr	r2, [r3, #4]
 8005fd0:	683b      	ldr	r3, [r7, #0]
 8005fd2:	695b      	ldr	r3, [r3, #20]
 8005fd4:	011b      	lsls	r3, r3, #4
 8005fd6:	4313      	orrs	r3, r2
 8005fd8:	68fa      	ldr	r2, [r7, #12]
 8005fda:	4313      	orrs	r3, r2
 8005fdc:	60fb      	str	r3, [r7, #12]
 8005fde:	687b      	ldr	r3, [r7, #4]
 8005fe0:	681b      	ldr	r3, [r3, #0]
 8005fe2:	697a      	ldr	r2, [r7, #20]
 8005fe4:	609a      	str	r2, [r3, #8]
 8005fe6:	687b      	ldr	r3, [r7, #4]
 8005fe8:	681b      	ldr	r3, [r3, #0]
 8005fea:	693a      	ldr	r2, [r7, #16]
 8005fec:	619a      	str	r2, [r3, #24]
 8005fee:	687b      	ldr	r3, [r7, #4]
 8005ff0:	681b      	ldr	r3, [r3, #0]
 8005ff2:	68fa      	ldr	r2, [r7, #12]
 8005ff4:	621a      	str	r2, [r3, #32]
 8005ff6:	687b      	ldr	r3, [r7, #4]
 8005ff8:	2201      	movs	r2, #1
 8005ffa:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8005ffe:	687b      	ldr	r3, [r7, #4]
 8006000:	2201      	movs	r2, #1
 8006002:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006006:	687b      	ldr	r3, [r7, #4]
 8006008:	2201      	movs	r2, #1
 800600a:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800600e:	687b      	ldr	r3, [r7, #4]
 8006010:	2201      	movs	r2, #1
 8006012:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006016:	687b      	ldr	r3, [r7, #4]
 8006018:	2201      	movs	r2, #1
 800601a:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800601e:	687b      	ldr	r3, [r7, #4]
 8006020:	2201      	movs	r2, #1
 8006022:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006026:	2300      	movs	r3, #0
 8006028:	4618      	mov	r0, r3
 800602a:	3718      	adds	r7, #24
 800602c:	46bd      	mov	sp, r7
 800602e:	bd80      	pop	{r7, pc}

08006030 <HAL_TIM_Encoder_Start>:
 8006030:	b580      	push	{r7, lr}
 8006032:	b084      	sub	sp, #16
 8006034:	af00      	add	r7, sp, #0
 8006036:	6078      	str	r0, [r7, #4]
 8006038:	6039      	str	r1, [r7, #0]
 800603a:	687b      	ldr	r3, [r7, #4]
 800603c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006040:	73fb      	strb	r3, [r7, #15]
 8006042:	687b      	ldr	r3, [r7, #4]
 8006044:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8006048:	73bb      	strb	r3, [r7, #14]
 800604a:	687b      	ldr	r3, [r7, #4]
 800604c:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8006050:	737b      	strb	r3, [r7, #13]
 8006052:	687b      	ldr	r3, [r7, #4]
 8006054:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 8006058:	733b      	strb	r3, [r7, #12]
 800605a:	683b      	ldr	r3, [r7, #0]
 800605c:	2b00      	cmp	r3, #0
 800605e:	d110      	bne.n	8006082 <HAL_TIM_Encoder_Start+0x52>
 8006060:	7bfb      	ldrb	r3, [r7, #15]
 8006062:	2b01      	cmp	r3, #1
 8006064:	d102      	bne.n	800606c <HAL_TIM_Encoder_Start+0x3c>
 8006066:	7b7b      	ldrb	r3, [r7, #13]
 8006068:	2b01      	cmp	r3, #1
 800606a:	d001      	beq.n	8006070 <HAL_TIM_Encoder_Start+0x40>
 800606c:	2301      	movs	r3, #1
 800606e:	e069      	b.n	8006144 <HAL_TIM_Encoder_Start+0x114>
 8006070:	687b      	ldr	r3, [r7, #4]
 8006072:	2202      	movs	r2, #2
 8006074:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006078:	687b      	ldr	r3, [r7, #4]
 800607a:	2202      	movs	r2, #2
 800607c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006080:	e031      	b.n	80060e6 <HAL_TIM_Encoder_Start+0xb6>
 8006082:	683b      	ldr	r3, [r7, #0]
 8006084:	2b04      	cmp	r3, #4
 8006086:	d110      	bne.n	80060aa <HAL_TIM_Encoder_Start+0x7a>
 8006088:	7bbb      	ldrb	r3, [r7, #14]
 800608a:	2b01      	cmp	r3, #1
 800608c:	d102      	bne.n	8006094 <HAL_TIM_Encoder_Start+0x64>
 800608e:	7b3b      	ldrb	r3, [r7, #12]
 8006090:	2b01      	cmp	r3, #1
 8006092:	d001      	beq.n	8006098 <HAL_TIM_Encoder_Start+0x68>
 8006094:	2301      	movs	r3, #1
 8006096:	e055      	b.n	8006144 <HAL_TIM_Encoder_Start+0x114>
 8006098:	687b      	ldr	r3, [r7, #4]
 800609a:	2202      	movs	r2, #2
 800609c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80060a0:	687b      	ldr	r3, [r7, #4]
 80060a2:	2202      	movs	r2, #2
 80060a4:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80060a8:	e01d      	b.n	80060e6 <HAL_TIM_Encoder_Start+0xb6>
 80060aa:	7bfb      	ldrb	r3, [r7, #15]
 80060ac:	2b01      	cmp	r3, #1
 80060ae:	d108      	bne.n	80060c2 <HAL_TIM_Encoder_Start+0x92>
 80060b0:	7bbb      	ldrb	r3, [r7, #14]
 80060b2:	2b01      	cmp	r3, #1
 80060b4:	d105      	bne.n	80060c2 <HAL_TIM_Encoder_Start+0x92>
 80060b6:	7b7b      	ldrb	r3, [r7, #13]
 80060b8:	2b01      	cmp	r3, #1
 80060ba:	d102      	bne.n	80060c2 <HAL_TIM_Encoder_Start+0x92>
 80060bc:	7b3b      	ldrb	r3, [r7, #12]
 80060be:	2b01      	cmp	r3, #1
 80060c0:	d001      	beq.n	80060c6 <HAL_TIM_Encoder_Start+0x96>
 80060c2:	2301      	movs	r3, #1
 80060c4:	e03e      	b.n	8006144 <HAL_TIM_Encoder_Start+0x114>
 80060c6:	687b      	ldr	r3, [r7, #4]
 80060c8:	2202      	movs	r2, #2
 80060ca:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80060ce:	687b      	ldr	r3, [r7, #4]
 80060d0:	2202      	movs	r2, #2
 80060d2:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80060d6:	687b      	ldr	r3, [r7, #4]
 80060d8:	2202      	movs	r2, #2
 80060da:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80060de:	687b      	ldr	r3, [r7, #4]
 80060e0:	2202      	movs	r2, #2
 80060e2:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80060e6:	683b      	ldr	r3, [r7, #0]
 80060e8:	2b00      	cmp	r3, #0
 80060ea:	d003      	beq.n	80060f4 <HAL_TIM_Encoder_Start+0xc4>
 80060ec:	683b      	ldr	r3, [r7, #0]
 80060ee:	2b04      	cmp	r3, #4
 80060f0:	d008      	beq.n	8006104 <HAL_TIM_Encoder_Start+0xd4>
 80060f2:	e00f      	b.n	8006114 <HAL_TIM_Encoder_Start+0xe4>
 80060f4:	687b      	ldr	r3, [r7, #4]
 80060f6:	681b      	ldr	r3, [r3, #0]
 80060f8:	2201      	movs	r2, #1
 80060fa:	2100      	movs	r1, #0
 80060fc:	4618      	mov	r0, r3
 80060fe:	f000 facd 	bl	800669c <TIM_CCxChannelCmd>
 8006102:	e016      	b.n	8006132 <HAL_TIM_Encoder_Start+0x102>
 8006104:	687b      	ldr	r3, [r7, #4]
 8006106:	681b      	ldr	r3, [r3, #0]
 8006108:	2201      	movs	r2, #1
 800610a:	2104      	movs	r1, #4
 800610c:	4618      	mov	r0, r3
 800610e:	f000 fac5 	bl	800669c <TIM_CCxChannelCmd>
 8006112:	e00e      	b.n	8006132 <HAL_TIM_Encoder_Start+0x102>
 8006114:	687b      	ldr	r3, [r7, #4]
 8006116:	681b      	ldr	r3, [r3, #0]
 8006118:	2201      	movs	r2, #1
 800611a:	2100      	movs	r1, #0
 800611c:	4618      	mov	r0, r3
 800611e:	f000 fabd 	bl	800669c <TIM_CCxChannelCmd>
 8006122:	687b      	ldr	r3, [r7, #4]
 8006124:	681b      	ldr	r3, [r3, #0]
 8006126:	2201      	movs	r2, #1
 8006128:	2104      	movs	r1, #4
 800612a:	4618      	mov	r0, r3
 800612c:	f000 fab6 	bl	800669c <TIM_CCxChannelCmd>
 8006130:	bf00      	nop
 8006132:	687b      	ldr	r3, [r7, #4]
 8006134:	681b      	ldr	r3, [r3, #0]
 8006136:	681a      	ldr	r2, [r3, #0]
 8006138:	687b      	ldr	r3, [r7, #4]
 800613a:	681b      	ldr	r3, [r3, #0]
 800613c:	f042 0201 	orr.w	r2, r2, #1
 8006140:	601a      	str	r2, [r3, #0]
 8006142:	2300      	movs	r3, #0
 8006144:	4618      	mov	r0, r3
 8006146:	3710      	adds	r7, #16
 8006148:	46bd      	mov	sp, r7
 800614a:	bd80      	pop	{r7, pc}

0800614c <HAL_TIM_PWM_ConfigChannel>:
 800614c:	b580      	push	{r7, lr}
 800614e:	b084      	sub	sp, #16
 8006150:	af00      	add	r7, sp, #0
 8006152:	60f8      	str	r0, [r7, #12]
 8006154:	60b9      	str	r1, [r7, #8]
 8006156:	607a      	str	r2, [r7, #4]
 8006158:	68fb      	ldr	r3, [r7, #12]
 800615a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800615e:	2b01      	cmp	r3, #1
 8006160:	d101      	bne.n	8006166 <HAL_TIM_PWM_ConfigChannel+0x1a>
 8006162:	2302      	movs	r3, #2
 8006164:	e0ac      	b.n	80062c0 <HAL_TIM_PWM_ConfigChannel+0x174>
 8006166:	68fb      	ldr	r3, [r7, #12]
 8006168:	2201      	movs	r2, #1
 800616a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800616e:	687b      	ldr	r3, [r7, #4]
 8006170:	2b0c      	cmp	r3, #12
 8006172:	f200 809f 	bhi.w	80062b4 <HAL_TIM_PWM_ConfigChannel+0x168>
 8006176:	a201      	add	r2, pc, #4	; (adr r2, 800617c <HAL_TIM_PWM_ConfigChannel+0x30>)
 8006178:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800617c:	080061b1 	.word	0x080061b1
 8006180:	080062b5 	.word	0x080062b5
 8006184:	080062b5 	.word	0x080062b5
 8006188:	080062b5 	.word	0x080062b5
 800618c:	080061f1 	.word	0x080061f1
 8006190:	080062b5 	.word	0x080062b5
 8006194:	080062b5 	.word	0x080062b5
 8006198:	080062b5 	.word	0x080062b5
 800619c:	08006233 	.word	0x08006233
 80061a0:	080062b5 	.word	0x080062b5
 80061a4:	080062b5 	.word	0x080062b5
 80061a8:	080062b5 	.word	0x080062b5
 80061ac:	08006273 	.word	0x08006273
 80061b0:	68fb      	ldr	r3, [r7, #12]
 80061b2:	681b      	ldr	r3, [r3, #0]
 80061b4:	68b9      	ldr	r1, [r7, #8]
 80061b6:	4618      	mov	r0, r3
 80061b8:	f000 f8e8 	bl	800638c <TIM_OC1_SetConfig>
 80061bc:	68fb      	ldr	r3, [r7, #12]
 80061be:	681b      	ldr	r3, [r3, #0]
 80061c0:	699a      	ldr	r2, [r3, #24]
 80061c2:	68fb      	ldr	r3, [r7, #12]
 80061c4:	681b      	ldr	r3, [r3, #0]
 80061c6:	f042 0208 	orr.w	r2, r2, #8
 80061ca:	619a      	str	r2, [r3, #24]
 80061cc:	68fb      	ldr	r3, [r7, #12]
 80061ce:	681b      	ldr	r3, [r3, #0]
 80061d0:	699a      	ldr	r2, [r3, #24]
 80061d2:	68fb      	ldr	r3, [r7, #12]
 80061d4:	681b      	ldr	r3, [r3, #0]
 80061d6:	f022 0204 	bic.w	r2, r2, #4
 80061da:	619a      	str	r2, [r3, #24]
 80061dc:	68fb      	ldr	r3, [r7, #12]
 80061de:	681b      	ldr	r3, [r3, #0]
 80061e0:	6999      	ldr	r1, [r3, #24]
 80061e2:	68bb      	ldr	r3, [r7, #8]
 80061e4:	691a      	ldr	r2, [r3, #16]
 80061e6:	68fb      	ldr	r3, [r7, #12]
 80061e8:	681b      	ldr	r3, [r3, #0]
 80061ea:	430a      	orrs	r2, r1
 80061ec:	619a      	str	r2, [r3, #24]
 80061ee:	e062      	b.n	80062b6 <HAL_TIM_PWM_ConfigChannel+0x16a>
 80061f0:	68fb      	ldr	r3, [r7, #12]
 80061f2:	681b      	ldr	r3, [r3, #0]
 80061f4:	68b9      	ldr	r1, [r7, #8]
 80061f6:	4618      	mov	r0, r3
 80061f8:	f000 f92e 	bl	8006458 <TIM_OC2_SetConfig>
 80061fc:	68fb      	ldr	r3, [r7, #12]
 80061fe:	681b      	ldr	r3, [r3, #0]
 8006200:	699a      	ldr	r2, [r3, #24]
 8006202:	68fb      	ldr	r3, [r7, #12]
 8006204:	681b      	ldr	r3, [r3, #0]
 8006206:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800620a:	619a      	str	r2, [r3, #24]
 800620c:	68fb      	ldr	r3, [r7, #12]
 800620e:	681b      	ldr	r3, [r3, #0]
 8006210:	699a      	ldr	r2, [r3, #24]
 8006212:	68fb      	ldr	r3, [r7, #12]
 8006214:	681b      	ldr	r3, [r3, #0]
 8006216:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800621a:	619a      	str	r2, [r3, #24]
 800621c:	68fb      	ldr	r3, [r7, #12]
 800621e:	681b      	ldr	r3, [r3, #0]
 8006220:	6999      	ldr	r1, [r3, #24]
 8006222:	68bb      	ldr	r3, [r7, #8]
 8006224:	691b      	ldr	r3, [r3, #16]
 8006226:	021a      	lsls	r2, r3, #8
 8006228:	68fb      	ldr	r3, [r7, #12]
 800622a:	681b      	ldr	r3, [r3, #0]
 800622c:	430a      	orrs	r2, r1
 800622e:	619a      	str	r2, [r3, #24]
 8006230:	e041      	b.n	80062b6 <HAL_TIM_PWM_ConfigChannel+0x16a>
 8006232:	68fb      	ldr	r3, [r7, #12]
 8006234:	681b      	ldr	r3, [r3, #0]
 8006236:	68b9      	ldr	r1, [r7, #8]
 8006238:	4618      	mov	r0, r3
 800623a:	f000 f977 	bl	800652c <TIM_OC3_SetConfig>
 800623e:	68fb      	ldr	r3, [r7, #12]
 8006240:	681b      	ldr	r3, [r3, #0]
 8006242:	69da      	ldr	r2, [r3, #28]
 8006244:	68fb      	ldr	r3, [r7, #12]
 8006246:	681b      	ldr	r3, [r3, #0]
 8006248:	f042 0208 	orr.w	r2, r2, #8
 800624c:	61da      	str	r2, [r3, #28]
 800624e:	68fb      	ldr	r3, [r7, #12]
 8006250:	681b      	ldr	r3, [r3, #0]
 8006252:	69da      	ldr	r2, [r3, #28]
 8006254:	68fb      	ldr	r3, [r7, #12]
 8006256:	681b      	ldr	r3, [r3, #0]
 8006258:	f022 0204 	bic.w	r2, r2, #4
 800625c:	61da      	str	r2, [r3, #28]
 800625e:	68fb      	ldr	r3, [r7, #12]
 8006260:	681b      	ldr	r3, [r3, #0]
 8006262:	69d9      	ldr	r1, [r3, #28]
 8006264:	68bb      	ldr	r3, [r7, #8]
 8006266:	691a      	ldr	r2, [r3, #16]
 8006268:	68fb      	ldr	r3, [r7, #12]
 800626a:	681b      	ldr	r3, [r3, #0]
 800626c:	430a      	orrs	r2, r1
 800626e:	61da      	str	r2, [r3, #28]
 8006270:	e021      	b.n	80062b6 <HAL_TIM_PWM_ConfigChannel+0x16a>
 8006272:	68fb      	ldr	r3, [r7, #12]
 8006274:	681b      	ldr	r3, [r3, #0]
 8006276:	68b9      	ldr	r1, [r7, #8]
 8006278:	4618      	mov	r0, r3
 800627a:	f000 f9c1 	bl	8006600 <TIM_OC4_SetConfig>
 800627e:	68fb      	ldr	r3, [r7, #12]
 8006280:	681b      	ldr	r3, [r3, #0]
 8006282:	69da      	ldr	r2, [r3, #28]
 8006284:	68fb      	ldr	r3, [r7, #12]
 8006286:	681b      	ldr	r3, [r3, #0]
 8006288:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800628c:	61da      	str	r2, [r3, #28]
 800628e:	68fb      	ldr	r3, [r7, #12]
 8006290:	681b      	ldr	r3, [r3, #0]
 8006292:	69da      	ldr	r2, [r3, #28]
 8006294:	68fb      	ldr	r3, [r7, #12]
 8006296:	681b      	ldr	r3, [r3, #0]
 8006298:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800629c:	61da      	str	r2, [r3, #28]
 800629e:	68fb      	ldr	r3, [r7, #12]
 80062a0:	681b      	ldr	r3, [r3, #0]
 80062a2:	69d9      	ldr	r1, [r3, #28]
 80062a4:	68bb      	ldr	r3, [r7, #8]
 80062a6:	691b      	ldr	r3, [r3, #16]
 80062a8:	021a      	lsls	r2, r3, #8
 80062aa:	68fb      	ldr	r3, [r7, #12]
 80062ac:	681b      	ldr	r3, [r3, #0]
 80062ae:	430a      	orrs	r2, r1
 80062b0:	61da      	str	r2, [r3, #28]
 80062b2:	e000      	b.n	80062b6 <HAL_TIM_PWM_ConfigChannel+0x16a>
 80062b4:	bf00      	nop
 80062b6:	68fb      	ldr	r3, [r7, #12]
 80062b8:	2200      	movs	r2, #0
 80062ba:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80062be:	2300      	movs	r3, #0
 80062c0:	4618      	mov	r0, r3
 80062c2:	3710      	adds	r7, #16
 80062c4:	46bd      	mov	sp, r7
 80062c6:	bd80      	pop	{r7, pc}

080062c8 <TIM_Base_SetConfig>:
 80062c8:	b480      	push	{r7}
 80062ca:	b085      	sub	sp, #20
 80062cc:	af00      	add	r7, sp, #0
 80062ce:	6078      	str	r0, [r7, #4]
 80062d0:	6039      	str	r1, [r7, #0]
 80062d2:	687b      	ldr	r3, [r7, #4]
 80062d4:	681b      	ldr	r3, [r3, #0]
 80062d6:	60fb      	str	r3, [r7, #12]
 80062d8:	687b      	ldr	r3, [r7, #4]
 80062da:	4a29      	ldr	r2, [pc, #164]	; (8006380 <TIM_Base_SetConfig+0xb8>)
 80062dc:	4293      	cmp	r3, r2
 80062de:	d00b      	beq.n	80062f8 <TIM_Base_SetConfig+0x30>
 80062e0:	687b      	ldr	r3, [r7, #4]
 80062e2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80062e6:	d007      	beq.n	80062f8 <TIM_Base_SetConfig+0x30>
 80062e8:	687b      	ldr	r3, [r7, #4]
 80062ea:	4a26      	ldr	r2, [pc, #152]	; (8006384 <TIM_Base_SetConfig+0xbc>)
 80062ec:	4293      	cmp	r3, r2
 80062ee:	d003      	beq.n	80062f8 <TIM_Base_SetConfig+0x30>
 80062f0:	687b      	ldr	r3, [r7, #4]
 80062f2:	4a25      	ldr	r2, [pc, #148]	; (8006388 <TIM_Base_SetConfig+0xc0>)
 80062f4:	4293      	cmp	r3, r2
 80062f6:	d108      	bne.n	800630a <TIM_Base_SetConfig+0x42>
 80062f8:	68fb      	ldr	r3, [r7, #12]
 80062fa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80062fe:	60fb      	str	r3, [r7, #12]
 8006300:	683b      	ldr	r3, [r7, #0]
 8006302:	685b      	ldr	r3, [r3, #4]
 8006304:	68fa      	ldr	r2, [r7, #12]
 8006306:	4313      	orrs	r3, r2
 8006308:	60fb      	str	r3, [r7, #12]
 800630a:	687b      	ldr	r3, [r7, #4]
 800630c:	4a1c      	ldr	r2, [pc, #112]	; (8006380 <TIM_Base_SetConfig+0xb8>)
 800630e:	4293      	cmp	r3, r2
 8006310:	d00b      	beq.n	800632a <TIM_Base_SetConfig+0x62>
 8006312:	687b      	ldr	r3, [r7, #4]
 8006314:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006318:	d007      	beq.n	800632a <TIM_Base_SetConfig+0x62>
 800631a:	687b      	ldr	r3, [r7, #4]
 800631c:	4a19      	ldr	r2, [pc, #100]	; (8006384 <TIM_Base_SetConfig+0xbc>)
 800631e:	4293      	cmp	r3, r2
 8006320:	d003      	beq.n	800632a <TIM_Base_SetConfig+0x62>
 8006322:	687b      	ldr	r3, [r7, #4]
 8006324:	4a18      	ldr	r2, [pc, #96]	; (8006388 <TIM_Base_SetConfig+0xc0>)
 8006326:	4293      	cmp	r3, r2
 8006328:	d108      	bne.n	800633c <TIM_Base_SetConfig+0x74>
 800632a:	68fb      	ldr	r3, [r7, #12]
 800632c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006330:	60fb      	str	r3, [r7, #12]
 8006332:	683b      	ldr	r3, [r7, #0]
 8006334:	68db      	ldr	r3, [r3, #12]
 8006336:	68fa      	ldr	r2, [r7, #12]
 8006338:	4313      	orrs	r3, r2
 800633a:	60fb      	str	r3, [r7, #12]
 800633c:	68fb      	ldr	r3, [r7, #12]
 800633e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8006342:	683b      	ldr	r3, [r7, #0]
 8006344:	695b      	ldr	r3, [r3, #20]
 8006346:	4313      	orrs	r3, r2
 8006348:	60fb      	str	r3, [r7, #12]
 800634a:	687b      	ldr	r3, [r7, #4]
 800634c:	68fa      	ldr	r2, [r7, #12]
 800634e:	601a      	str	r2, [r3, #0]
 8006350:	683b      	ldr	r3, [r7, #0]
 8006352:	689a      	ldr	r2, [r3, #8]
 8006354:	687b      	ldr	r3, [r7, #4]
 8006356:	62da      	str	r2, [r3, #44]	; 0x2c
 8006358:	683b      	ldr	r3, [r7, #0]
 800635a:	681a      	ldr	r2, [r3, #0]
 800635c:	687b      	ldr	r3, [r7, #4]
 800635e:	629a      	str	r2, [r3, #40]	; 0x28
 8006360:	687b      	ldr	r3, [r7, #4]
 8006362:	4a07      	ldr	r2, [pc, #28]	; (8006380 <TIM_Base_SetConfig+0xb8>)
 8006364:	4293      	cmp	r3, r2
 8006366:	d103      	bne.n	8006370 <TIM_Base_SetConfig+0xa8>
 8006368:	683b      	ldr	r3, [r7, #0]
 800636a:	691a      	ldr	r2, [r3, #16]
 800636c:	687b      	ldr	r3, [r7, #4]
 800636e:	631a      	str	r2, [r3, #48]	; 0x30
 8006370:	687b      	ldr	r3, [r7, #4]
 8006372:	2201      	movs	r2, #1
 8006374:	615a      	str	r2, [r3, #20]
 8006376:	bf00      	nop
 8006378:	3714      	adds	r7, #20
 800637a:	46bd      	mov	sp, r7
 800637c:	bc80      	pop	{r7}
 800637e:	4770      	bx	lr
 8006380:	40012c00 	.word	0x40012c00
 8006384:	40000400 	.word	0x40000400
 8006388:	40000800 	.word	0x40000800

0800638c <TIM_OC1_SetConfig>:
 800638c:	b480      	push	{r7}
 800638e:	b087      	sub	sp, #28
 8006390:	af00      	add	r7, sp, #0
 8006392:	6078      	str	r0, [r7, #4]
 8006394:	6039      	str	r1, [r7, #0]
 8006396:	687b      	ldr	r3, [r7, #4]
 8006398:	6a1b      	ldr	r3, [r3, #32]
 800639a:	f023 0201 	bic.w	r2, r3, #1
 800639e:	687b      	ldr	r3, [r7, #4]
 80063a0:	621a      	str	r2, [r3, #32]
 80063a2:	687b      	ldr	r3, [r7, #4]
 80063a4:	6a1b      	ldr	r3, [r3, #32]
 80063a6:	617b      	str	r3, [r7, #20]
 80063a8:	687b      	ldr	r3, [r7, #4]
 80063aa:	685b      	ldr	r3, [r3, #4]
 80063ac:	613b      	str	r3, [r7, #16]
 80063ae:	687b      	ldr	r3, [r7, #4]
 80063b0:	699b      	ldr	r3, [r3, #24]
 80063b2:	60fb      	str	r3, [r7, #12]
 80063b4:	68fb      	ldr	r3, [r7, #12]
 80063b6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80063ba:	60fb      	str	r3, [r7, #12]
 80063bc:	68fb      	ldr	r3, [r7, #12]
 80063be:	f023 0303 	bic.w	r3, r3, #3
 80063c2:	60fb      	str	r3, [r7, #12]
 80063c4:	683b      	ldr	r3, [r7, #0]
 80063c6:	681b      	ldr	r3, [r3, #0]
 80063c8:	68fa      	ldr	r2, [r7, #12]
 80063ca:	4313      	orrs	r3, r2
 80063cc:	60fb      	str	r3, [r7, #12]
 80063ce:	697b      	ldr	r3, [r7, #20]
 80063d0:	f023 0302 	bic.w	r3, r3, #2
 80063d4:	617b      	str	r3, [r7, #20]
 80063d6:	683b      	ldr	r3, [r7, #0]
 80063d8:	689b      	ldr	r3, [r3, #8]
 80063da:	697a      	ldr	r2, [r7, #20]
 80063dc:	4313      	orrs	r3, r2
 80063de:	617b      	str	r3, [r7, #20]
 80063e0:	687b      	ldr	r3, [r7, #4]
 80063e2:	4a1c      	ldr	r2, [pc, #112]	; (8006454 <TIM_OC1_SetConfig+0xc8>)
 80063e4:	4293      	cmp	r3, r2
 80063e6:	d10c      	bne.n	8006402 <TIM_OC1_SetConfig+0x76>
 80063e8:	697b      	ldr	r3, [r7, #20]
 80063ea:	f023 0308 	bic.w	r3, r3, #8
 80063ee:	617b      	str	r3, [r7, #20]
 80063f0:	683b      	ldr	r3, [r7, #0]
 80063f2:	68db      	ldr	r3, [r3, #12]
 80063f4:	697a      	ldr	r2, [r7, #20]
 80063f6:	4313      	orrs	r3, r2
 80063f8:	617b      	str	r3, [r7, #20]
 80063fa:	697b      	ldr	r3, [r7, #20]
 80063fc:	f023 0304 	bic.w	r3, r3, #4
 8006400:	617b      	str	r3, [r7, #20]
 8006402:	687b      	ldr	r3, [r7, #4]
 8006404:	4a13      	ldr	r2, [pc, #76]	; (8006454 <TIM_OC1_SetConfig+0xc8>)
 8006406:	4293      	cmp	r3, r2
 8006408:	d111      	bne.n	800642e <TIM_OC1_SetConfig+0xa2>
 800640a:	693b      	ldr	r3, [r7, #16]
 800640c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006410:	613b      	str	r3, [r7, #16]
 8006412:	693b      	ldr	r3, [r7, #16]
 8006414:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006418:	613b      	str	r3, [r7, #16]
 800641a:	683b      	ldr	r3, [r7, #0]
 800641c:	695b      	ldr	r3, [r3, #20]
 800641e:	693a      	ldr	r2, [r7, #16]
 8006420:	4313      	orrs	r3, r2
 8006422:	613b      	str	r3, [r7, #16]
 8006424:	683b      	ldr	r3, [r7, #0]
 8006426:	699b      	ldr	r3, [r3, #24]
 8006428:	693a      	ldr	r2, [r7, #16]
 800642a:	4313      	orrs	r3, r2
 800642c:	613b      	str	r3, [r7, #16]
 800642e:	687b      	ldr	r3, [r7, #4]
 8006430:	693a      	ldr	r2, [r7, #16]
 8006432:	605a      	str	r2, [r3, #4]
 8006434:	687b      	ldr	r3, [r7, #4]
 8006436:	68fa      	ldr	r2, [r7, #12]
 8006438:	619a      	str	r2, [r3, #24]
 800643a:	683b      	ldr	r3, [r7, #0]
 800643c:	685a      	ldr	r2, [r3, #4]
 800643e:	687b      	ldr	r3, [r7, #4]
 8006440:	635a      	str	r2, [r3, #52]	; 0x34
 8006442:	687b      	ldr	r3, [r7, #4]
 8006444:	697a      	ldr	r2, [r7, #20]
 8006446:	621a      	str	r2, [r3, #32]
 8006448:	bf00      	nop
 800644a:	371c      	adds	r7, #28
 800644c:	46bd      	mov	sp, r7
 800644e:	bc80      	pop	{r7}
 8006450:	4770      	bx	lr
 8006452:	bf00      	nop
 8006454:	40012c00 	.word	0x40012c00

08006458 <TIM_OC2_SetConfig>:
 8006458:	b480      	push	{r7}
 800645a:	b087      	sub	sp, #28
 800645c:	af00      	add	r7, sp, #0
 800645e:	6078      	str	r0, [r7, #4]
 8006460:	6039      	str	r1, [r7, #0]
 8006462:	687b      	ldr	r3, [r7, #4]
 8006464:	6a1b      	ldr	r3, [r3, #32]
 8006466:	f023 0210 	bic.w	r2, r3, #16
 800646a:	687b      	ldr	r3, [r7, #4]
 800646c:	621a      	str	r2, [r3, #32]
 800646e:	687b      	ldr	r3, [r7, #4]
 8006470:	6a1b      	ldr	r3, [r3, #32]
 8006472:	617b      	str	r3, [r7, #20]
 8006474:	687b      	ldr	r3, [r7, #4]
 8006476:	685b      	ldr	r3, [r3, #4]
 8006478:	613b      	str	r3, [r7, #16]
 800647a:	687b      	ldr	r3, [r7, #4]
 800647c:	699b      	ldr	r3, [r3, #24]
 800647e:	60fb      	str	r3, [r7, #12]
 8006480:	68fb      	ldr	r3, [r7, #12]
 8006482:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8006486:	60fb      	str	r3, [r7, #12]
 8006488:	68fb      	ldr	r3, [r7, #12]
 800648a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800648e:	60fb      	str	r3, [r7, #12]
 8006490:	683b      	ldr	r3, [r7, #0]
 8006492:	681b      	ldr	r3, [r3, #0]
 8006494:	021b      	lsls	r3, r3, #8
 8006496:	68fa      	ldr	r2, [r7, #12]
 8006498:	4313      	orrs	r3, r2
 800649a:	60fb      	str	r3, [r7, #12]
 800649c:	697b      	ldr	r3, [r7, #20]
 800649e:	f023 0320 	bic.w	r3, r3, #32
 80064a2:	617b      	str	r3, [r7, #20]
 80064a4:	683b      	ldr	r3, [r7, #0]
 80064a6:	689b      	ldr	r3, [r3, #8]
 80064a8:	011b      	lsls	r3, r3, #4
 80064aa:	697a      	ldr	r2, [r7, #20]
 80064ac:	4313      	orrs	r3, r2
 80064ae:	617b      	str	r3, [r7, #20]
 80064b0:	687b      	ldr	r3, [r7, #4]
 80064b2:	4a1d      	ldr	r2, [pc, #116]	; (8006528 <TIM_OC2_SetConfig+0xd0>)
 80064b4:	4293      	cmp	r3, r2
 80064b6:	d10d      	bne.n	80064d4 <TIM_OC2_SetConfig+0x7c>
 80064b8:	697b      	ldr	r3, [r7, #20]
 80064ba:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80064be:	617b      	str	r3, [r7, #20]
 80064c0:	683b      	ldr	r3, [r7, #0]
 80064c2:	68db      	ldr	r3, [r3, #12]
 80064c4:	011b      	lsls	r3, r3, #4
 80064c6:	697a      	ldr	r2, [r7, #20]
 80064c8:	4313      	orrs	r3, r2
 80064ca:	617b      	str	r3, [r7, #20]
 80064cc:	697b      	ldr	r3, [r7, #20]
 80064ce:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80064d2:	617b      	str	r3, [r7, #20]
 80064d4:	687b      	ldr	r3, [r7, #4]
 80064d6:	4a14      	ldr	r2, [pc, #80]	; (8006528 <TIM_OC2_SetConfig+0xd0>)
 80064d8:	4293      	cmp	r3, r2
 80064da:	d113      	bne.n	8006504 <TIM_OC2_SetConfig+0xac>
 80064dc:	693b      	ldr	r3, [r7, #16]
 80064de:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80064e2:	613b      	str	r3, [r7, #16]
 80064e4:	693b      	ldr	r3, [r7, #16]
 80064e6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80064ea:	613b      	str	r3, [r7, #16]
 80064ec:	683b      	ldr	r3, [r7, #0]
 80064ee:	695b      	ldr	r3, [r3, #20]
 80064f0:	009b      	lsls	r3, r3, #2
 80064f2:	693a      	ldr	r2, [r7, #16]
 80064f4:	4313      	orrs	r3, r2
 80064f6:	613b      	str	r3, [r7, #16]
 80064f8:	683b      	ldr	r3, [r7, #0]
 80064fa:	699b      	ldr	r3, [r3, #24]
 80064fc:	009b      	lsls	r3, r3, #2
 80064fe:	693a      	ldr	r2, [r7, #16]
 8006500:	4313      	orrs	r3, r2
 8006502:	613b      	str	r3, [r7, #16]
 8006504:	687b      	ldr	r3, [r7, #4]
 8006506:	693a      	ldr	r2, [r7, #16]
 8006508:	605a      	str	r2, [r3, #4]
 800650a:	687b      	ldr	r3, [r7, #4]
 800650c:	68fa      	ldr	r2, [r7, #12]
 800650e:	619a      	str	r2, [r3, #24]
 8006510:	683b      	ldr	r3, [r7, #0]
 8006512:	685a      	ldr	r2, [r3, #4]
 8006514:	687b      	ldr	r3, [r7, #4]
 8006516:	639a      	str	r2, [r3, #56]	; 0x38
 8006518:	687b      	ldr	r3, [r7, #4]
 800651a:	697a      	ldr	r2, [r7, #20]
 800651c:	621a      	str	r2, [r3, #32]
 800651e:	bf00      	nop
 8006520:	371c      	adds	r7, #28
 8006522:	46bd      	mov	sp, r7
 8006524:	bc80      	pop	{r7}
 8006526:	4770      	bx	lr
 8006528:	40012c00 	.word	0x40012c00

0800652c <TIM_OC3_SetConfig>:
 800652c:	b480      	push	{r7}
 800652e:	b087      	sub	sp, #28
 8006530:	af00      	add	r7, sp, #0
 8006532:	6078      	str	r0, [r7, #4]
 8006534:	6039      	str	r1, [r7, #0]
 8006536:	687b      	ldr	r3, [r7, #4]
 8006538:	6a1b      	ldr	r3, [r3, #32]
 800653a:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800653e:	687b      	ldr	r3, [r7, #4]
 8006540:	621a      	str	r2, [r3, #32]
 8006542:	687b      	ldr	r3, [r7, #4]
 8006544:	6a1b      	ldr	r3, [r3, #32]
 8006546:	617b      	str	r3, [r7, #20]
 8006548:	687b      	ldr	r3, [r7, #4]
 800654a:	685b      	ldr	r3, [r3, #4]
 800654c:	613b      	str	r3, [r7, #16]
 800654e:	687b      	ldr	r3, [r7, #4]
 8006550:	69db      	ldr	r3, [r3, #28]
 8006552:	60fb      	str	r3, [r7, #12]
 8006554:	68fb      	ldr	r3, [r7, #12]
 8006556:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800655a:	60fb      	str	r3, [r7, #12]
 800655c:	68fb      	ldr	r3, [r7, #12]
 800655e:	f023 0303 	bic.w	r3, r3, #3
 8006562:	60fb      	str	r3, [r7, #12]
 8006564:	683b      	ldr	r3, [r7, #0]
 8006566:	681b      	ldr	r3, [r3, #0]
 8006568:	68fa      	ldr	r2, [r7, #12]
 800656a:	4313      	orrs	r3, r2
 800656c:	60fb      	str	r3, [r7, #12]
 800656e:	697b      	ldr	r3, [r7, #20]
 8006570:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006574:	617b      	str	r3, [r7, #20]
 8006576:	683b      	ldr	r3, [r7, #0]
 8006578:	689b      	ldr	r3, [r3, #8]
 800657a:	021b      	lsls	r3, r3, #8
 800657c:	697a      	ldr	r2, [r7, #20]
 800657e:	4313      	orrs	r3, r2
 8006580:	617b      	str	r3, [r7, #20]
 8006582:	687b      	ldr	r3, [r7, #4]
 8006584:	4a1d      	ldr	r2, [pc, #116]	; (80065fc <TIM_OC3_SetConfig+0xd0>)
 8006586:	4293      	cmp	r3, r2
 8006588:	d10d      	bne.n	80065a6 <TIM_OC3_SetConfig+0x7a>
 800658a:	697b      	ldr	r3, [r7, #20]
 800658c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006590:	617b      	str	r3, [r7, #20]
 8006592:	683b      	ldr	r3, [r7, #0]
 8006594:	68db      	ldr	r3, [r3, #12]
 8006596:	021b      	lsls	r3, r3, #8
 8006598:	697a      	ldr	r2, [r7, #20]
 800659a:	4313      	orrs	r3, r2
 800659c:	617b      	str	r3, [r7, #20]
 800659e:	697b      	ldr	r3, [r7, #20]
 80065a0:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80065a4:	617b      	str	r3, [r7, #20]
 80065a6:	687b      	ldr	r3, [r7, #4]
 80065a8:	4a14      	ldr	r2, [pc, #80]	; (80065fc <TIM_OC3_SetConfig+0xd0>)
 80065aa:	4293      	cmp	r3, r2
 80065ac:	d113      	bne.n	80065d6 <TIM_OC3_SetConfig+0xaa>
 80065ae:	693b      	ldr	r3, [r7, #16]
 80065b0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80065b4:	613b      	str	r3, [r7, #16]
 80065b6:	693b      	ldr	r3, [r7, #16]
 80065b8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80065bc:	613b      	str	r3, [r7, #16]
 80065be:	683b      	ldr	r3, [r7, #0]
 80065c0:	695b      	ldr	r3, [r3, #20]
 80065c2:	011b      	lsls	r3, r3, #4
 80065c4:	693a      	ldr	r2, [r7, #16]
 80065c6:	4313      	orrs	r3, r2
 80065c8:	613b      	str	r3, [r7, #16]
 80065ca:	683b      	ldr	r3, [r7, #0]
 80065cc:	699b      	ldr	r3, [r3, #24]
 80065ce:	011b      	lsls	r3, r3, #4
 80065d0:	693a      	ldr	r2, [r7, #16]
 80065d2:	4313      	orrs	r3, r2
 80065d4:	613b      	str	r3, [r7, #16]
 80065d6:	687b      	ldr	r3, [r7, #4]
 80065d8:	693a      	ldr	r2, [r7, #16]
 80065da:	605a      	str	r2, [r3, #4]
 80065dc:	687b      	ldr	r3, [r7, #4]
 80065de:	68fa      	ldr	r2, [r7, #12]
 80065e0:	61da      	str	r2, [r3, #28]
 80065e2:	683b      	ldr	r3, [r7, #0]
 80065e4:	685a      	ldr	r2, [r3, #4]
 80065e6:	687b      	ldr	r3, [r7, #4]
 80065e8:	63da      	str	r2, [r3, #60]	; 0x3c
 80065ea:	687b      	ldr	r3, [r7, #4]
 80065ec:	697a      	ldr	r2, [r7, #20]
 80065ee:	621a      	str	r2, [r3, #32]
 80065f0:	bf00      	nop
 80065f2:	371c      	adds	r7, #28
 80065f4:	46bd      	mov	sp, r7
 80065f6:	bc80      	pop	{r7}
 80065f8:	4770      	bx	lr
 80065fa:	bf00      	nop
 80065fc:	40012c00 	.word	0x40012c00

08006600 <TIM_OC4_SetConfig>:
 8006600:	b480      	push	{r7}
 8006602:	b087      	sub	sp, #28
 8006604:	af00      	add	r7, sp, #0
 8006606:	6078      	str	r0, [r7, #4]
 8006608:	6039      	str	r1, [r7, #0]
 800660a:	687b      	ldr	r3, [r7, #4]
 800660c:	6a1b      	ldr	r3, [r3, #32]
 800660e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8006612:	687b      	ldr	r3, [r7, #4]
 8006614:	621a      	str	r2, [r3, #32]
 8006616:	687b      	ldr	r3, [r7, #4]
 8006618:	6a1b      	ldr	r3, [r3, #32]
 800661a:	613b      	str	r3, [r7, #16]
 800661c:	687b      	ldr	r3, [r7, #4]
 800661e:	685b      	ldr	r3, [r3, #4]
 8006620:	617b      	str	r3, [r7, #20]
 8006622:	687b      	ldr	r3, [r7, #4]
 8006624:	69db      	ldr	r3, [r3, #28]
 8006626:	60fb      	str	r3, [r7, #12]
 8006628:	68fb      	ldr	r3, [r7, #12]
 800662a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800662e:	60fb      	str	r3, [r7, #12]
 8006630:	68fb      	ldr	r3, [r7, #12]
 8006632:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006636:	60fb      	str	r3, [r7, #12]
 8006638:	683b      	ldr	r3, [r7, #0]
 800663a:	681b      	ldr	r3, [r3, #0]
 800663c:	021b      	lsls	r3, r3, #8
 800663e:	68fa      	ldr	r2, [r7, #12]
 8006640:	4313      	orrs	r3, r2
 8006642:	60fb      	str	r3, [r7, #12]
 8006644:	693b      	ldr	r3, [r7, #16]
 8006646:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800664a:	613b      	str	r3, [r7, #16]
 800664c:	683b      	ldr	r3, [r7, #0]
 800664e:	689b      	ldr	r3, [r3, #8]
 8006650:	031b      	lsls	r3, r3, #12
 8006652:	693a      	ldr	r2, [r7, #16]
 8006654:	4313      	orrs	r3, r2
 8006656:	613b      	str	r3, [r7, #16]
 8006658:	687b      	ldr	r3, [r7, #4]
 800665a:	4a0f      	ldr	r2, [pc, #60]	; (8006698 <TIM_OC4_SetConfig+0x98>)
 800665c:	4293      	cmp	r3, r2
 800665e:	d109      	bne.n	8006674 <TIM_OC4_SetConfig+0x74>
 8006660:	697b      	ldr	r3, [r7, #20]
 8006662:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8006666:	617b      	str	r3, [r7, #20]
 8006668:	683b      	ldr	r3, [r7, #0]
 800666a:	695b      	ldr	r3, [r3, #20]
 800666c:	019b      	lsls	r3, r3, #6
 800666e:	697a      	ldr	r2, [r7, #20]
 8006670:	4313      	orrs	r3, r2
 8006672:	617b      	str	r3, [r7, #20]
 8006674:	687b      	ldr	r3, [r7, #4]
 8006676:	697a      	ldr	r2, [r7, #20]
 8006678:	605a      	str	r2, [r3, #4]
 800667a:	687b      	ldr	r3, [r7, #4]
 800667c:	68fa      	ldr	r2, [r7, #12]
 800667e:	61da      	str	r2, [r3, #28]
 8006680:	683b      	ldr	r3, [r7, #0]
 8006682:	685a      	ldr	r2, [r3, #4]
 8006684:	687b      	ldr	r3, [r7, #4]
 8006686:	641a      	str	r2, [r3, #64]	; 0x40
 8006688:	687b      	ldr	r3, [r7, #4]
 800668a:	693a      	ldr	r2, [r7, #16]
 800668c:	621a      	str	r2, [r3, #32]
 800668e:	bf00      	nop
 8006690:	371c      	adds	r7, #28
 8006692:	46bd      	mov	sp, r7
 8006694:	bc80      	pop	{r7}
 8006696:	4770      	bx	lr
 8006698:	40012c00 	.word	0x40012c00

0800669c <TIM_CCxChannelCmd>:
 800669c:	b480      	push	{r7}
 800669e:	b087      	sub	sp, #28
 80066a0:	af00      	add	r7, sp, #0
 80066a2:	60f8      	str	r0, [r7, #12]
 80066a4:	60b9      	str	r1, [r7, #8]
 80066a6:	607a      	str	r2, [r7, #4]
 80066a8:	68bb      	ldr	r3, [r7, #8]
 80066aa:	f003 031f 	and.w	r3, r3, #31
 80066ae:	2201      	movs	r2, #1
 80066b0:	fa02 f303 	lsl.w	r3, r2, r3
 80066b4:	617b      	str	r3, [r7, #20]
 80066b6:	68fb      	ldr	r3, [r7, #12]
 80066b8:	6a1a      	ldr	r2, [r3, #32]
 80066ba:	697b      	ldr	r3, [r7, #20]
 80066bc:	43db      	mvns	r3, r3
 80066be:	401a      	ands	r2, r3
 80066c0:	68fb      	ldr	r3, [r7, #12]
 80066c2:	621a      	str	r2, [r3, #32]
 80066c4:	68fb      	ldr	r3, [r7, #12]
 80066c6:	6a1a      	ldr	r2, [r3, #32]
 80066c8:	68bb      	ldr	r3, [r7, #8]
 80066ca:	f003 031f 	and.w	r3, r3, #31
 80066ce:	6879      	ldr	r1, [r7, #4]
 80066d0:	fa01 f303 	lsl.w	r3, r1, r3
 80066d4:	431a      	orrs	r2, r3
 80066d6:	68fb      	ldr	r3, [r7, #12]
 80066d8:	621a      	str	r2, [r3, #32]
 80066da:	bf00      	nop
 80066dc:	371c      	adds	r7, #28
 80066de:	46bd      	mov	sp, r7
 80066e0:	bc80      	pop	{r7}
 80066e2:	4770      	bx	lr

080066e4 <HAL_TIMEx_MasterConfigSynchronization>:
 80066e4:	b480      	push	{r7}
 80066e6:	b085      	sub	sp, #20
 80066e8:	af00      	add	r7, sp, #0
 80066ea:	6078      	str	r0, [r7, #4]
 80066ec:	6039      	str	r1, [r7, #0]
 80066ee:	687b      	ldr	r3, [r7, #4]
 80066f0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80066f4:	2b01      	cmp	r3, #1
 80066f6:	d101      	bne.n	80066fc <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80066f8:	2302      	movs	r3, #2
 80066fa:	e046      	b.n	800678a <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 80066fc:	687b      	ldr	r3, [r7, #4]
 80066fe:	2201      	movs	r2, #1
 8006700:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006704:	687b      	ldr	r3, [r7, #4]
 8006706:	2202      	movs	r2, #2
 8006708:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800670c:	687b      	ldr	r3, [r7, #4]
 800670e:	681b      	ldr	r3, [r3, #0]
 8006710:	685b      	ldr	r3, [r3, #4]
 8006712:	60fb      	str	r3, [r7, #12]
 8006714:	687b      	ldr	r3, [r7, #4]
 8006716:	681b      	ldr	r3, [r3, #0]
 8006718:	689b      	ldr	r3, [r3, #8]
 800671a:	60bb      	str	r3, [r7, #8]
 800671c:	68fb      	ldr	r3, [r7, #12]
 800671e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006722:	60fb      	str	r3, [r7, #12]
 8006724:	683b      	ldr	r3, [r7, #0]
 8006726:	681b      	ldr	r3, [r3, #0]
 8006728:	68fa      	ldr	r2, [r7, #12]
 800672a:	4313      	orrs	r3, r2
 800672c:	60fb      	str	r3, [r7, #12]
 800672e:	687b      	ldr	r3, [r7, #4]
 8006730:	681b      	ldr	r3, [r3, #0]
 8006732:	68fa      	ldr	r2, [r7, #12]
 8006734:	605a      	str	r2, [r3, #4]
 8006736:	687b      	ldr	r3, [r7, #4]
 8006738:	681b      	ldr	r3, [r3, #0]
 800673a:	4a16      	ldr	r2, [pc, #88]	; (8006794 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 800673c:	4293      	cmp	r3, r2
 800673e:	d00e      	beq.n	800675e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8006740:	687b      	ldr	r3, [r7, #4]
 8006742:	681b      	ldr	r3, [r3, #0]
 8006744:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006748:	d009      	beq.n	800675e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800674a:	687b      	ldr	r3, [r7, #4]
 800674c:	681b      	ldr	r3, [r3, #0]
 800674e:	4a12      	ldr	r2, [pc, #72]	; (8006798 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8006750:	4293      	cmp	r3, r2
 8006752:	d004      	beq.n	800675e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8006754:	687b      	ldr	r3, [r7, #4]
 8006756:	681b      	ldr	r3, [r3, #0]
 8006758:	4a10      	ldr	r2, [pc, #64]	; (800679c <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 800675a:	4293      	cmp	r3, r2
 800675c:	d10c      	bne.n	8006778 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 800675e:	68bb      	ldr	r3, [r7, #8]
 8006760:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006764:	60bb      	str	r3, [r7, #8]
 8006766:	683b      	ldr	r3, [r7, #0]
 8006768:	685b      	ldr	r3, [r3, #4]
 800676a:	68ba      	ldr	r2, [r7, #8]
 800676c:	4313      	orrs	r3, r2
 800676e:	60bb      	str	r3, [r7, #8]
 8006770:	687b      	ldr	r3, [r7, #4]
 8006772:	681b      	ldr	r3, [r3, #0]
 8006774:	68ba      	ldr	r2, [r7, #8]
 8006776:	609a      	str	r2, [r3, #8]
 8006778:	687b      	ldr	r3, [r7, #4]
 800677a:	2201      	movs	r2, #1
 800677c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006780:	687b      	ldr	r3, [r7, #4]
 8006782:	2200      	movs	r2, #0
 8006784:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006788:	2300      	movs	r3, #0
 800678a:	4618      	mov	r0, r3
 800678c:	3714      	adds	r7, #20
 800678e:	46bd      	mov	sp, r7
 8006790:	bc80      	pop	{r7}
 8006792:	4770      	bx	lr
 8006794:	40012c00 	.word	0x40012c00
 8006798:	40000400 	.word	0x40000400
 800679c:	40000800 	.word	0x40000800

080067a0 <HAL_UART_Init>:
 80067a0:	b580      	push	{r7, lr}
 80067a2:	b082      	sub	sp, #8
 80067a4:	af00      	add	r7, sp, #0
 80067a6:	6078      	str	r0, [r7, #4]
 80067a8:	687b      	ldr	r3, [r7, #4]
 80067aa:	2b00      	cmp	r3, #0
 80067ac:	d101      	bne.n	80067b2 <HAL_UART_Init+0x12>
 80067ae:	2301      	movs	r3, #1
 80067b0:	e03f      	b.n	8006832 <HAL_UART_Init+0x92>
 80067b2:	687b      	ldr	r3, [r7, #4]
 80067b4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80067b8:	b2db      	uxtb	r3, r3
 80067ba:	2b00      	cmp	r3, #0
 80067bc:	d106      	bne.n	80067cc <HAL_UART_Init+0x2c>
 80067be:	687b      	ldr	r3, [r7, #4]
 80067c0:	2200      	movs	r2, #0
 80067c2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80067c6:	6878      	ldr	r0, [r7, #4]
 80067c8:	f7fd fbd0 	bl	8003f6c <HAL_UART_MspInit>
 80067cc:	687b      	ldr	r3, [r7, #4]
 80067ce:	2224      	movs	r2, #36	; 0x24
 80067d0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80067d4:	687b      	ldr	r3, [r7, #4]
 80067d6:	681b      	ldr	r3, [r3, #0]
 80067d8:	68da      	ldr	r2, [r3, #12]
 80067da:	687b      	ldr	r3, [r7, #4]
 80067dc:	681b      	ldr	r3, [r3, #0]
 80067de:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80067e2:	60da      	str	r2, [r3, #12]
 80067e4:	6878      	ldr	r0, [r7, #4]
 80067e6:	f000 fc25 	bl	8007034 <UART_SetConfig>
 80067ea:	687b      	ldr	r3, [r7, #4]
 80067ec:	681b      	ldr	r3, [r3, #0]
 80067ee:	691a      	ldr	r2, [r3, #16]
 80067f0:	687b      	ldr	r3, [r7, #4]
 80067f2:	681b      	ldr	r3, [r3, #0]
 80067f4:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80067f8:	611a      	str	r2, [r3, #16]
 80067fa:	687b      	ldr	r3, [r7, #4]
 80067fc:	681b      	ldr	r3, [r3, #0]
 80067fe:	695a      	ldr	r2, [r3, #20]
 8006800:	687b      	ldr	r3, [r7, #4]
 8006802:	681b      	ldr	r3, [r3, #0]
 8006804:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8006808:	615a      	str	r2, [r3, #20]
 800680a:	687b      	ldr	r3, [r7, #4]
 800680c:	681b      	ldr	r3, [r3, #0]
 800680e:	68da      	ldr	r2, [r3, #12]
 8006810:	687b      	ldr	r3, [r7, #4]
 8006812:	681b      	ldr	r3, [r3, #0]
 8006814:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006818:	60da      	str	r2, [r3, #12]
 800681a:	687b      	ldr	r3, [r7, #4]
 800681c:	2200      	movs	r2, #0
 800681e:	641a      	str	r2, [r3, #64]	; 0x40
 8006820:	687b      	ldr	r3, [r7, #4]
 8006822:	2220      	movs	r2, #32
 8006824:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006828:	687b      	ldr	r3, [r7, #4]
 800682a:	2220      	movs	r2, #32
 800682c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006830:	2300      	movs	r3, #0
 8006832:	4618      	mov	r0, r3
 8006834:	3708      	adds	r7, #8
 8006836:	46bd      	mov	sp, r7
 8006838:	bd80      	pop	{r7, pc}

0800683a <HAL_UART_Transmit>:
 800683a:	b580      	push	{r7, lr}
 800683c:	b08a      	sub	sp, #40	; 0x28
 800683e:	af02      	add	r7, sp, #8
 8006840:	60f8      	str	r0, [r7, #12]
 8006842:	60b9      	str	r1, [r7, #8]
 8006844:	603b      	str	r3, [r7, #0]
 8006846:	4613      	mov	r3, r2
 8006848:	80fb      	strh	r3, [r7, #6]
 800684a:	2300      	movs	r3, #0
 800684c:	617b      	str	r3, [r7, #20]
 800684e:	68fb      	ldr	r3, [r7, #12]
 8006850:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006854:	b2db      	uxtb	r3, r3
 8006856:	2b20      	cmp	r3, #32
 8006858:	d17c      	bne.n	8006954 <HAL_UART_Transmit+0x11a>
 800685a:	68bb      	ldr	r3, [r7, #8]
 800685c:	2b00      	cmp	r3, #0
 800685e:	d002      	beq.n	8006866 <HAL_UART_Transmit+0x2c>
 8006860:	88fb      	ldrh	r3, [r7, #6]
 8006862:	2b00      	cmp	r3, #0
 8006864:	d101      	bne.n	800686a <HAL_UART_Transmit+0x30>
 8006866:	2301      	movs	r3, #1
 8006868:	e075      	b.n	8006956 <HAL_UART_Transmit+0x11c>
 800686a:	68fb      	ldr	r3, [r7, #12]
 800686c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006870:	2b01      	cmp	r3, #1
 8006872:	d101      	bne.n	8006878 <HAL_UART_Transmit+0x3e>
 8006874:	2302      	movs	r3, #2
 8006876:	e06e      	b.n	8006956 <HAL_UART_Transmit+0x11c>
 8006878:	68fb      	ldr	r3, [r7, #12]
 800687a:	2201      	movs	r2, #1
 800687c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006880:	68fb      	ldr	r3, [r7, #12]
 8006882:	2200      	movs	r2, #0
 8006884:	641a      	str	r2, [r3, #64]	; 0x40
 8006886:	68fb      	ldr	r3, [r7, #12]
 8006888:	2221      	movs	r2, #33	; 0x21
 800688a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800688e:	f7fd fc3f 	bl	8004110 <HAL_GetTick>
 8006892:	6178      	str	r0, [r7, #20]
 8006894:	68fb      	ldr	r3, [r7, #12]
 8006896:	88fa      	ldrh	r2, [r7, #6]
 8006898:	849a      	strh	r2, [r3, #36]	; 0x24
 800689a:	68fb      	ldr	r3, [r7, #12]
 800689c:	88fa      	ldrh	r2, [r7, #6]
 800689e:	84da      	strh	r2, [r3, #38]	; 0x26
 80068a0:	68fb      	ldr	r3, [r7, #12]
 80068a2:	689b      	ldr	r3, [r3, #8]
 80068a4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80068a8:	d108      	bne.n	80068bc <HAL_UART_Transmit+0x82>
 80068aa:	68fb      	ldr	r3, [r7, #12]
 80068ac:	691b      	ldr	r3, [r3, #16]
 80068ae:	2b00      	cmp	r3, #0
 80068b0:	d104      	bne.n	80068bc <HAL_UART_Transmit+0x82>
 80068b2:	2300      	movs	r3, #0
 80068b4:	61fb      	str	r3, [r7, #28]
 80068b6:	68bb      	ldr	r3, [r7, #8]
 80068b8:	61bb      	str	r3, [r7, #24]
 80068ba:	e003      	b.n	80068c4 <HAL_UART_Transmit+0x8a>
 80068bc:	68bb      	ldr	r3, [r7, #8]
 80068be:	61fb      	str	r3, [r7, #28]
 80068c0:	2300      	movs	r3, #0
 80068c2:	61bb      	str	r3, [r7, #24]
 80068c4:	68fb      	ldr	r3, [r7, #12]
 80068c6:	2200      	movs	r2, #0
 80068c8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80068cc:	e02a      	b.n	8006924 <HAL_UART_Transmit+0xea>
 80068ce:	683b      	ldr	r3, [r7, #0]
 80068d0:	9300      	str	r3, [sp, #0]
 80068d2:	697b      	ldr	r3, [r7, #20]
 80068d4:	2200      	movs	r2, #0
 80068d6:	2180      	movs	r1, #128	; 0x80
 80068d8:	68f8      	ldr	r0, [r7, #12]
 80068da:	f000 fa11 	bl	8006d00 <UART_WaitOnFlagUntilTimeout>
 80068de:	4603      	mov	r3, r0
 80068e0:	2b00      	cmp	r3, #0
 80068e2:	d001      	beq.n	80068e8 <HAL_UART_Transmit+0xae>
 80068e4:	2303      	movs	r3, #3
 80068e6:	e036      	b.n	8006956 <HAL_UART_Transmit+0x11c>
 80068e8:	69fb      	ldr	r3, [r7, #28]
 80068ea:	2b00      	cmp	r3, #0
 80068ec:	d10b      	bne.n	8006906 <HAL_UART_Transmit+0xcc>
 80068ee:	69bb      	ldr	r3, [r7, #24]
 80068f0:	881b      	ldrh	r3, [r3, #0]
 80068f2:	461a      	mov	r2, r3
 80068f4:	68fb      	ldr	r3, [r7, #12]
 80068f6:	681b      	ldr	r3, [r3, #0]
 80068f8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80068fc:	605a      	str	r2, [r3, #4]
 80068fe:	69bb      	ldr	r3, [r7, #24]
 8006900:	3302      	adds	r3, #2
 8006902:	61bb      	str	r3, [r7, #24]
 8006904:	e007      	b.n	8006916 <HAL_UART_Transmit+0xdc>
 8006906:	69fb      	ldr	r3, [r7, #28]
 8006908:	781a      	ldrb	r2, [r3, #0]
 800690a:	68fb      	ldr	r3, [r7, #12]
 800690c:	681b      	ldr	r3, [r3, #0]
 800690e:	605a      	str	r2, [r3, #4]
 8006910:	69fb      	ldr	r3, [r7, #28]
 8006912:	3301      	adds	r3, #1
 8006914:	61fb      	str	r3, [r7, #28]
 8006916:	68fb      	ldr	r3, [r7, #12]
 8006918:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800691a:	b29b      	uxth	r3, r3
 800691c:	3b01      	subs	r3, #1
 800691e:	b29a      	uxth	r2, r3
 8006920:	68fb      	ldr	r3, [r7, #12]
 8006922:	84da      	strh	r2, [r3, #38]	; 0x26
 8006924:	68fb      	ldr	r3, [r7, #12]
 8006926:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8006928:	b29b      	uxth	r3, r3
 800692a:	2b00      	cmp	r3, #0
 800692c:	d1cf      	bne.n	80068ce <HAL_UART_Transmit+0x94>
 800692e:	683b      	ldr	r3, [r7, #0]
 8006930:	9300      	str	r3, [sp, #0]
 8006932:	697b      	ldr	r3, [r7, #20]
 8006934:	2200      	movs	r2, #0
 8006936:	2140      	movs	r1, #64	; 0x40
 8006938:	68f8      	ldr	r0, [r7, #12]
 800693a:	f000 f9e1 	bl	8006d00 <UART_WaitOnFlagUntilTimeout>
 800693e:	4603      	mov	r3, r0
 8006940:	2b00      	cmp	r3, #0
 8006942:	d001      	beq.n	8006948 <HAL_UART_Transmit+0x10e>
 8006944:	2303      	movs	r3, #3
 8006946:	e006      	b.n	8006956 <HAL_UART_Transmit+0x11c>
 8006948:	68fb      	ldr	r3, [r7, #12]
 800694a:	2220      	movs	r2, #32
 800694c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006950:	2300      	movs	r3, #0
 8006952:	e000      	b.n	8006956 <HAL_UART_Transmit+0x11c>
 8006954:	2302      	movs	r3, #2
 8006956:	4618      	mov	r0, r3
 8006958:	3720      	adds	r7, #32
 800695a:	46bd      	mov	sp, r7
 800695c:	bd80      	pop	{r7, pc}
	...

08006960 <HAL_UART_IRQHandler>:
 8006960:	b580      	push	{r7, lr}
 8006962:	b08a      	sub	sp, #40	; 0x28
 8006964:	af00      	add	r7, sp, #0
 8006966:	6078      	str	r0, [r7, #4]
 8006968:	687b      	ldr	r3, [r7, #4]
 800696a:	681b      	ldr	r3, [r3, #0]
 800696c:	681b      	ldr	r3, [r3, #0]
 800696e:	627b      	str	r3, [r7, #36]	; 0x24
 8006970:	687b      	ldr	r3, [r7, #4]
 8006972:	681b      	ldr	r3, [r3, #0]
 8006974:	68db      	ldr	r3, [r3, #12]
 8006976:	623b      	str	r3, [r7, #32]
 8006978:	687b      	ldr	r3, [r7, #4]
 800697a:	681b      	ldr	r3, [r3, #0]
 800697c:	695b      	ldr	r3, [r3, #20]
 800697e:	61fb      	str	r3, [r7, #28]
 8006980:	2300      	movs	r3, #0
 8006982:	61bb      	str	r3, [r7, #24]
 8006984:	2300      	movs	r3, #0
 8006986:	617b      	str	r3, [r7, #20]
 8006988:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800698a:	f003 030f 	and.w	r3, r3, #15
 800698e:	61bb      	str	r3, [r7, #24]
 8006990:	69bb      	ldr	r3, [r7, #24]
 8006992:	2b00      	cmp	r3, #0
 8006994:	d10d      	bne.n	80069b2 <HAL_UART_IRQHandler+0x52>
 8006996:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006998:	f003 0320 	and.w	r3, r3, #32
 800699c:	2b00      	cmp	r3, #0
 800699e:	d008      	beq.n	80069b2 <HAL_UART_IRQHandler+0x52>
 80069a0:	6a3b      	ldr	r3, [r7, #32]
 80069a2:	f003 0320 	and.w	r3, r3, #32
 80069a6:	2b00      	cmp	r3, #0
 80069a8:	d003      	beq.n	80069b2 <HAL_UART_IRQHandler+0x52>
 80069aa:	6878      	ldr	r0, [r7, #4]
 80069ac:	f000 fa99 	bl	8006ee2 <UART_Receive_IT>
 80069b0:	e17b      	b.n	8006caa <HAL_UART_IRQHandler+0x34a>
 80069b2:	69bb      	ldr	r3, [r7, #24]
 80069b4:	2b00      	cmp	r3, #0
 80069b6:	f000 80b1 	beq.w	8006b1c <HAL_UART_IRQHandler+0x1bc>
 80069ba:	69fb      	ldr	r3, [r7, #28]
 80069bc:	f003 0301 	and.w	r3, r3, #1
 80069c0:	2b00      	cmp	r3, #0
 80069c2:	d105      	bne.n	80069d0 <HAL_UART_IRQHandler+0x70>
 80069c4:	6a3b      	ldr	r3, [r7, #32]
 80069c6:	f403 7390 	and.w	r3, r3, #288	; 0x120
 80069ca:	2b00      	cmp	r3, #0
 80069cc:	f000 80a6 	beq.w	8006b1c <HAL_UART_IRQHandler+0x1bc>
 80069d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80069d2:	f003 0301 	and.w	r3, r3, #1
 80069d6:	2b00      	cmp	r3, #0
 80069d8:	d00a      	beq.n	80069f0 <HAL_UART_IRQHandler+0x90>
 80069da:	6a3b      	ldr	r3, [r7, #32]
 80069dc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80069e0:	2b00      	cmp	r3, #0
 80069e2:	d005      	beq.n	80069f0 <HAL_UART_IRQHandler+0x90>
 80069e4:	687b      	ldr	r3, [r7, #4]
 80069e6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80069e8:	f043 0201 	orr.w	r2, r3, #1
 80069ec:	687b      	ldr	r3, [r7, #4]
 80069ee:	641a      	str	r2, [r3, #64]	; 0x40
 80069f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80069f2:	f003 0304 	and.w	r3, r3, #4
 80069f6:	2b00      	cmp	r3, #0
 80069f8:	d00a      	beq.n	8006a10 <HAL_UART_IRQHandler+0xb0>
 80069fa:	69fb      	ldr	r3, [r7, #28]
 80069fc:	f003 0301 	and.w	r3, r3, #1
 8006a00:	2b00      	cmp	r3, #0
 8006a02:	d005      	beq.n	8006a10 <HAL_UART_IRQHandler+0xb0>
 8006a04:	687b      	ldr	r3, [r7, #4]
 8006a06:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a08:	f043 0202 	orr.w	r2, r3, #2
 8006a0c:	687b      	ldr	r3, [r7, #4]
 8006a0e:	641a      	str	r2, [r3, #64]	; 0x40
 8006a10:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006a12:	f003 0302 	and.w	r3, r3, #2
 8006a16:	2b00      	cmp	r3, #0
 8006a18:	d00a      	beq.n	8006a30 <HAL_UART_IRQHandler+0xd0>
 8006a1a:	69fb      	ldr	r3, [r7, #28]
 8006a1c:	f003 0301 	and.w	r3, r3, #1
 8006a20:	2b00      	cmp	r3, #0
 8006a22:	d005      	beq.n	8006a30 <HAL_UART_IRQHandler+0xd0>
 8006a24:	687b      	ldr	r3, [r7, #4]
 8006a26:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a28:	f043 0204 	orr.w	r2, r3, #4
 8006a2c:	687b      	ldr	r3, [r7, #4]
 8006a2e:	641a      	str	r2, [r3, #64]	; 0x40
 8006a30:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006a32:	f003 0308 	and.w	r3, r3, #8
 8006a36:	2b00      	cmp	r3, #0
 8006a38:	d00f      	beq.n	8006a5a <HAL_UART_IRQHandler+0xfa>
 8006a3a:	6a3b      	ldr	r3, [r7, #32]
 8006a3c:	f003 0320 	and.w	r3, r3, #32
 8006a40:	2b00      	cmp	r3, #0
 8006a42:	d104      	bne.n	8006a4e <HAL_UART_IRQHandler+0xee>
 8006a44:	69fb      	ldr	r3, [r7, #28]
 8006a46:	f003 0301 	and.w	r3, r3, #1
 8006a4a:	2b00      	cmp	r3, #0
 8006a4c:	d005      	beq.n	8006a5a <HAL_UART_IRQHandler+0xfa>
 8006a4e:	687b      	ldr	r3, [r7, #4]
 8006a50:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a52:	f043 0208 	orr.w	r2, r3, #8
 8006a56:	687b      	ldr	r3, [r7, #4]
 8006a58:	641a      	str	r2, [r3, #64]	; 0x40
 8006a5a:	687b      	ldr	r3, [r7, #4]
 8006a5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a5e:	2b00      	cmp	r3, #0
 8006a60:	f000 811e 	beq.w	8006ca0 <HAL_UART_IRQHandler+0x340>
 8006a64:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006a66:	f003 0320 	and.w	r3, r3, #32
 8006a6a:	2b00      	cmp	r3, #0
 8006a6c:	d007      	beq.n	8006a7e <HAL_UART_IRQHandler+0x11e>
 8006a6e:	6a3b      	ldr	r3, [r7, #32]
 8006a70:	f003 0320 	and.w	r3, r3, #32
 8006a74:	2b00      	cmp	r3, #0
 8006a76:	d002      	beq.n	8006a7e <HAL_UART_IRQHandler+0x11e>
 8006a78:	6878      	ldr	r0, [r7, #4]
 8006a7a:	f000 fa32 	bl	8006ee2 <UART_Receive_IT>
 8006a7e:	687b      	ldr	r3, [r7, #4]
 8006a80:	681b      	ldr	r3, [r3, #0]
 8006a82:	695b      	ldr	r3, [r3, #20]
 8006a84:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006a88:	2b00      	cmp	r3, #0
 8006a8a:	bf14      	ite	ne
 8006a8c:	2301      	movne	r3, #1
 8006a8e:	2300      	moveq	r3, #0
 8006a90:	b2db      	uxtb	r3, r3
 8006a92:	617b      	str	r3, [r7, #20]
 8006a94:	687b      	ldr	r3, [r7, #4]
 8006a96:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a98:	f003 0308 	and.w	r3, r3, #8
 8006a9c:	2b00      	cmp	r3, #0
 8006a9e:	d102      	bne.n	8006aa6 <HAL_UART_IRQHandler+0x146>
 8006aa0:	697b      	ldr	r3, [r7, #20]
 8006aa2:	2b00      	cmp	r3, #0
 8006aa4:	d031      	beq.n	8006b0a <HAL_UART_IRQHandler+0x1aa>
 8006aa6:	6878      	ldr	r0, [r7, #4]
 8006aa8:	f000 f974 	bl	8006d94 <UART_EndRxTransfer>
 8006aac:	687b      	ldr	r3, [r7, #4]
 8006aae:	681b      	ldr	r3, [r3, #0]
 8006ab0:	695b      	ldr	r3, [r3, #20]
 8006ab2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006ab6:	2b00      	cmp	r3, #0
 8006ab8:	d023      	beq.n	8006b02 <HAL_UART_IRQHandler+0x1a2>
 8006aba:	687b      	ldr	r3, [r7, #4]
 8006abc:	681b      	ldr	r3, [r3, #0]
 8006abe:	695a      	ldr	r2, [r3, #20]
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	681b      	ldr	r3, [r3, #0]
 8006ac4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006ac8:	615a      	str	r2, [r3, #20]
 8006aca:	687b      	ldr	r3, [r7, #4]
 8006acc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006ace:	2b00      	cmp	r3, #0
 8006ad0:	d013      	beq.n	8006afa <HAL_UART_IRQHandler+0x19a>
 8006ad2:	687b      	ldr	r3, [r7, #4]
 8006ad4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006ad6:	4a76      	ldr	r2, [pc, #472]	; (8006cb0 <HAL_UART_IRQHandler+0x350>)
 8006ad8:	635a      	str	r2, [r3, #52]	; 0x34
 8006ada:	687b      	ldr	r3, [r7, #4]
 8006adc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006ade:	4618      	mov	r0, r3
 8006ae0:	f7fe f8e4 	bl	8004cac <HAL_DMA_Abort_IT>
 8006ae4:	4603      	mov	r3, r0
 8006ae6:	2b00      	cmp	r3, #0
 8006ae8:	d016      	beq.n	8006b18 <HAL_UART_IRQHandler+0x1b8>
 8006aea:	687b      	ldr	r3, [r7, #4]
 8006aec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006aee:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006af0:	687a      	ldr	r2, [r7, #4]
 8006af2:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8006af4:	4610      	mov	r0, r2
 8006af6:	4798      	blx	r3
 8006af8:	e00e      	b.n	8006b18 <HAL_UART_IRQHandler+0x1b8>
 8006afa:	6878      	ldr	r0, [r7, #4]
 8006afc:	f000 f8ec 	bl	8006cd8 <HAL_UART_ErrorCallback>
 8006b00:	e00a      	b.n	8006b18 <HAL_UART_IRQHandler+0x1b8>
 8006b02:	6878      	ldr	r0, [r7, #4]
 8006b04:	f000 f8e8 	bl	8006cd8 <HAL_UART_ErrorCallback>
 8006b08:	e006      	b.n	8006b18 <HAL_UART_IRQHandler+0x1b8>
 8006b0a:	6878      	ldr	r0, [r7, #4]
 8006b0c:	f000 f8e4 	bl	8006cd8 <HAL_UART_ErrorCallback>
 8006b10:	687b      	ldr	r3, [r7, #4]
 8006b12:	2200      	movs	r2, #0
 8006b14:	641a      	str	r2, [r3, #64]	; 0x40
 8006b16:	e0c3      	b.n	8006ca0 <HAL_UART_IRQHandler+0x340>
 8006b18:	bf00      	nop
 8006b1a:	e0c1      	b.n	8006ca0 <HAL_UART_IRQHandler+0x340>
 8006b1c:	687b      	ldr	r3, [r7, #4]
 8006b1e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006b20:	2b01      	cmp	r3, #1
 8006b22:	f040 80a1 	bne.w	8006c68 <HAL_UART_IRQHandler+0x308>
 8006b26:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006b28:	f003 0310 	and.w	r3, r3, #16
 8006b2c:	2b00      	cmp	r3, #0
 8006b2e:	f000 809b 	beq.w	8006c68 <HAL_UART_IRQHandler+0x308>
 8006b32:	6a3b      	ldr	r3, [r7, #32]
 8006b34:	f003 0310 	and.w	r3, r3, #16
 8006b38:	2b00      	cmp	r3, #0
 8006b3a:	f000 8095 	beq.w	8006c68 <HAL_UART_IRQHandler+0x308>
 8006b3e:	2300      	movs	r3, #0
 8006b40:	60fb      	str	r3, [r7, #12]
 8006b42:	687b      	ldr	r3, [r7, #4]
 8006b44:	681b      	ldr	r3, [r3, #0]
 8006b46:	681b      	ldr	r3, [r3, #0]
 8006b48:	60fb      	str	r3, [r7, #12]
 8006b4a:	687b      	ldr	r3, [r7, #4]
 8006b4c:	681b      	ldr	r3, [r3, #0]
 8006b4e:	685b      	ldr	r3, [r3, #4]
 8006b50:	60fb      	str	r3, [r7, #12]
 8006b52:	68fb      	ldr	r3, [r7, #12]
 8006b54:	687b      	ldr	r3, [r7, #4]
 8006b56:	681b      	ldr	r3, [r3, #0]
 8006b58:	695b      	ldr	r3, [r3, #20]
 8006b5a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006b5e:	2b00      	cmp	r3, #0
 8006b60:	d04e      	beq.n	8006c00 <HAL_UART_IRQHandler+0x2a0>
 8006b62:	687b      	ldr	r3, [r7, #4]
 8006b64:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006b66:	681b      	ldr	r3, [r3, #0]
 8006b68:	685b      	ldr	r3, [r3, #4]
 8006b6a:	823b      	strh	r3, [r7, #16]
 8006b6c:	8a3b      	ldrh	r3, [r7, #16]
 8006b6e:	2b00      	cmp	r3, #0
 8006b70:	f000 8098 	beq.w	8006ca4 <HAL_UART_IRQHandler+0x344>
 8006b74:	687b      	ldr	r3, [r7, #4]
 8006b76:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8006b78:	8a3a      	ldrh	r2, [r7, #16]
 8006b7a:	429a      	cmp	r2, r3
 8006b7c:	f080 8092 	bcs.w	8006ca4 <HAL_UART_IRQHandler+0x344>
 8006b80:	687b      	ldr	r3, [r7, #4]
 8006b82:	8a3a      	ldrh	r2, [r7, #16]
 8006b84:	85da      	strh	r2, [r3, #46]	; 0x2e
 8006b86:	687b      	ldr	r3, [r7, #4]
 8006b88:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006b8a:	699b      	ldr	r3, [r3, #24]
 8006b8c:	2b20      	cmp	r3, #32
 8006b8e:	d02b      	beq.n	8006be8 <HAL_UART_IRQHandler+0x288>
 8006b90:	687b      	ldr	r3, [r7, #4]
 8006b92:	681b      	ldr	r3, [r3, #0]
 8006b94:	68da      	ldr	r2, [r3, #12]
 8006b96:	687b      	ldr	r3, [r7, #4]
 8006b98:	681b      	ldr	r3, [r3, #0]
 8006b9a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006b9e:	60da      	str	r2, [r3, #12]
 8006ba0:	687b      	ldr	r3, [r7, #4]
 8006ba2:	681b      	ldr	r3, [r3, #0]
 8006ba4:	695a      	ldr	r2, [r3, #20]
 8006ba6:	687b      	ldr	r3, [r7, #4]
 8006ba8:	681b      	ldr	r3, [r3, #0]
 8006baa:	f022 0201 	bic.w	r2, r2, #1
 8006bae:	615a      	str	r2, [r3, #20]
 8006bb0:	687b      	ldr	r3, [r7, #4]
 8006bb2:	681b      	ldr	r3, [r3, #0]
 8006bb4:	695a      	ldr	r2, [r3, #20]
 8006bb6:	687b      	ldr	r3, [r7, #4]
 8006bb8:	681b      	ldr	r3, [r3, #0]
 8006bba:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006bbe:	615a      	str	r2, [r3, #20]
 8006bc0:	687b      	ldr	r3, [r7, #4]
 8006bc2:	2220      	movs	r2, #32
 8006bc4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006bc8:	687b      	ldr	r3, [r7, #4]
 8006bca:	2200      	movs	r2, #0
 8006bcc:	631a      	str	r2, [r3, #48]	; 0x30
 8006bce:	687b      	ldr	r3, [r7, #4]
 8006bd0:	681b      	ldr	r3, [r3, #0]
 8006bd2:	68da      	ldr	r2, [r3, #12]
 8006bd4:	687b      	ldr	r3, [r7, #4]
 8006bd6:	681b      	ldr	r3, [r3, #0]
 8006bd8:	f022 0210 	bic.w	r2, r2, #16
 8006bdc:	60da      	str	r2, [r3, #12]
 8006bde:	687b      	ldr	r3, [r7, #4]
 8006be0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006be2:	4618      	mov	r0, r3
 8006be4:	f7fe f827 	bl	8004c36 <HAL_DMA_Abort>
 8006be8:	687b      	ldr	r3, [r7, #4]
 8006bea:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8006bec:	687b      	ldr	r3, [r7, #4]
 8006bee:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8006bf0:	b29b      	uxth	r3, r3
 8006bf2:	1ad3      	subs	r3, r2, r3
 8006bf4:	b29b      	uxth	r3, r3
 8006bf6:	4619      	mov	r1, r3
 8006bf8:	6878      	ldr	r0, [r7, #4]
 8006bfa:	f000 f876 	bl	8006cea <HAL_UARTEx_RxEventCallback>
 8006bfe:	e051      	b.n	8006ca4 <HAL_UART_IRQHandler+0x344>
 8006c00:	687b      	ldr	r3, [r7, #4]
 8006c02:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8006c04:	687b      	ldr	r3, [r7, #4]
 8006c06:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8006c08:	b29b      	uxth	r3, r3
 8006c0a:	1ad3      	subs	r3, r2, r3
 8006c0c:	827b      	strh	r3, [r7, #18]
 8006c0e:	687b      	ldr	r3, [r7, #4]
 8006c10:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8006c12:	b29b      	uxth	r3, r3
 8006c14:	2b00      	cmp	r3, #0
 8006c16:	d047      	beq.n	8006ca8 <HAL_UART_IRQHandler+0x348>
 8006c18:	8a7b      	ldrh	r3, [r7, #18]
 8006c1a:	2b00      	cmp	r3, #0
 8006c1c:	d044      	beq.n	8006ca8 <HAL_UART_IRQHandler+0x348>
 8006c1e:	687b      	ldr	r3, [r7, #4]
 8006c20:	681b      	ldr	r3, [r3, #0]
 8006c22:	68da      	ldr	r2, [r3, #12]
 8006c24:	687b      	ldr	r3, [r7, #4]
 8006c26:	681b      	ldr	r3, [r3, #0]
 8006c28:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8006c2c:	60da      	str	r2, [r3, #12]
 8006c2e:	687b      	ldr	r3, [r7, #4]
 8006c30:	681b      	ldr	r3, [r3, #0]
 8006c32:	695a      	ldr	r2, [r3, #20]
 8006c34:	687b      	ldr	r3, [r7, #4]
 8006c36:	681b      	ldr	r3, [r3, #0]
 8006c38:	f022 0201 	bic.w	r2, r2, #1
 8006c3c:	615a      	str	r2, [r3, #20]
 8006c3e:	687b      	ldr	r3, [r7, #4]
 8006c40:	2220      	movs	r2, #32
 8006c42:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006c46:	687b      	ldr	r3, [r7, #4]
 8006c48:	2200      	movs	r2, #0
 8006c4a:	631a      	str	r2, [r3, #48]	; 0x30
 8006c4c:	687b      	ldr	r3, [r7, #4]
 8006c4e:	681b      	ldr	r3, [r3, #0]
 8006c50:	68da      	ldr	r2, [r3, #12]
 8006c52:	687b      	ldr	r3, [r7, #4]
 8006c54:	681b      	ldr	r3, [r3, #0]
 8006c56:	f022 0210 	bic.w	r2, r2, #16
 8006c5a:	60da      	str	r2, [r3, #12]
 8006c5c:	8a7b      	ldrh	r3, [r7, #18]
 8006c5e:	4619      	mov	r1, r3
 8006c60:	6878      	ldr	r0, [r7, #4]
 8006c62:	f000 f842 	bl	8006cea <HAL_UARTEx_RxEventCallback>
 8006c66:	e01f      	b.n	8006ca8 <HAL_UART_IRQHandler+0x348>
 8006c68:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006c6a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006c6e:	2b00      	cmp	r3, #0
 8006c70:	d008      	beq.n	8006c84 <HAL_UART_IRQHandler+0x324>
 8006c72:	6a3b      	ldr	r3, [r7, #32]
 8006c74:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006c78:	2b00      	cmp	r3, #0
 8006c7a:	d003      	beq.n	8006c84 <HAL_UART_IRQHandler+0x324>
 8006c7c:	6878      	ldr	r0, [r7, #4]
 8006c7e:	f000 f8c9 	bl	8006e14 <UART_Transmit_IT>
 8006c82:	e012      	b.n	8006caa <HAL_UART_IRQHandler+0x34a>
 8006c84:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006c86:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006c8a:	2b00      	cmp	r3, #0
 8006c8c:	d00d      	beq.n	8006caa <HAL_UART_IRQHandler+0x34a>
 8006c8e:	6a3b      	ldr	r3, [r7, #32]
 8006c90:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006c94:	2b00      	cmp	r3, #0
 8006c96:	d008      	beq.n	8006caa <HAL_UART_IRQHandler+0x34a>
 8006c98:	6878      	ldr	r0, [r7, #4]
 8006c9a:	f000 f90a 	bl	8006eb2 <UART_EndTransmit_IT>
 8006c9e:	e004      	b.n	8006caa <HAL_UART_IRQHandler+0x34a>
 8006ca0:	bf00      	nop
 8006ca2:	e002      	b.n	8006caa <HAL_UART_IRQHandler+0x34a>
 8006ca4:	bf00      	nop
 8006ca6:	e000      	b.n	8006caa <HAL_UART_IRQHandler+0x34a>
 8006ca8:	bf00      	nop
 8006caa:	3728      	adds	r7, #40	; 0x28
 8006cac:	46bd      	mov	sp, r7
 8006cae:	bd80      	pop	{r7, pc}
 8006cb0:	08006ded 	.word	0x08006ded

08006cb4 <HAL_UART_TxCpltCallback>:
 8006cb4:	b480      	push	{r7}
 8006cb6:	b083      	sub	sp, #12
 8006cb8:	af00      	add	r7, sp, #0
 8006cba:	6078      	str	r0, [r7, #4]
 8006cbc:	bf00      	nop
 8006cbe:	370c      	adds	r7, #12
 8006cc0:	46bd      	mov	sp, r7
 8006cc2:	bc80      	pop	{r7}
 8006cc4:	4770      	bx	lr

08006cc6 <HAL_UART_RxCpltCallback>:
 8006cc6:	b480      	push	{r7}
 8006cc8:	b083      	sub	sp, #12
 8006cca:	af00      	add	r7, sp, #0
 8006ccc:	6078      	str	r0, [r7, #4]
 8006cce:	bf00      	nop
 8006cd0:	370c      	adds	r7, #12
 8006cd2:	46bd      	mov	sp, r7
 8006cd4:	bc80      	pop	{r7}
 8006cd6:	4770      	bx	lr

08006cd8 <HAL_UART_ErrorCallback>:
 8006cd8:	b480      	push	{r7}
 8006cda:	b083      	sub	sp, #12
 8006cdc:	af00      	add	r7, sp, #0
 8006cde:	6078      	str	r0, [r7, #4]
 8006ce0:	bf00      	nop
 8006ce2:	370c      	adds	r7, #12
 8006ce4:	46bd      	mov	sp, r7
 8006ce6:	bc80      	pop	{r7}
 8006ce8:	4770      	bx	lr

08006cea <HAL_UARTEx_RxEventCallback>:
 8006cea:	b480      	push	{r7}
 8006cec:	b083      	sub	sp, #12
 8006cee:	af00      	add	r7, sp, #0
 8006cf0:	6078      	str	r0, [r7, #4]
 8006cf2:	460b      	mov	r3, r1
 8006cf4:	807b      	strh	r3, [r7, #2]
 8006cf6:	bf00      	nop
 8006cf8:	370c      	adds	r7, #12
 8006cfa:	46bd      	mov	sp, r7
 8006cfc:	bc80      	pop	{r7}
 8006cfe:	4770      	bx	lr

08006d00 <UART_WaitOnFlagUntilTimeout>:
 8006d00:	b580      	push	{r7, lr}
 8006d02:	b084      	sub	sp, #16
 8006d04:	af00      	add	r7, sp, #0
 8006d06:	60f8      	str	r0, [r7, #12]
 8006d08:	60b9      	str	r1, [r7, #8]
 8006d0a:	603b      	str	r3, [r7, #0]
 8006d0c:	4613      	mov	r3, r2
 8006d0e:	71fb      	strb	r3, [r7, #7]
 8006d10:	e02c      	b.n	8006d6c <UART_WaitOnFlagUntilTimeout+0x6c>
 8006d12:	69bb      	ldr	r3, [r7, #24]
 8006d14:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006d18:	d028      	beq.n	8006d6c <UART_WaitOnFlagUntilTimeout+0x6c>
 8006d1a:	69bb      	ldr	r3, [r7, #24]
 8006d1c:	2b00      	cmp	r3, #0
 8006d1e:	d007      	beq.n	8006d30 <UART_WaitOnFlagUntilTimeout+0x30>
 8006d20:	f7fd f9f6 	bl	8004110 <HAL_GetTick>
 8006d24:	4602      	mov	r2, r0
 8006d26:	683b      	ldr	r3, [r7, #0]
 8006d28:	1ad3      	subs	r3, r2, r3
 8006d2a:	69ba      	ldr	r2, [r7, #24]
 8006d2c:	429a      	cmp	r2, r3
 8006d2e:	d21d      	bcs.n	8006d6c <UART_WaitOnFlagUntilTimeout+0x6c>
 8006d30:	68fb      	ldr	r3, [r7, #12]
 8006d32:	681b      	ldr	r3, [r3, #0]
 8006d34:	68da      	ldr	r2, [r3, #12]
 8006d36:	68fb      	ldr	r3, [r7, #12]
 8006d38:	681b      	ldr	r3, [r3, #0]
 8006d3a:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8006d3e:	60da      	str	r2, [r3, #12]
 8006d40:	68fb      	ldr	r3, [r7, #12]
 8006d42:	681b      	ldr	r3, [r3, #0]
 8006d44:	695a      	ldr	r2, [r3, #20]
 8006d46:	68fb      	ldr	r3, [r7, #12]
 8006d48:	681b      	ldr	r3, [r3, #0]
 8006d4a:	f022 0201 	bic.w	r2, r2, #1
 8006d4e:	615a      	str	r2, [r3, #20]
 8006d50:	68fb      	ldr	r3, [r7, #12]
 8006d52:	2220      	movs	r2, #32
 8006d54:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006d58:	68fb      	ldr	r3, [r7, #12]
 8006d5a:	2220      	movs	r2, #32
 8006d5c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006d60:	68fb      	ldr	r3, [r7, #12]
 8006d62:	2200      	movs	r2, #0
 8006d64:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006d68:	2303      	movs	r3, #3
 8006d6a:	e00f      	b.n	8006d8c <UART_WaitOnFlagUntilTimeout+0x8c>
 8006d6c:	68fb      	ldr	r3, [r7, #12]
 8006d6e:	681b      	ldr	r3, [r3, #0]
 8006d70:	681a      	ldr	r2, [r3, #0]
 8006d72:	68bb      	ldr	r3, [r7, #8]
 8006d74:	4013      	ands	r3, r2
 8006d76:	68ba      	ldr	r2, [r7, #8]
 8006d78:	429a      	cmp	r2, r3
 8006d7a:	bf0c      	ite	eq
 8006d7c:	2301      	moveq	r3, #1
 8006d7e:	2300      	movne	r3, #0
 8006d80:	b2db      	uxtb	r3, r3
 8006d82:	461a      	mov	r2, r3
 8006d84:	79fb      	ldrb	r3, [r7, #7]
 8006d86:	429a      	cmp	r2, r3
 8006d88:	d0c3      	beq.n	8006d12 <UART_WaitOnFlagUntilTimeout+0x12>
 8006d8a:	2300      	movs	r3, #0
 8006d8c:	4618      	mov	r0, r3
 8006d8e:	3710      	adds	r7, #16
 8006d90:	46bd      	mov	sp, r7
 8006d92:	bd80      	pop	{r7, pc}

08006d94 <UART_EndRxTransfer>:
 8006d94:	b480      	push	{r7}
 8006d96:	b083      	sub	sp, #12
 8006d98:	af00      	add	r7, sp, #0
 8006d9a:	6078      	str	r0, [r7, #4]
 8006d9c:	687b      	ldr	r3, [r7, #4]
 8006d9e:	681b      	ldr	r3, [r3, #0]
 8006da0:	68da      	ldr	r2, [r3, #12]
 8006da2:	687b      	ldr	r3, [r7, #4]
 8006da4:	681b      	ldr	r3, [r3, #0]
 8006da6:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8006daa:	60da      	str	r2, [r3, #12]
 8006dac:	687b      	ldr	r3, [r7, #4]
 8006dae:	681b      	ldr	r3, [r3, #0]
 8006db0:	695a      	ldr	r2, [r3, #20]
 8006db2:	687b      	ldr	r3, [r7, #4]
 8006db4:	681b      	ldr	r3, [r3, #0]
 8006db6:	f022 0201 	bic.w	r2, r2, #1
 8006dba:	615a      	str	r2, [r3, #20]
 8006dbc:	687b      	ldr	r3, [r7, #4]
 8006dbe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006dc0:	2b01      	cmp	r3, #1
 8006dc2:	d107      	bne.n	8006dd4 <UART_EndRxTransfer+0x40>
 8006dc4:	687b      	ldr	r3, [r7, #4]
 8006dc6:	681b      	ldr	r3, [r3, #0]
 8006dc8:	68da      	ldr	r2, [r3, #12]
 8006dca:	687b      	ldr	r3, [r7, #4]
 8006dcc:	681b      	ldr	r3, [r3, #0]
 8006dce:	f022 0210 	bic.w	r2, r2, #16
 8006dd2:	60da      	str	r2, [r3, #12]
 8006dd4:	687b      	ldr	r3, [r7, #4]
 8006dd6:	2220      	movs	r2, #32
 8006dd8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006ddc:	687b      	ldr	r3, [r7, #4]
 8006dde:	2200      	movs	r2, #0
 8006de0:	631a      	str	r2, [r3, #48]	; 0x30
 8006de2:	bf00      	nop
 8006de4:	370c      	adds	r7, #12
 8006de6:	46bd      	mov	sp, r7
 8006de8:	bc80      	pop	{r7}
 8006dea:	4770      	bx	lr

08006dec <UART_DMAAbortOnError>:
 8006dec:	b580      	push	{r7, lr}
 8006dee:	b084      	sub	sp, #16
 8006df0:	af00      	add	r7, sp, #0
 8006df2:	6078      	str	r0, [r7, #4]
 8006df4:	687b      	ldr	r3, [r7, #4]
 8006df6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006df8:	60fb      	str	r3, [r7, #12]
 8006dfa:	68fb      	ldr	r3, [r7, #12]
 8006dfc:	2200      	movs	r2, #0
 8006dfe:	85da      	strh	r2, [r3, #46]	; 0x2e
 8006e00:	68fb      	ldr	r3, [r7, #12]
 8006e02:	2200      	movs	r2, #0
 8006e04:	84da      	strh	r2, [r3, #38]	; 0x26
 8006e06:	68f8      	ldr	r0, [r7, #12]
 8006e08:	f7ff ff66 	bl	8006cd8 <HAL_UART_ErrorCallback>
 8006e0c:	bf00      	nop
 8006e0e:	3710      	adds	r7, #16
 8006e10:	46bd      	mov	sp, r7
 8006e12:	bd80      	pop	{r7, pc}

08006e14 <UART_Transmit_IT>:
 8006e14:	b480      	push	{r7}
 8006e16:	b085      	sub	sp, #20
 8006e18:	af00      	add	r7, sp, #0
 8006e1a:	6078      	str	r0, [r7, #4]
 8006e1c:	687b      	ldr	r3, [r7, #4]
 8006e1e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006e22:	b2db      	uxtb	r3, r3
 8006e24:	2b21      	cmp	r3, #33	; 0x21
 8006e26:	d13e      	bne.n	8006ea6 <UART_Transmit_IT+0x92>
 8006e28:	687b      	ldr	r3, [r7, #4]
 8006e2a:	689b      	ldr	r3, [r3, #8]
 8006e2c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006e30:	d114      	bne.n	8006e5c <UART_Transmit_IT+0x48>
 8006e32:	687b      	ldr	r3, [r7, #4]
 8006e34:	691b      	ldr	r3, [r3, #16]
 8006e36:	2b00      	cmp	r3, #0
 8006e38:	d110      	bne.n	8006e5c <UART_Transmit_IT+0x48>
 8006e3a:	687b      	ldr	r3, [r7, #4]
 8006e3c:	6a1b      	ldr	r3, [r3, #32]
 8006e3e:	60fb      	str	r3, [r7, #12]
 8006e40:	68fb      	ldr	r3, [r7, #12]
 8006e42:	881b      	ldrh	r3, [r3, #0]
 8006e44:	461a      	mov	r2, r3
 8006e46:	687b      	ldr	r3, [r7, #4]
 8006e48:	681b      	ldr	r3, [r3, #0]
 8006e4a:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006e4e:	605a      	str	r2, [r3, #4]
 8006e50:	687b      	ldr	r3, [r7, #4]
 8006e52:	6a1b      	ldr	r3, [r3, #32]
 8006e54:	1c9a      	adds	r2, r3, #2
 8006e56:	687b      	ldr	r3, [r7, #4]
 8006e58:	621a      	str	r2, [r3, #32]
 8006e5a:	e008      	b.n	8006e6e <UART_Transmit_IT+0x5a>
 8006e5c:	687b      	ldr	r3, [r7, #4]
 8006e5e:	6a1b      	ldr	r3, [r3, #32]
 8006e60:	1c59      	adds	r1, r3, #1
 8006e62:	687a      	ldr	r2, [r7, #4]
 8006e64:	6211      	str	r1, [r2, #32]
 8006e66:	781a      	ldrb	r2, [r3, #0]
 8006e68:	687b      	ldr	r3, [r7, #4]
 8006e6a:	681b      	ldr	r3, [r3, #0]
 8006e6c:	605a      	str	r2, [r3, #4]
 8006e6e:	687b      	ldr	r3, [r7, #4]
 8006e70:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8006e72:	b29b      	uxth	r3, r3
 8006e74:	3b01      	subs	r3, #1
 8006e76:	b29b      	uxth	r3, r3
 8006e78:	687a      	ldr	r2, [r7, #4]
 8006e7a:	4619      	mov	r1, r3
 8006e7c:	84d1      	strh	r1, [r2, #38]	; 0x26
 8006e7e:	2b00      	cmp	r3, #0
 8006e80:	d10f      	bne.n	8006ea2 <UART_Transmit_IT+0x8e>
 8006e82:	687b      	ldr	r3, [r7, #4]
 8006e84:	681b      	ldr	r3, [r3, #0]
 8006e86:	68da      	ldr	r2, [r3, #12]
 8006e88:	687b      	ldr	r3, [r7, #4]
 8006e8a:	681b      	ldr	r3, [r3, #0]
 8006e8c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8006e90:	60da      	str	r2, [r3, #12]
 8006e92:	687b      	ldr	r3, [r7, #4]
 8006e94:	681b      	ldr	r3, [r3, #0]
 8006e96:	68da      	ldr	r2, [r3, #12]
 8006e98:	687b      	ldr	r3, [r7, #4]
 8006e9a:	681b      	ldr	r3, [r3, #0]
 8006e9c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8006ea0:	60da      	str	r2, [r3, #12]
 8006ea2:	2300      	movs	r3, #0
 8006ea4:	e000      	b.n	8006ea8 <UART_Transmit_IT+0x94>
 8006ea6:	2302      	movs	r3, #2
 8006ea8:	4618      	mov	r0, r3
 8006eaa:	3714      	adds	r7, #20
 8006eac:	46bd      	mov	sp, r7
 8006eae:	bc80      	pop	{r7}
 8006eb0:	4770      	bx	lr

08006eb2 <UART_EndTransmit_IT>:
 8006eb2:	b580      	push	{r7, lr}
 8006eb4:	b082      	sub	sp, #8
 8006eb6:	af00      	add	r7, sp, #0
 8006eb8:	6078      	str	r0, [r7, #4]
 8006eba:	687b      	ldr	r3, [r7, #4]
 8006ebc:	681b      	ldr	r3, [r3, #0]
 8006ebe:	68da      	ldr	r2, [r3, #12]
 8006ec0:	687b      	ldr	r3, [r7, #4]
 8006ec2:	681b      	ldr	r3, [r3, #0]
 8006ec4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006ec8:	60da      	str	r2, [r3, #12]
 8006eca:	687b      	ldr	r3, [r7, #4]
 8006ecc:	2220      	movs	r2, #32
 8006ece:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006ed2:	6878      	ldr	r0, [r7, #4]
 8006ed4:	f7ff feee 	bl	8006cb4 <HAL_UART_TxCpltCallback>
 8006ed8:	2300      	movs	r3, #0
 8006eda:	4618      	mov	r0, r3
 8006edc:	3708      	adds	r7, #8
 8006ede:	46bd      	mov	sp, r7
 8006ee0:	bd80      	pop	{r7, pc}

08006ee2 <UART_Receive_IT>:
 8006ee2:	b580      	push	{r7, lr}
 8006ee4:	b086      	sub	sp, #24
 8006ee6:	af00      	add	r7, sp, #0
 8006ee8:	6078      	str	r0, [r7, #4]
 8006eea:	687b      	ldr	r3, [r7, #4]
 8006eec:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006ef0:	b2db      	uxtb	r3, r3
 8006ef2:	2b22      	cmp	r3, #34	; 0x22
 8006ef4:	f040 8099 	bne.w	800702a <UART_Receive_IT+0x148>
 8006ef8:	687b      	ldr	r3, [r7, #4]
 8006efa:	689b      	ldr	r3, [r3, #8]
 8006efc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006f00:	d117      	bne.n	8006f32 <UART_Receive_IT+0x50>
 8006f02:	687b      	ldr	r3, [r7, #4]
 8006f04:	691b      	ldr	r3, [r3, #16]
 8006f06:	2b00      	cmp	r3, #0
 8006f08:	d113      	bne.n	8006f32 <UART_Receive_IT+0x50>
 8006f0a:	2300      	movs	r3, #0
 8006f0c:	617b      	str	r3, [r7, #20]
 8006f0e:	687b      	ldr	r3, [r7, #4]
 8006f10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006f12:	613b      	str	r3, [r7, #16]
 8006f14:	687b      	ldr	r3, [r7, #4]
 8006f16:	681b      	ldr	r3, [r3, #0]
 8006f18:	685b      	ldr	r3, [r3, #4]
 8006f1a:	b29b      	uxth	r3, r3
 8006f1c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006f20:	b29a      	uxth	r2, r3
 8006f22:	693b      	ldr	r3, [r7, #16]
 8006f24:	801a      	strh	r2, [r3, #0]
 8006f26:	687b      	ldr	r3, [r7, #4]
 8006f28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006f2a:	1c9a      	adds	r2, r3, #2
 8006f2c:	687b      	ldr	r3, [r7, #4]
 8006f2e:	629a      	str	r2, [r3, #40]	; 0x28
 8006f30:	e026      	b.n	8006f80 <UART_Receive_IT+0x9e>
 8006f32:	687b      	ldr	r3, [r7, #4]
 8006f34:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006f36:	617b      	str	r3, [r7, #20]
 8006f38:	2300      	movs	r3, #0
 8006f3a:	613b      	str	r3, [r7, #16]
 8006f3c:	687b      	ldr	r3, [r7, #4]
 8006f3e:	689b      	ldr	r3, [r3, #8]
 8006f40:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006f44:	d007      	beq.n	8006f56 <UART_Receive_IT+0x74>
 8006f46:	687b      	ldr	r3, [r7, #4]
 8006f48:	689b      	ldr	r3, [r3, #8]
 8006f4a:	2b00      	cmp	r3, #0
 8006f4c:	d10a      	bne.n	8006f64 <UART_Receive_IT+0x82>
 8006f4e:	687b      	ldr	r3, [r7, #4]
 8006f50:	691b      	ldr	r3, [r3, #16]
 8006f52:	2b00      	cmp	r3, #0
 8006f54:	d106      	bne.n	8006f64 <UART_Receive_IT+0x82>
 8006f56:	687b      	ldr	r3, [r7, #4]
 8006f58:	681b      	ldr	r3, [r3, #0]
 8006f5a:	685b      	ldr	r3, [r3, #4]
 8006f5c:	b2da      	uxtb	r2, r3
 8006f5e:	697b      	ldr	r3, [r7, #20]
 8006f60:	701a      	strb	r2, [r3, #0]
 8006f62:	e008      	b.n	8006f76 <UART_Receive_IT+0x94>
 8006f64:	687b      	ldr	r3, [r7, #4]
 8006f66:	681b      	ldr	r3, [r3, #0]
 8006f68:	685b      	ldr	r3, [r3, #4]
 8006f6a:	b2db      	uxtb	r3, r3
 8006f6c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8006f70:	b2da      	uxtb	r2, r3
 8006f72:	697b      	ldr	r3, [r7, #20]
 8006f74:	701a      	strb	r2, [r3, #0]
 8006f76:	687b      	ldr	r3, [r7, #4]
 8006f78:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006f7a:	1c5a      	adds	r2, r3, #1
 8006f7c:	687b      	ldr	r3, [r7, #4]
 8006f7e:	629a      	str	r2, [r3, #40]	; 0x28
 8006f80:	687b      	ldr	r3, [r7, #4]
 8006f82:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8006f84:	b29b      	uxth	r3, r3
 8006f86:	3b01      	subs	r3, #1
 8006f88:	b29b      	uxth	r3, r3
 8006f8a:	687a      	ldr	r2, [r7, #4]
 8006f8c:	4619      	mov	r1, r3
 8006f8e:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8006f90:	2b00      	cmp	r3, #0
 8006f92:	d148      	bne.n	8007026 <UART_Receive_IT+0x144>
 8006f94:	687b      	ldr	r3, [r7, #4]
 8006f96:	681b      	ldr	r3, [r3, #0]
 8006f98:	68da      	ldr	r2, [r3, #12]
 8006f9a:	687b      	ldr	r3, [r7, #4]
 8006f9c:	681b      	ldr	r3, [r3, #0]
 8006f9e:	f022 0220 	bic.w	r2, r2, #32
 8006fa2:	60da      	str	r2, [r3, #12]
 8006fa4:	687b      	ldr	r3, [r7, #4]
 8006fa6:	681b      	ldr	r3, [r3, #0]
 8006fa8:	68da      	ldr	r2, [r3, #12]
 8006faa:	687b      	ldr	r3, [r7, #4]
 8006fac:	681b      	ldr	r3, [r3, #0]
 8006fae:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006fb2:	60da      	str	r2, [r3, #12]
 8006fb4:	687b      	ldr	r3, [r7, #4]
 8006fb6:	681b      	ldr	r3, [r3, #0]
 8006fb8:	695a      	ldr	r2, [r3, #20]
 8006fba:	687b      	ldr	r3, [r7, #4]
 8006fbc:	681b      	ldr	r3, [r3, #0]
 8006fbe:	f022 0201 	bic.w	r2, r2, #1
 8006fc2:	615a      	str	r2, [r3, #20]
 8006fc4:	687b      	ldr	r3, [r7, #4]
 8006fc6:	2220      	movs	r2, #32
 8006fc8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006fcc:	687b      	ldr	r3, [r7, #4]
 8006fce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006fd0:	2b01      	cmp	r3, #1
 8006fd2:	d123      	bne.n	800701c <UART_Receive_IT+0x13a>
 8006fd4:	687b      	ldr	r3, [r7, #4]
 8006fd6:	2200      	movs	r2, #0
 8006fd8:	631a      	str	r2, [r3, #48]	; 0x30
 8006fda:	687b      	ldr	r3, [r7, #4]
 8006fdc:	681b      	ldr	r3, [r3, #0]
 8006fde:	68da      	ldr	r2, [r3, #12]
 8006fe0:	687b      	ldr	r3, [r7, #4]
 8006fe2:	681b      	ldr	r3, [r3, #0]
 8006fe4:	f022 0210 	bic.w	r2, r2, #16
 8006fe8:	60da      	str	r2, [r3, #12]
 8006fea:	687b      	ldr	r3, [r7, #4]
 8006fec:	681b      	ldr	r3, [r3, #0]
 8006fee:	681b      	ldr	r3, [r3, #0]
 8006ff0:	f003 0310 	and.w	r3, r3, #16
 8006ff4:	2b10      	cmp	r3, #16
 8006ff6:	d10a      	bne.n	800700e <UART_Receive_IT+0x12c>
 8006ff8:	2300      	movs	r3, #0
 8006ffa:	60fb      	str	r3, [r7, #12]
 8006ffc:	687b      	ldr	r3, [r7, #4]
 8006ffe:	681b      	ldr	r3, [r3, #0]
 8007000:	681b      	ldr	r3, [r3, #0]
 8007002:	60fb      	str	r3, [r7, #12]
 8007004:	687b      	ldr	r3, [r7, #4]
 8007006:	681b      	ldr	r3, [r3, #0]
 8007008:	685b      	ldr	r3, [r3, #4]
 800700a:	60fb      	str	r3, [r7, #12]
 800700c:	68fb      	ldr	r3, [r7, #12]
 800700e:	687b      	ldr	r3, [r7, #4]
 8007010:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8007012:	4619      	mov	r1, r3
 8007014:	6878      	ldr	r0, [r7, #4]
 8007016:	f7ff fe68 	bl	8006cea <HAL_UARTEx_RxEventCallback>
 800701a:	e002      	b.n	8007022 <UART_Receive_IT+0x140>
 800701c:	6878      	ldr	r0, [r7, #4]
 800701e:	f7ff fe52 	bl	8006cc6 <HAL_UART_RxCpltCallback>
 8007022:	2300      	movs	r3, #0
 8007024:	e002      	b.n	800702c <UART_Receive_IT+0x14a>
 8007026:	2300      	movs	r3, #0
 8007028:	e000      	b.n	800702c <UART_Receive_IT+0x14a>
 800702a:	2302      	movs	r3, #2
 800702c:	4618      	mov	r0, r3
 800702e:	3718      	adds	r7, #24
 8007030:	46bd      	mov	sp, r7
 8007032:	bd80      	pop	{r7, pc}

08007034 <UART_SetConfig>:
 8007034:	b580      	push	{r7, lr}
 8007036:	b084      	sub	sp, #16
 8007038:	af00      	add	r7, sp, #0
 800703a:	6078      	str	r0, [r7, #4]
 800703c:	687b      	ldr	r3, [r7, #4]
 800703e:	681b      	ldr	r3, [r3, #0]
 8007040:	691b      	ldr	r3, [r3, #16]
 8007042:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8007046:	687b      	ldr	r3, [r7, #4]
 8007048:	68da      	ldr	r2, [r3, #12]
 800704a:	687b      	ldr	r3, [r7, #4]
 800704c:	681b      	ldr	r3, [r3, #0]
 800704e:	430a      	orrs	r2, r1
 8007050:	611a      	str	r2, [r3, #16]
 8007052:	687b      	ldr	r3, [r7, #4]
 8007054:	689a      	ldr	r2, [r3, #8]
 8007056:	687b      	ldr	r3, [r7, #4]
 8007058:	691b      	ldr	r3, [r3, #16]
 800705a:	431a      	orrs	r2, r3
 800705c:	687b      	ldr	r3, [r7, #4]
 800705e:	695b      	ldr	r3, [r3, #20]
 8007060:	4313      	orrs	r3, r2
 8007062:	60bb      	str	r3, [r7, #8]
 8007064:	687b      	ldr	r3, [r7, #4]
 8007066:	681b      	ldr	r3, [r3, #0]
 8007068:	68db      	ldr	r3, [r3, #12]
 800706a:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 800706e:	f023 030c 	bic.w	r3, r3, #12
 8007072:	687a      	ldr	r2, [r7, #4]
 8007074:	6812      	ldr	r2, [r2, #0]
 8007076:	68b9      	ldr	r1, [r7, #8]
 8007078:	430b      	orrs	r3, r1
 800707a:	60d3      	str	r3, [r2, #12]
 800707c:	687b      	ldr	r3, [r7, #4]
 800707e:	681b      	ldr	r3, [r3, #0]
 8007080:	695b      	ldr	r3, [r3, #20]
 8007082:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8007086:	687b      	ldr	r3, [r7, #4]
 8007088:	699a      	ldr	r2, [r3, #24]
 800708a:	687b      	ldr	r3, [r7, #4]
 800708c:	681b      	ldr	r3, [r3, #0]
 800708e:	430a      	orrs	r2, r1
 8007090:	615a      	str	r2, [r3, #20]
 8007092:	687b      	ldr	r3, [r7, #4]
 8007094:	681b      	ldr	r3, [r3, #0]
 8007096:	4a2c      	ldr	r2, [pc, #176]	; (8007148 <UART_SetConfig+0x114>)
 8007098:	4293      	cmp	r3, r2
 800709a:	d103      	bne.n	80070a4 <UART_SetConfig+0x70>
 800709c:	f7fe fd4c 	bl	8005b38 <HAL_RCC_GetPCLK2Freq>
 80070a0:	60f8      	str	r0, [r7, #12]
 80070a2:	e002      	b.n	80070aa <UART_SetConfig+0x76>
 80070a4:	f7fe fd34 	bl	8005b10 <HAL_RCC_GetPCLK1Freq>
 80070a8:	60f8      	str	r0, [r7, #12]
 80070aa:	68fa      	ldr	r2, [r7, #12]
 80070ac:	4613      	mov	r3, r2
 80070ae:	009b      	lsls	r3, r3, #2
 80070b0:	4413      	add	r3, r2
 80070b2:	009a      	lsls	r2, r3, #2
 80070b4:	441a      	add	r2, r3
 80070b6:	687b      	ldr	r3, [r7, #4]
 80070b8:	685b      	ldr	r3, [r3, #4]
 80070ba:	009b      	lsls	r3, r3, #2
 80070bc:	fbb2 f3f3 	udiv	r3, r2, r3
 80070c0:	4a22      	ldr	r2, [pc, #136]	; (800714c <UART_SetConfig+0x118>)
 80070c2:	fba2 2303 	umull	r2, r3, r2, r3
 80070c6:	095b      	lsrs	r3, r3, #5
 80070c8:	0119      	lsls	r1, r3, #4
 80070ca:	68fa      	ldr	r2, [r7, #12]
 80070cc:	4613      	mov	r3, r2
 80070ce:	009b      	lsls	r3, r3, #2
 80070d0:	4413      	add	r3, r2
 80070d2:	009a      	lsls	r2, r3, #2
 80070d4:	441a      	add	r2, r3
 80070d6:	687b      	ldr	r3, [r7, #4]
 80070d8:	685b      	ldr	r3, [r3, #4]
 80070da:	009b      	lsls	r3, r3, #2
 80070dc:	fbb2 f2f3 	udiv	r2, r2, r3
 80070e0:	4b1a      	ldr	r3, [pc, #104]	; (800714c <UART_SetConfig+0x118>)
 80070e2:	fba3 0302 	umull	r0, r3, r3, r2
 80070e6:	095b      	lsrs	r3, r3, #5
 80070e8:	2064      	movs	r0, #100	; 0x64
 80070ea:	fb00 f303 	mul.w	r3, r0, r3
 80070ee:	1ad3      	subs	r3, r2, r3
 80070f0:	011b      	lsls	r3, r3, #4
 80070f2:	3332      	adds	r3, #50	; 0x32
 80070f4:	4a15      	ldr	r2, [pc, #84]	; (800714c <UART_SetConfig+0x118>)
 80070f6:	fba2 2303 	umull	r2, r3, r2, r3
 80070fa:	095b      	lsrs	r3, r3, #5
 80070fc:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8007100:	4419      	add	r1, r3
 8007102:	68fa      	ldr	r2, [r7, #12]
 8007104:	4613      	mov	r3, r2
 8007106:	009b      	lsls	r3, r3, #2
 8007108:	4413      	add	r3, r2
 800710a:	009a      	lsls	r2, r3, #2
 800710c:	441a      	add	r2, r3
 800710e:	687b      	ldr	r3, [r7, #4]
 8007110:	685b      	ldr	r3, [r3, #4]
 8007112:	009b      	lsls	r3, r3, #2
 8007114:	fbb2 f2f3 	udiv	r2, r2, r3
 8007118:	4b0c      	ldr	r3, [pc, #48]	; (800714c <UART_SetConfig+0x118>)
 800711a:	fba3 0302 	umull	r0, r3, r3, r2
 800711e:	095b      	lsrs	r3, r3, #5
 8007120:	2064      	movs	r0, #100	; 0x64
 8007122:	fb00 f303 	mul.w	r3, r0, r3
 8007126:	1ad3      	subs	r3, r2, r3
 8007128:	011b      	lsls	r3, r3, #4
 800712a:	3332      	adds	r3, #50	; 0x32
 800712c:	4a07      	ldr	r2, [pc, #28]	; (800714c <UART_SetConfig+0x118>)
 800712e:	fba2 2303 	umull	r2, r3, r2, r3
 8007132:	095b      	lsrs	r3, r3, #5
 8007134:	f003 020f 	and.w	r2, r3, #15
 8007138:	687b      	ldr	r3, [r7, #4]
 800713a:	681b      	ldr	r3, [r3, #0]
 800713c:	440a      	add	r2, r1
 800713e:	609a      	str	r2, [r3, #8]
 8007140:	bf00      	nop
 8007142:	3710      	adds	r7, #16
 8007144:	46bd      	mov	sp, r7
 8007146:	bd80      	pop	{r7, pc}
 8007148:	40013800 	.word	0x40013800
 800714c:	51eb851f 	.word	0x51eb851f

08007150 <pow>:
 8007150:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007154:	4614      	mov	r4, r2
 8007156:	461d      	mov	r5, r3
 8007158:	4680      	mov	r8, r0
 800715a:	4689      	mov	r9, r1
 800715c:	f000 f860 	bl	8007220 <__ieee754_pow>
 8007160:	4622      	mov	r2, r4
 8007162:	4606      	mov	r6, r0
 8007164:	460f      	mov	r7, r1
 8007166:	462b      	mov	r3, r5
 8007168:	4620      	mov	r0, r4
 800716a:	4629      	mov	r1, r5
 800716c:	f7f9 fc46 	bl	80009fc <__aeabi_dcmpun>
 8007170:	bbc8      	cbnz	r0, 80071e6 <pow+0x96>
 8007172:	2200      	movs	r2, #0
 8007174:	2300      	movs	r3, #0
 8007176:	4640      	mov	r0, r8
 8007178:	4649      	mov	r1, r9
 800717a:	f7f9 fc0d 	bl	8000998 <__aeabi_dcmpeq>
 800717e:	b1b8      	cbz	r0, 80071b0 <pow+0x60>
 8007180:	2200      	movs	r2, #0
 8007182:	2300      	movs	r3, #0
 8007184:	4620      	mov	r0, r4
 8007186:	4629      	mov	r1, r5
 8007188:	f7f9 fc06 	bl	8000998 <__aeabi_dcmpeq>
 800718c:	2800      	cmp	r0, #0
 800718e:	d141      	bne.n	8007214 <pow+0xc4>
 8007190:	4620      	mov	r0, r4
 8007192:	4629      	mov	r1, r5
 8007194:	f000 fe39 	bl	8007e0a <finite>
 8007198:	b328      	cbz	r0, 80071e6 <pow+0x96>
 800719a:	2200      	movs	r2, #0
 800719c:	2300      	movs	r3, #0
 800719e:	4620      	mov	r0, r4
 80071a0:	4629      	mov	r1, r5
 80071a2:	f7f9 fc03 	bl	80009ac <__aeabi_dcmplt>
 80071a6:	b1f0      	cbz	r0, 80071e6 <pow+0x96>
 80071a8:	f000 feb4 	bl	8007f14 <__errno>
 80071ac:	2322      	movs	r3, #34	; 0x22
 80071ae:	e019      	b.n	80071e4 <pow+0x94>
 80071b0:	4630      	mov	r0, r6
 80071b2:	4639      	mov	r1, r7
 80071b4:	f000 fe29 	bl	8007e0a <finite>
 80071b8:	b9c8      	cbnz	r0, 80071ee <pow+0x9e>
 80071ba:	4640      	mov	r0, r8
 80071bc:	4649      	mov	r1, r9
 80071be:	f000 fe24 	bl	8007e0a <finite>
 80071c2:	b1a0      	cbz	r0, 80071ee <pow+0x9e>
 80071c4:	4620      	mov	r0, r4
 80071c6:	4629      	mov	r1, r5
 80071c8:	f000 fe1f 	bl	8007e0a <finite>
 80071cc:	b178      	cbz	r0, 80071ee <pow+0x9e>
 80071ce:	4632      	mov	r2, r6
 80071d0:	463b      	mov	r3, r7
 80071d2:	4630      	mov	r0, r6
 80071d4:	4639      	mov	r1, r7
 80071d6:	f7f9 fc11 	bl	80009fc <__aeabi_dcmpun>
 80071da:	2800      	cmp	r0, #0
 80071dc:	d0e4      	beq.n	80071a8 <pow+0x58>
 80071de:	f000 fe99 	bl	8007f14 <__errno>
 80071e2:	2321      	movs	r3, #33	; 0x21
 80071e4:	6003      	str	r3, [r0, #0]
 80071e6:	4630      	mov	r0, r6
 80071e8:	4639      	mov	r1, r7
 80071ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80071ee:	2200      	movs	r2, #0
 80071f0:	2300      	movs	r3, #0
 80071f2:	4630      	mov	r0, r6
 80071f4:	4639      	mov	r1, r7
 80071f6:	f7f9 fbcf 	bl	8000998 <__aeabi_dcmpeq>
 80071fa:	2800      	cmp	r0, #0
 80071fc:	d0f3      	beq.n	80071e6 <pow+0x96>
 80071fe:	4640      	mov	r0, r8
 8007200:	4649      	mov	r1, r9
 8007202:	f000 fe02 	bl	8007e0a <finite>
 8007206:	2800      	cmp	r0, #0
 8007208:	d0ed      	beq.n	80071e6 <pow+0x96>
 800720a:	4620      	mov	r0, r4
 800720c:	4629      	mov	r1, r5
 800720e:	f000 fdfc 	bl	8007e0a <finite>
 8007212:	e7c8      	b.n	80071a6 <pow+0x56>
 8007214:	2600      	movs	r6, #0
 8007216:	4f01      	ldr	r7, [pc, #4]	; (800721c <pow+0xcc>)
 8007218:	e7e5      	b.n	80071e6 <pow+0x96>
 800721a:	bf00      	nop
 800721c:	3ff00000 	.word	0x3ff00000

08007220 <__ieee754_pow>:
 8007220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007224:	b093      	sub	sp, #76	; 0x4c
 8007226:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800722a:	e9dd 2702 	ldrd	r2, r7, [sp, #8]
 800722e:	f027 4600 	bic.w	r6, r7, #2147483648	; 0x80000000
 8007232:	4689      	mov	r9, r1
 8007234:	ea56 0102 	orrs.w	r1, r6, r2
 8007238:	4680      	mov	r8, r0
 800723a:	d111      	bne.n	8007260 <__ieee754_pow+0x40>
 800723c:	1803      	adds	r3, r0, r0
 800723e:	f489 2200 	eor.w	r2, r9, #524288	; 0x80000
 8007242:	4152      	adcs	r2, r2
 8007244:	4299      	cmp	r1, r3
 8007246:	4b82      	ldr	r3, [pc, #520]	; (8007450 <__ieee754_pow+0x230>)
 8007248:	4193      	sbcs	r3, r2
 800724a:	f080 84b9 	bcs.w	8007bc0 <__ieee754_pow+0x9a0>
 800724e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007252:	4640      	mov	r0, r8
 8007254:	4649      	mov	r1, r9
 8007256:	f7f8 ff81 	bl	800015c <__adddf3>
 800725a:	4683      	mov	fp, r0
 800725c:	468c      	mov	ip, r1
 800725e:	e06f      	b.n	8007340 <__ieee754_pow+0x120>
 8007260:	4b7c      	ldr	r3, [pc, #496]	; (8007454 <__ieee754_pow+0x234>)
 8007262:	f029 4400 	bic.w	r4, r9, #2147483648	; 0x80000000
 8007266:	429c      	cmp	r4, r3
 8007268:	464d      	mov	r5, r9
 800726a:	4682      	mov	sl, r0
 800726c:	dc06      	bgt.n	800727c <__ieee754_pow+0x5c>
 800726e:	d101      	bne.n	8007274 <__ieee754_pow+0x54>
 8007270:	2800      	cmp	r0, #0
 8007272:	d1ec      	bne.n	800724e <__ieee754_pow+0x2e>
 8007274:	429e      	cmp	r6, r3
 8007276:	dc01      	bgt.n	800727c <__ieee754_pow+0x5c>
 8007278:	d10f      	bne.n	800729a <__ieee754_pow+0x7a>
 800727a:	b172      	cbz	r2, 800729a <__ieee754_pow+0x7a>
 800727c:	f105 4540 	add.w	r5, r5, #3221225472	; 0xc0000000
 8007280:	f505 1580 	add.w	r5, r5, #1048576	; 0x100000
 8007284:	ea55 050a 	orrs.w	r5, r5, sl
 8007288:	d1e1      	bne.n	800724e <__ieee754_pow+0x2e>
 800728a:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 800728e:	18db      	adds	r3, r3, r3
 8007290:	f482 2200 	eor.w	r2, r2, #524288	; 0x80000
 8007294:	4152      	adcs	r2, r2
 8007296:	429d      	cmp	r5, r3
 8007298:	e7d5      	b.n	8007246 <__ieee754_pow+0x26>
 800729a:	2d00      	cmp	r5, #0
 800729c:	da39      	bge.n	8007312 <__ieee754_pow+0xf2>
 800729e:	4b6e      	ldr	r3, [pc, #440]	; (8007458 <__ieee754_pow+0x238>)
 80072a0:	429e      	cmp	r6, r3
 80072a2:	dc52      	bgt.n	800734a <__ieee754_pow+0x12a>
 80072a4:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
 80072a8:	429e      	cmp	r6, r3
 80072aa:	f340 849c 	ble.w	8007be6 <__ieee754_pow+0x9c6>
 80072ae:	1533      	asrs	r3, r6, #20
 80072b0:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 80072b4:	2b14      	cmp	r3, #20
 80072b6:	dd0f      	ble.n	80072d8 <__ieee754_pow+0xb8>
 80072b8:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 80072bc:	fa22 f103 	lsr.w	r1, r2, r3
 80072c0:	fa01 f303 	lsl.w	r3, r1, r3
 80072c4:	4293      	cmp	r3, r2
 80072c6:	f040 848e 	bne.w	8007be6 <__ieee754_pow+0x9c6>
 80072ca:	f001 0101 	and.w	r1, r1, #1
 80072ce:	f1c1 0302 	rsb	r3, r1, #2
 80072d2:	9300      	str	r3, [sp, #0]
 80072d4:	b182      	cbz	r2, 80072f8 <__ieee754_pow+0xd8>
 80072d6:	e05d      	b.n	8007394 <__ieee754_pow+0x174>
 80072d8:	2a00      	cmp	r2, #0
 80072da:	d159      	bne.n	8007390 <__ieee754_pow+0x170>
 80072dc:	f1c3 0314 	rsb	r3, r3, #20
 80072e0:	fa46 f103 	asr.w	r1, r6, r3
 80072e4:	fa01 f303 	lsl.w	r3, r1, r3
 80072e8:	42b3      	cmp	r3, r6
 80072ea:	f040 8479 	bne.w	8007be0 <__ieee754_pow+0x9c0>
 80072ee:	f001 0101 	and.w	r1, r1, #1
 80072f2:	f1c1 0302 	rsb	r3, r1, #2
 80072f6:	9300      	str	r3, [sp, #0]
 80072f8:	4b58      	ldr	r3, [pc, #352]	; (800745c <__ieee754_pow+0x23c>)
 80072fa:	429e      	cmp	r6, r3
 80072fc:	d132      	bne.n	8007364 <__ieee754_pow+0x144>
 80072fe:	2f00      	cmp	r7, #0
 8007300:	f280 846a 	bge.w	8007bd8 <__ieee754_pow+0x9b8>
 8007304:	4642      	mov	r2, r8
 8007306:	464b      	mov	r3, r9
 8007308:	2000      	movs	r0, #0
 800730a:	4954      	ldr	r1, [pc, #336]	; (800745c <__ieee754_pow+0x23c>)
 800730c:	f7f9 fa06 	bl	800071c <__aeabi_ddiv>
 8007310:	e7a3      	b.n	800725a <__ieee754_pow+0x3a>
 8007312:	2300      	movs	r3, #0
 8007314:	9300      	str	r3, [sp, #0]
 8007316:	2a00      	cmp	r2, #0
 8007318:	d13c      	bne.n	8007394 <__ieee754_pow+0x174>
 800731a:	4b4e      	ldr	r3, [pc, #312]	; (8007454 <__ieee754_pow+0x234>)
 800731c:	429e      	cmp	r6, r3
 800731e:	d1eb      	bne.n	80072f8 <__ieee754_pow+0xd8>
 8007320:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 8007324:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 8007328:	ea53 030a 	orrs.w	r3, r3, sl
 800732c:	f000 8448 	beq.w	8007bc0 <__ieee754_pow+0x9a0>
 8007330:	4b4b      	ldr	r3, [pc, #300]	; (8007460 <__ieee754_pow+0x240>)
 8007332:	429c      	cmp	r4, r3
 8007334:	dd0b      	ble.n	800734e <__ieee754_pow+0x12e>
 8007336:	2f00      	cmp	r7, #0
 8007338:	f2c0 8448 	blt.w	8007bcc <__ieee754_pow+0x9ac>
 800733c:	e9dd bc02 	ldrd	fp, ip, [sp, #8]
 8007340:	4658      	mov	r0, fp
 8007342:	4661      	mov	r1, ip
 8007344:	b013      	add	sp, #76	; 0x4c
 8007346:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800734a:	2302      	movs	r3, #2
 800734c:	e7e2      	b.n	8007314 <__ieee754_pow+0xf4>
 800734e:	2f00      	cmp	r7, #0
 8007350:	f04f 0b00 	mov.w	fp, #0
 8007354:	f04f 0c00 	mov.w	ip, #0
 8007358:	daf2      	bge.n	8007340 <__ieee754_pow+0x120>
 800735a:	e9dd b302 	ldrd	fp, r3, [sp, #8]
 800735e:	f103 4c00 	add.w	ip, r3, #2147483648	; 0x80000000
 8007362:	e7ed      	b.n	8007340 <__ieee754_pow+0x120>
 8007364:	f1b7 4f80 	cmp.w	r7, #1073741824	; 0x40000000
 8007368:	d106      	bne.n	8007378 <__ieee754_pow+0x158>
 800736a:	4642      	mov	r2, r8
 800736c:	464b      	mov	r3, r9
 800736e:	4640      	mov	r0, r8
 8007370:	4649      	mov	r1, r9
 8007372:	f7f9 f8a9 	bl	80004c8 <__aeabi_dmul>
 8007376:	e770      	b.n	800725a <__ieee754_pow+0x3a>
 8007378:	4b3a      	ldr	r3, [pc, #232]	; (8007464 <__ieee754_pow+0x244>)
 800737a:	429f      	cmp	r7, r3
 800737c:	d10a      	bne.n	8007394 <__ieee754_pow+0x174>
 800737e:	2d00      	cmp	r5, #0
 8007380:	db08      	blt.n	8007394 <__ieee754_pow+0x174>
 8007382:	4640      	mov	r0, r8
 8007384:	4649      	mov	r1, r9
 8007386:	b013      	add	sp, #76	; 0x4c
 8007388:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800738c:	f000 bc5e 	b.w	8007c4c <__ieee754_sqrt>
 8007390:	2300      	movs	r3, #0
 8007392:	9300      	str	r3, [sp, #0]
 8007394:	4640      	mov	r0, r8
 8007396:	4649      	mov	r1, r9
 8007398:	f000 fd34 	bl	8007e04 <fabs>
 800739c:	4683      	mov	fp, r0
 800739e:	468c      	mov	ip, r1
 80073a0:	f1ba 0f00 	cmp.w	sl, #0
 80073a4:	d128      	bne.n	80073f8 <__ieee754_pow+0x1d8>
 80073a6:	b124      	cbz	r4, 80073b2 <__ieee754_pow+0x192>
 80073a8:	4b2c      	ldr	r3, [pc, #176]	; (800745c <__ieee754_pow+0x23c>)
 80073aa:	f025 4240 	bic.w	r2, r5, #3221225472	; 0xc0000000
 80073ae:	429a      	cmp	r2, r3
 80073b0:	d122      	bne.n	80073f8 <__ieee754_pow+0x1d8>
 80073b2:	2f00      	cmp	r7, #0
 80073b4:	da07      	bge.n	80073c6 <__ieee754_pow+0x1a6>
 80073b6:	465a      	mov	r2, fp
 80073b8:	4663      	mov	r3, ip
 80073ba:	2000      	movs	r0, #0
 80073bc:	4927      	ldr	r1, [pc, #156]	; (800745c <__ieee754_pow+0x23c>)
 80073be:	f7f9 f9ad 	bl	800071c <__aeabi_ddiv>
 80073c2:	4683      	mov	fp, r0
 80073c4:	468c      	mov	ip, r1
 80073c6:	2d00      	cmp	r5, #0
 80073c8:	daba      	bge.n	8007340 <__ieee754_pow+0x120>
 80073ca:	9b00      	ldr	r3, [sp, #0]
 80073cc:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 80073d0:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 80073d4:	4323      	orrs	r3, r4
 80073d6:	d108      	bne.n	80073ea <__ieee754_pow+0x1ca>
 80073d8:	465a      	mov	r2, fp
 80073da:	4663      	mov	r3, ip
 80073dc:	4658      	mov	r0, fp
 80073de:	4661      	mov	r1, ip
 80073e0:	f7f8 feba 	bl	8000158 <__aeabi_dsub>
 80073e4:	4602      	mov	r2, r0
 80073e6:	460b      	mov	r3, r1
 80073e8:	e790      	b.n	800730c <__ieee754_pow+0xec>
 80073ea:	9b00      	ldr	r3, [sp, #0]
 80073ec:	2b01      	cmp	r3, #1
 80073ee:	d1a7      	bne.n	8007340 <__ieee754_pow+0x120>
 80073f0:	f10c 4300 	add.w	r3, ip, #2147483648	; 0x80000000
 80073f4:	469c      	mov	ip, r3
 80073f6:	e7a3      	b.n	8007340 <__ieee754_pow+0x120>
 80073f8:	0feb      	lsrs	r3, r5, #31
 80073fa:	3b01      	subs	r3, #1
 80073fc:	930c      	str	r3, [sp, #48]	; 0x30
 80073fe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007400:	9b00      	ldr	r3, [sp, #0]
 8007402:	4313      	orrs	r3, r2
 8007404:	d104      	bne.n	8007410 <__ieee754_pow+0x1f0>
 8007406:	4642      	mov	r2, r8
 8007408:	464b      	mov	r3, r9
 800740a:	4640      	mov	r0, r8
 800740c:	4649      	mov	r1, r9
 800740e:	e7e7      	b.n	80073e0 <__ieee754_pow+0x1c0>
 8007410:	4b15      	ldr	r3, [pc, #84]	; (8007468 <__ieee754_pow+0x248>)
 8007412:	429e      	cmp	r6, r3
 8007414:	f340 80f6 	ble.w	8007604 <__ieee754_pow+0x3e4>
 8007418:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 800741c:	429e      	cmp	r6, r3
 800741e:	4b10      	ldr	r3, [pc, #64]	; (8007460 <__ieee754_pow+0x240>)
 8007420:	dd09      	ble.n	8007436 <__ieee754_pow+0x216>
 8007422:	429c      	cmp	r4, r3
 8007424:	dc0c      	bgt.n	8007440 <__ieee754_pow+0x220>
 8007426:	2f00      	cmp	r7, #0
 8007428:	da0c      	bge.n	8007444 <__ieee754_pow+0x224>
 800742a:	2000      	movs	r0, #0
 800742c:	b013      	add	sp, #76	; 0x4c
 800742e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007432:	f000 bce2 	b.w	8007dfa <__math_oflow>
 8007436:	429c      	cmp	r4, r3
 8007438:	dbf5      	blt.n	8007426 <__ieee754_pow+0x206>
 800743a:	4b08      	ldr	r3, [pc, #32]	; (800745c <__ieee754_pow+0x23c>)
 800743c:	429c      	cmp	r4, r3
 800743e:	dd15      	ble.n	800746c <__ieee754_pow+0x24c>
 8007440:	2f00      	cmp	r7, #0
 8007442:	dcf2      	bgt.n	800742a <__ieee754_pow+0x20a>
 8007444:	2000      	movs	r0, #0
 8007446:	b013      	add	sp, #76	; 0x4c
 8007448:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800744c:	f000 bcd0 	b.w	8007df0 <__math_uflow>
 8007450:	fff00000 	.word	0xfff00000
 8007454:	7ff00000 	.word	0x7ff00000
 8007458:	433fffff 	.word	0x433fffff
 800745c:	3ff00000 	.word	0x3ff00000
 8007460:	3fefffff 	.word	0x3fefffff
 8007464:	3fe00000 	.word	0x3fe00000
 8007468:	41e00000 	.word	0x41e00000
 800746c:	4661      	mov	r1, ip
 800746e:	2200      	movs	r2, #0
 8007470:	4658      	mov	r0, fp
 8007472:	4b5f      	ldr	r3, [pc, #380]	; (80075f0 <__ieee754_pow+0x3d0>)
 8007474:	f7f8 fe70 	bl	8000158 <__aeabi_dsub>
 8007478:	a355      	add	r3, pc, #340	; (adr r3, 80075d0 <__ieee754_pow+0x3b0>)
 800747a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800747e:	4604      	mov	r4, r0
 8007480:	460d      	mov	r5, r1
 8007482:	f7f9 f821 	bl	80004c8 <__aeabi_dmul>
 8007486:	a354      	add	r3, pc, #336	; (adr r3, 80075d8 <__ieee754_pow+0x3b8>)
 8007488:	e9d3 2300 	ldrd	r2, r3, [r3]
 800748c:	4606      	mov	r6, r0
 800748e:	460f      	mov	r7, r1
 8007490:	4620      	mov	r0, r4
 8007492:	4629      	mov	r1, r5
 8007494:	f7f9 f818 	bl	80004c8 <__aeabi_dmul>
 8007498:	2200      	movs	r2, #0
 800749a:	4682      	mov	sl, r0
 800749c:	468b      	mov	fp, r1
 800749e:	4620      	mov	r0, r4
 80074a0:	4629      	mov	r1, r5
 80074a2:	4b54      	ldr	r3, [pc, #336]	; (80075f4 <__ieee754_pow+0x3d4>)
 80074a4:	f7f9 f810 	bl	80004c8 <__aeabi_dmul>
 80074a8:	4602      	mov	r2, r0
 80074aa:	460b      	mov	r3, r1
 80074ac:	a14c      	add	r1, pc, #304	; (adr r1, 80075e0 <__ieee754_pow+0x3c0>)
 80074ae:	e9d1 0100 	ldrd	r0, r1, [r1]
 80074b2:	f7f8 fe51 	bl	8000158 <__aeabi_dsub>
 80074b6:	4622      	mov	r2, r4
 80074b8:	462b      	mov	r3, r5
 80074ba:	f7f9 f805 	bl	80004c8 <__aeabi_dmul>
 80074be:	4602      	mov	r2, r0
 80074c0:	460b      	mov	r3, r1
 80074c2:	2000      	movs	r0, #0
 80074c4:	494c      	ldr	r1, [pc, #304]	; (80075f8 <__ieee754_pow+0x3d8>)
 80074c6:	f7f8 fe47 	bl	8000158 <__aeabi_dsub>
 80074ca:	4622      	mov	r2, r4
 80074cc:	462b      	mov	r3, r5
 80074ce:	4680      	mov	r8, r0
 80074d0:	4689      	mov	r9, r1
 80074d2:	4620      	mov	r0, r4
 80074d4:	4629      	mov	r1, r5
 80074d6:	f7f8 fff7 	bl	80004c8 <__aeabi_dmul>
 80074da:	4602      	mov	r2, r0
 80074dc:	460b      	mov	r3, r1
 80074de:	4640      	mov	r0, r8
 80074e0:	4649      	mov	r1, r9
 80074e2:	f7f8 fff1 	bl	80004c8 <__aeabi_dmul>
 80074e6:	a340      	add	r3, pc, #256	; (adr r3, 80075e8 <__ieee754_pow+0x3c8>)
 80074e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80074ec:	f7f8 ffec 	bl	80004c8 <__aeabi_dmul>
 80074f0:	4602      	mov	r2, r0
 80074f2:	460b      	mov	r3, r1
 80074f4:	4650      	mov	r0, sl
 80074f6:	4659      	mov	r1, fp
 80074f8:	f7f8 fe2e 	bl	8000158 <__aeabi_dsub>
 80074fc:	f04f 0a00 	mov.w	sl, #0
 8007500:	4602      	mov	r2, r0
 8007502:	460b      	mov	r3, r1
 8007504:	4604      	mov	r4, r0
 8007506:	460d      	mov	r5, r1
 8007508:	4630      	mov	r0, r6
 800750a:	4639      	mov	r1, r7
 800750c:	f7f8 fe26 	bl	800015c <__adddf3>
 8007510:	4632      	mov	r2, r6
 8007512:	463b      	mov	r3, r7
 8007514:	4650      	mov	r0, sl
 8007516:	468b      	mov	fp, r1
 8007518:	f7f8 fe1e 	bl	8000158 <__aeabi_dsub>
 800751c:	4602      	mov	r2, r0
 800751e:	460b      	mov	r3, r1
 8007520:	4620      	mov	r0, r4
 8007522:	4629      	mov	r1, r5
 8007524:	f7f8 fe18 	bl	8000158 <__aeabi_dsub>
 8007528:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 800752c:	9b00      	ldr	r3, [sp, #0]
 800752e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007530:	3b01      	subs	r3, #1
 8007532:	4313      	orrs	r3, r2
 8007534:	f04f 0600 	mov.w	r6, #0
 8007538:	f04f 0200 	mov.w	r2, #0
 800753c:	bf0c      	ite	eq
 800753e:	4b2f      	ldreq	r3, [pc, #188]	; (80075fc <__ieee754_pow+0x3dc>)
 8007540:	4b2b      	ldrne	r3, [pc, #172]	; (80075f0 <__ieee754_pow+0x3d0>)
 8007542:	4604      	mov	r4, r0
 8007544:	460d      	mov	r5, r1
 8007546:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800754a:	e9cd 2300 	strd	r2, r3, [sp]
 800754e:	4632      	mov	r2, r6
 8007550:	463b      	mov	r3, r7
 8007552:	f7f8 fe01 	bl	8000158 <__aeabi_dsub>
 8007556:	4652      	mov	r2, sl
 8007558:	465b      	mov	r3, fp
 800755a:	f7f8 ffb5 	bl	80004c8 <__aeabi_dmul>
 800755e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007562:	4680      	mov	r8, r0
 8007564:	4689      	mov	r9, r1
 8007566:	4620      	mov	r0, r4
 8007568:	4629      	mov	r1, r5
 800756a:	f7f8 ffad 	bl	80004c8 <__aeabi_dmul>
 800756e:	4602      	mov	r2, r0
 8007570:	460b      	mov	r3, r1
 8007572:	4640      	mov	r0, r8
 8007574:	4649      	mov	r1, r9
 8007576:	f7f8 fdf1 	bl	800015c <__adddf3>
 800757a:	4632      	mov	r2, r6
 800757c:	463b      	mov	r3, r7
 800757e:	4680      	mov	r8, r0
 8007580:	4689      	mov	r9, r1
 8007582:	4650      	mov	r0, sl
 8007584:	4659      	mov	r1, fp
 8007586:	f7f8 ff9f 	bl	80004c8 <__aeabi_dmul>
 800758a:	4604      	mov	r4, r0
 800758c:	460d      	mov	r5, r1
 800758e:	460b      	mov	r3, r1
 8007590:	4602      	mov	r2, r0
 8007592:	4649      	mov	r1, r9
 8007594:	4640      	mov	r0, r8
 8007596:	e9cd 4502 	strd	r4, r5, [sp, #8]
 800759a:	f7f8 fddf 	bl	800015c <__adddf3>
 800759e:	4b18      	ldr	r3, [pc, #96]	; (8007600 <__ieee754_pow+0x3e0>)
 80075a0:	4682      	mov	sl, r0
 80075a2:	4299      	cmp	r1, r3
 80075a4:	460f      	mov	r7, r1
 80075a6:	460e      	mov	r6, r1
 80075a8:	f340 82e5 	ble.w	8007b76 <__ieee754_pow+0x956>
 80075ac:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 80075b0:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 80075b4:	4303      	orrs	r3, r0
 80075b6:	f000 81df 	beq.w	8007978 <__ieee754_pow+0x758>
 80075ba:	e9dd 0100 	ldrd	r0, r1, [sp]
 80075be:	2200      	movs	r2, #0
 80075c0:	2300      	movs	r3, #0
 80075c2:	f7f9 f9f3 	bl	80009ac <__aeabi_dcmplt>
 80075c6:	3800      	subs	r0, #0
 80075c8:	bf18      	it	ne
 80075ca:	2001      	movne	r0, #1
 80075cc:	e72e      	b.n	800742c <__ieee754_pow+0x20c>
 80075ce:	bf00      	nop
 80075d0:	60000000 	.word	0x60000000
 80075d4:	3ff71547 	.word	0x3ff71547
 80075d8:	f85ddf44 	.word	0xf85ddf44
 80075dc:	3e54ae0b 	.word	0x3e54ae0b
 80075e0:	55555555 	.word	0x55555555
 80075e4:	3fd55555 	.word	0x3fd55555
 80075e8:	652b82fe 	.word	0x652b82fe
 80075ec:	3ff71547 	.word	0x3ff71547
 80075f0:	3ff00000 	.word	0x3ff00000
 80075f4:	3fd00000 	.word	0x3fd00000
 80075f8:	3fe00000 	.word	0x3fe00000
 80075fc:	bff00000 	.word	0xbff00000
 8007600:	408fffff 	.word	0x408fffff
 8007604:	4bd2      	ldr	r3, [pc, #840]	; (8007950 <__ieee754_pow+0x730>)
 8007606:	2200      	movs	r2, #0
 8007608:	402b      	ands	r3, r5
 800760a:	b943      	cbnz	r3, 800761e <__ieee754_pow+0x3fe>
 800760c:	4658      	mov	r0, fp
 800760e:	4661      	mov	r1, ip
 8007610:	4bd0      	ldr	r3, [pc, #832]	; (8007954 <__ieee754_pow+0x734>)
 8007612:	f7f8 ff59 	bl	80004c8 <__aeabi_dmul>
 8007616:	f06f 0234 	mvn.w	r2, #52	; 0x34
 800761a:	4683      	mov	fp, r0
 800761c:	460c      	mov	r4, r1
 800761e:	1523      	asrs	r3, r4, #20
 8007620:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 8007624:	4413      	add	r3, r2
 8007626:	930b      	str	r3, [sp, #44]	; 0x2c
 8007628:	4bcb      	ldr	r3, [pc, #812]	; (8007958 <__ieee754_pow+0x738>)
 800762a:	f3c4 0413 	ubfx	r4, r4, #0, #20
 800762e:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 8007632:	429c      	cmp	r4, r3
 8007634:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 8007638:	dd08      	ble.n	800764c <__ieee754_pow+0x42c>
 800763a:	4bc8      	ldr	r3, [pc, #800]	; (800795c <__ieee754_pow+0x73c>)
 800763c:	429c      	cmp	r4, r3
 800763e:	f340 8199 	ble.w	8007974 <__ieee754_pow+0x754>
 8007642:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007644:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 8007648:	3301      	adds	r3, #1
 800764a:	930b      	str	r3, [sp, #44]	; 0x2c
 800764c:	2600      	movs	r6, #0
 800764e:	00f3      	lsls	r3, r6, #3
 8007650:	930d      	str	r3, [sp, #52]	; 0x34
 8007652:	4bc3      	ldr	r3, [pc, #780]	; (8007960 <__ieee754_pow+0x740>)
 8007654:	4658      	mov	r0, fp
 8007656:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800765a:	e9d3 3400 	ldrd	r3, r4, [r3]
 800765e:	4629      	mov	r1, r5
 8007660:	461a      	mov	r2, r3
 8007662:	e9cd 3408 	strd	r3, r4, [sp, #32]
 8007666:	4623      	mov	r3, r4
 8007668:	f7f8 fd76 	bl	8000158 <__aeabi_dsub>
 800766c:	46da      	mov	sl, fp
 800766e:	462b      	mov	r3, r5
 8007670:	4652      	mov	r2, sl
 8007672:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
 8007676:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800767a:	f7f8 fd6f 	bl	800015c <__adddf3>
 800767e:	4602      	mov	r2, r0
 8007680:	460b      	mov	r3, r1
 8007682:	2000      	movs	r0, #0
 8007684:	49b7      	ldr	r1, [pc, #732]	; (8007964 <__ieee754_pow+0x744>)
 8007686:	f7f9 f849 	bl	800071c <__aeabi_ddiv>
 800768a:	4602      	mov	r2, r0
 800768c:	460b      	mov	r3, r1
 800768e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8007692:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8007696:	f7f8 ff17 	bl	80004c8 <__aeabi_dmul>
 800769a:	e9cd 0106 	strd	r0, r1, [sp, #24]
 800769e:	e9dd 3406 	ldrd	r3, r4, [sp, #24]
 80076a2:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80076a6:	2300      	movs	r3, #0
 80076a8:	2200      	movs	r2, #0
 80076aa:	46ab      	mov	fp, r5
 80076ac:	106d      	asrs	r5, r5, #1
 80076ae:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 80076b2:	9304      	str	r3, [sp, #16]
 80076b4:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 80076b8:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 80076bc:	eb05 4386 	add.w	r3, r5, r6, lsl #18
 80076c0:	4640      	mov	r0, r8
 80076c2:	4649      	mov	r1, r9
 80076c4:	4614      	mov	r4, r2
 80076c6:	461d      	mov	r5, r3
 80076c8:	f7f8 fefe 	bl	80004c8 <__aeabi_dmul>
 80076cc:	4602      	mov	r2, r0
 80076ce:	460b      	mov	r3, r1
 80076d0:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80076d4:	f7f8 fd40 	bl	8000158 <__aeabi_dsub>
 80076d8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80076dc:	4606      	mov	r6, r0
 80076de:	460f      	mov	r7, r1
 80076e0:	4620      	mov	r0, r4
 80076e2:	4629      	mov	r1, r5
 80076e4:	f7f8 fd38 	bl	8000158 <__aeabi_dsub>
 80076e8:	4602      	mov	r2, r0
 80076ea:	460b      	mov	r3, r1
 80076ec:	4650      	mov	r0, sl
 80076ee:	4659      	mov	r1, fp
 80076f0:	f7f8 fd32 	bl	8000158 <__aeabi_dsub>
 80076f4:	4642      	mov	r2, r8
 80076f6:	464b      	mov	r3, r9
 80076f8:	f7f8 fee6 	bl	80004c8 <__aeabi_dmul>
 80076fc:	4602      	mov	r2, r0
 80076fe:	460b      	mov	r3, r1
 8007700:	4630      	mov	r0, r6
 8007702:	4639      	mov	r1, r7
 8007704:	f7f8 fd28 	bl	8000158 <__aeabi_dsub>
 8007708:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800770c:	f7f8 fedc 	bl	80004c8 <__aeabi_dmul>
 8007710:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8007714:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8007718:	4610      	mov	r0, r2
 800771a:	4619      	mov	r1, r3
 800771c:	f7f8 fed4 	bl	80004c8 <__aeabi_dmul>
 8007720:	a379      	add	r3, pc, #484	; (adr r3, 8007908 <__ieee754_pow+0x6e8>)
 8007722:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007726:	4604      	mov	r4, r0
 8007728:	460d      	mov	r5, r1
 800772a:	f7f8 fecd 	bl	80004c8 <__aeabi_dmul>
 800772e:	a378      	add	r3, pc, #480	; (adr r3, 8007910 <__ieee754_pow+0x6f0>)
 8007730:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007734:	f7f8 fd12 	bl	800015c <__adddf3>
 8007738:	4622      	mov	r2, r4
 800773a:	462b      	mov	r3, r5
 800773c:	f7f8 fec4 	bl	80004c8 <__aeabi_dmul>
 8007740:	a375      	add	r3, pc, #468	; (adr r3, 8007918 <__ieee754_pow+0x6f8>)
 8007742:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007746:	f7f8 fd09 	bl	800015c <__adddf3>
 800774a:	4622      	mov	r2, r4
 800774c:	462b      	mov	r3, r5
 800774e:	f7f8 febb 	bl	80004c8 <__aeabi_dmul>
 8007752:	a373      	add	r3, pc, #460	; (adr r3, 8007920 <__ieee754_pow+0x700>)
 8007754:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007758:	f7f8 fd00 	bl	800015c <__adddf3>
 800775c:	4622      	mov	r2, r4
 800775e:	462b      	mov	r3, r5
 8007760:	f7f8 feb2 	bl	80004c8 <__aeabi_dmul>
 8007764:	a370      	add	r3, pc, #448	; (adr r3, 8007928 <__ieee754_pow+0x708>)
 8007766:	e9d3 2300 	ldrd	r2, r3, [r3]
 800776a:	f7f8 fcf7 	bl	800015c <__adddf3>
 800776e:	4622      	mov	r2, r4
 8007770:	462b      	mov	r3, r5
 8007772:	f7f8 fea9 	bl	80004c8 <__aeabi_dmul>
 8007776:	a36e      	add	r3, pc, #440	; (adr r3, 8007930 <__ieee754_pow+0x710>)
 8007778:	e9d3 2300 	ldrd	r2, r3, [r3]
 800777c:	f7f8 fcee 	bl	800015c <__adddf3>
 8007780:	4622      	mov	r2, r4
 8007782:	4606      	mov	r6, r0
 8007784:	460f      	mov	r7, r1
 8007786:	462b      	mov	r3, r5
 8007788:	4620      	mov	r0, r4
 800778a:	4629      	mov	r1, r5
 800778c:	f7f8 fe9c 	bl	80004c8 <__aeabi_dmul>
 8007790:	4602      	mov	r2, r0
 8007792:	460b      	mov	r3, r1
 8007794:	4630      	mov	r0, r6
 8007796:	4639      	mov	r1, r7
 8007798:	f7f8 fe96 	bl	80004c8 <__aeabi_dmul>
 800779c:	4604      	mov	r4, r0
 800779e:	460d      	mov	r5, r1
 80077a0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80077a4:	4642      	mov	r2, r8
 80077a6:	464b      	mov	r3, r9
 80077a8:	f7f8 fcd8 	bl	800015c <__adddf3>
 80077ac:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80077b0:	f7f8 fe8a 	bl	80004c8 <__aeabi_dmul>
 80077b4:	4622      	mov	r2, r4
 80077b6:	462b      	mov	r3, r5
 80077b8:	f7f8 fcd0 	bl	800015c <__adddf3>
 80077bc:	4642      	mov	r2, r8
 80077be:	4606      	mov	r6, r0
 80077c0:	460f      	mov	r7, r1
 80077c2:	464b      	mov	r3, r9
 80077c4:	4640      	mov	r0, r8
 80077c6:	4649      	mov	r1, r9
 80077c8:	f7f8 fe7e 	bl	80004c8 <__aeabi_dmul>
 80077cc:	2200      	movs	r2, #0
 80077ce:	4b66      	ldr	r3, [pc, #408]	; (8007968 <__ieee754_pow+0x748>)
 80077d0:	4682      	mov	sl, r0
 80077d2:	468b      	mov	fp, r1
 80077d4:	f7f8 fcc2 	bl	800015c <__adddf3>
 80077d8:	4632      	mov	r2, r6
 80077da:	463b      	mov	r3, r7
 80077dc:	f7f8 fcbe 	bl	800015c <__adddf3>
 80077e0:	2400      	movs	r4, #0
 80077e2:	460d      	mov	r5, r1
 80077e4:	4622      	mov	r2, r4
 80077e6:	460b      	mov	r3, r1
 80077e8:	4640      	mov	r0, r8
 80077ea:	4649      	mov	r1, r9
 80077ec:	f7f8 fe6c 	bl	80004c8 <__aeabi_dmul>
 80077f0:	2200      	movs	r2, #0
 80077f2:	4680      	mov	r8, r0
 80077f4:	4689      	mov	r9, r1
 80077f6:	4620      	mov	r0, r4
 80077f8:	4629      	mov	r1, r5
 80077fa:	4b5b      	ldr	r3, [pc, #364]	; (8007968 <__ieee754_pow+0x748>)
 80077fc:	f7f8 fcac 	bl	8000158 <__aeabi_dsub>
 8007800:	4652      	mov	r2, sl
 8007802:	465b      	mov	r3, fp
 8007804:	f7f8 fca8 	bl	8000158 <__aeabi_dsub>
 8007808:	4602      	mov	r2, r0
 800780a:	460b      	mov	r3, r1
 800780c:	4630      	mov	r0, r6
 800780e:	4639      	mov	r1, r7
 8007810:	f7f8 fca2 	bl	8000158 <__aeabi_dsub>
 8007814:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8007818:	f7f8 fe56 	bl	80004c8 <__aeabi_dmul>
 800781c:	4622      	mov	r2, r4
 800781e:	4606      	mov	r6, r0
 8007820:	460f      	mov	r7, r1
 8007822:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8007826:	462b      	mov	r3, r5
 8007828:	f7f8 fe4e 	bl	80004c8 <__aeabi_dmul>
 800782c:	4602      	mov	r2, r0
 800782e:	460b      	mov	r3, r1
 8007830:	4630      	mov	r0, r6
 8007832:	4639      	mov	r1, r7
 8007834:	f7f8 fc92 	bl	800015c <__adddf3>
 8007838:	2400      	movs	r4, #0
 800783a:	4606      	mov	r6, r0
 800783c:	460f      	mov	r7, r1
 800783e:	4602      	mov	r2, r0
 8007840:	460b      	mov	r3, r1
 8007842:	4640      	mov	r0, r8
 8007844:	4649      	mov	r1, r9
 8007846:	f7f8 fc89 	bl	800015c <__adddf3>
 800784a:	a33b      	add	r3, pc, #236	; (adr r3, 8007938 <__ieee754_pow+0x718>)
 800784c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007850:	4620      	mov	r0, r4
 8007852:	460d      	mov	r5, r1
 8007854:	f7f8 fe38 	bl	80004c8 <__aeabi_dmul>
 8007858:	4642      	mov	r2, r8
 800785a:	464b      	mov	r3, r9
 800785c:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8007860:	4620      	mov	r0, r4
 8007862:	4629      	mov	r1, r5
 8007864:	f7f8 fc78 	bl	8000158 <__aeabi_dsub>
 8007868:	4602      	mov	r2, r0
 800786a:	460b      	mov	r3, r1
 800786c:	4630      	mov	r0, r6
 800786e:	4639      	mov	r1, r7
 8007870:	f7f8 fc72 	bl	8000158 <__aeabi_dsub>
 8007874:	a332      	add	r3, pc, #200	; (adr r3, 8007940 <__ieee754_pow+0x720>)
 8007876:	e9d3 2300 	ldrd	r2, r3, [r3]
 800787a:	f7f8 fe25 	bl	80004c8 <__aeabi_dmul>
 800787e:	a332      	add	r3, pc, #200	; (adr r3, 8007948 <__ieee754_pow+0x728>)
 8007880:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007884:	4606      	mov	r6, r0
 8007886:	460f      	mov	r7, r1
 8007888:	4620      	mov	r0, r4
 800788a:	4629      	mov	r1, r5
 800788c:	f7f8 fe1c 	bl	80004c8 <__aeabi_dmul>
 8007890:	4602      	mov	r2, r0
 8007892:	460b      	mov	r3, r1
 8007894:	4630      	mov	r0, r6
 8007896:	4639      	mov	r1, r7
 8007898:	f7f8 fc60 	bl	800015c <__adddf3>
 800789c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800789e:	4b33      	ldr	r3, [pc, #204]	; (800796c <__ieee754_pow+0x74c>)
 80078a0:	f04f 0a00 	mov.w	sl, #0
 80078a4:	4413      	add	r3, r2
 80078a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80078aa:	f7f8 fc57 	bl	800015c <__adddf3>
 80078ae:	4680      	mov	r8, r0
 80078b0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80078b2:	4689      	mov	r9, r1
 80078b4:	f7f8 fd9e 	bl	80003f4 <__aeabi_i2d>
 80078b8:	4604      	mov	r4, r0
 80078ba:	460d      	mov	r5, r1
 80078bc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80078be:	4b2c      	ldr	r3, [pc, #176]	; (8007970 <__ieee754_pow+0x750>)
 80078c0:	4413      	add	r3, r2
 80078c2:	e9d3 6700 	ldrd	r6, r7, [r3]
 80078c6:	4642      	mov	r2, r8
 80078c8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80078cc:	464b      	mov	r3, r9
 80078ce:	f7f8 fc45 	bl	800015c <__adddf3>
 80078d2:	4632      	mov	r2, r6
 80078d4:	463b      	mov	r3, r7
 80078d6:	f7f8 fc41 	bl	800015c <__adddf3>
 80078da:	4622      	mov	r2, r4
 80078dc:	462b      	mov	r3, r5
 80078de:	f7f8 fc3d 	bl	800015c <__adddf3>
 80078e2:	4622      	mov	r2, r4
 80078e4:	462b      	mov	r3, r5
 80078e6:	4650      	mov	r0, sl
 80078e8:	468b      	mov	fp, r1
 80078ea:	f7f8 fc35 	bl	8000158 <__aeabi_dsub>
 80078ee:	4632      	mov	r2, r6
 80078f0:	463b      	mov	r3, r7
 80078f2:	f7f8 fc31 	bl	8000158 <__aeabi_dsub>
 80078f6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80078fa:	f7f8 fc2d 	bl	8000158 <__aeabi_dsub>
 80078fe:	4602      	mov	r2, r0
 8007900:	460b      	mov	r3, r1
 8007902:	4640      	mov	r0, r8
 8007904:	4649      	mov	r1, r9
 8007906:	e60d      	b.n	8007524 <__ieee754_pow+0x304>
 8007908:	4a454eef 	.word	0x4a454eef
 800790c:	3fca7e28 	.word	0x3fca7e28
 8007910:	93c9db65 	.word	0x93c9db65
 8007914:	3fcd864a 	.word	0x3fcd864a
 8007918:	a91d4101 	.word	0xa91d4101
 800791c:	3fd17460 	.word	0x3fd17460
 8007920:	518f264d 	.word	0x518f264d
 8007924:	3fd55555 	.word	0x3fd55555
 8007928:	db6fabff 	.word	0xdb6fabff
 800792c:	3fdb6db6 	.word	0x3fdb6db6
 8007930:	33333303 	.word	0x33333303
 8007934:	3fe33333 	.word	0x3fe33333
 8007938:	e0000000 	.word	0xe0000000
 800793c:	3feec709 	.word	0x3feec709
 8007940:	dc3a03fd 	.word	0xdc3a03fd
 8007944:	3feec709 	.word	0x3feec709
 8007948:	145b01f5 	.word	0x145b01f5
 800794c:	be3e2fe0 	.word	0xbe3e2fe0
 8007950:	7ff00000 	.word	0x7ff00000
 8007954:	43400000 	.word	0x43400000
 8007958:	0003988e 	.word	0x0003988e
 800795c:	000bb679 	.word	0x000bb679
 8007960:	08007fb8 	.word	0x08007fb8
 8007964:	3ff00000 	.word	0x3ff00000
 8007968:	40080000 	.word	0x40080000
 800796c:	08007fd8 	.word	0x08007fd8
 8007970:	08007fc8 	.word	0x08007fc8
 8007974:	2601      	movs	r6, #1
 8007976:	e66a      	b.n	800764e <__ieee754_pow+0x42e>
 8007978:	a39d      	add	r3, pc, #628	; (adr r3, 8007bf0 <__ieee754_pow+0x9d0>)
 800797a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800797e:	4640      	mov	r0, r8
 8007980:	4649      	mov	r1, r9
 8007982:	f7f8 fbeb 	bl	800015c <__adddf3>
 8007986:	4622      	mov	r2, r4
 8007988:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800798c:	462b      	mov	r3, r5
 800798e:	4650      	mov	r0, sl
 8007990:	4639      	mov	r1, r7
 8007992:	f7f8 fbe1 	bl	8000158 <__aeabi_dsub>
 8007996:	4602      	mov	r2, r0
 8007998:	460b      	mov	r3, r1
 800799a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800799e:	f7f9 f823 	bl	80009e8 <__aeabi_dcmpgt>
 80079a2:	2800      	cmp	r0, #0
 80079a4:	f47f ae09 	bne.w	80075ba <__ieee754_pow+0x39a>
 80079a8:	4aa3      	ldr	r2, [pc, #652]	; (8007c38 <__ieee754_pow+0xa18>)
 80079aa:	f026 4300 	bic.w	r3, r6, #2147483648	; 0x80000000
 80079ae:	4293      	cmp	r3, r2
 80079b0:	f340 8101 	ble.w	8007bb6 <__ieee754_pow+0x996>
 80079b4:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 80079b8:	2000      	movs	r0, #0
 80079ba:	151b      	asrs	r3, r3, #20
 80079bc:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 80079c0:	fa4a f303 	asr.w	r3, sl, r3
 80079c4:	4433      	add	r3, r6
 80079c6:	f3c3 520a 	ubfx	r2, r3, #20, #11
 80079ca:	4f9c      	ldr	r7, [pc, #624]	; (8007c3c <__ieee754_pow+0xa1c>)
 80079cc:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 80079d0:	4117      	asrs	r7, r2
 80079d2:	f3c3 0a13 	ubfx	sl, r3, #0, #20
 80079d6:	ea23 0107 	bic.w	r1, r3, r7
 80079da:	f1c2 0214 	rsb	r2, r2, #20
 80079de:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 80079e2:	460b      	mov	r3, r1
 80079e4:	fa4a fa02 	asr.w	sl, sl, r2
 80079e8:	2e00      	cmp	r6, #0
 80079ea:	4602      	mov	r2, r0
 80079ec:	4629      	mov	r1, r5
 80079ee:	4620      	mov	r0, r4
 80079f0:	bfb8      	it	lt
 80079f2:	f1ca 0a00 	rsblt	sl, sl, #0
 80079f6:	f7f8 fbaf 	bl	8000158 <__aeabi_dsub>
 80079fa:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80079fe:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8007a02:	2400      	movs	r4, #0
 8007a04:	4642      	mov	r2, r8
 8007a06:	464b      	mov	r3, r9
 8007a08:	f7f8 fba8 	bl	800015c <__adddf3>
 8007a0c:	a37a      	add	r3, pc, #488	; (adr r3, 8007bf8 <__ieee754_pow+0x9d8>)
 8007a0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a12:	4620      	mov	r0, r4
 8007a14:	460d      	mov	r5, r1
 8007a16:	f7f8 fd57 	bl	80004c8 <__aeabi_dmul>
 8007a1a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007a1e:	4606      	mov	r6, r0
 8007a20:	460f      	mov	r7, r1
 8007a22:	4620      	mov	r0, r4
 8007a24:	4629      	mov	r1, r5
 8007a26:	f7f8 fb97 	bl	8000158 <__aeabi_dsub>
 8007a2a:	4602      	mov	r2, r0
 8007a2c:	460b      	mov	r3, r1
 8007a2e:	4640      	mov	r0, r8
 8007a30:	4649      	mov	r1, r9
 8007a32:	f7f8 fb91 	bl	8000158 <__aeabi_dsub>
 8007a36:	a372      	add	r3, pc, #456	; (adr r3, 8007c00 <__ieee754_pow+0x9e0>)
 8007a38:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a3c:	f7f8 fd44 	bl	80004c8 <__aeabi_dmul>
 8007a40:	a371      	add	r3, pc, #452	; (adr r3, 8007c08 <__ieee754_pow+0x9e8>)
 8007a42:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a46:	4680      	mov	r8, r0
 8007a48:	4689      	mov	r9, r1
 8007a4a:	4620      	mov	r0, r4
 8007a4c:	4629      	mov	r1, r5
 8007a4e:	f7f8 fd3b 	bl	80004c8 <__aeabi_dmul>
 8007a52:	4602      	mov	r2, r0
 8007a54:	460b      	mov	r3, r1
 8007a56:	4640      	mov	r0, r8
 8007a58:	4649      	mov	r1, r9
 8007a5a:	f7f8 fb7f 	bl	800015c <__adddf3>
 8007a5e:	4604      	mov	r4, r0
 8007a60:	460d      	mov	r5, r1
 8007a62:	4602      	mov	r2, r0
 8007a64:	460b      	mov	r3, r1
 8007a66:	4630      	mov	r0, r6
 8007a68:	4639      	mov	r1, r7
 8007a6a:	f7f8 fb77 	bl	800015c <__adddf3>
 8007a6e:	4632      	mov	r2, r6
 8007a70:	463b      	mov	r3, r7
 8007a72:	4680      	mov	r8, r0
 8007a74:	4689      	mov	r9, r1
 8007a76:	f7f8 fb6f 	bl	8000158 <__aeabi_dsub>
 8007a7a:	4602      	mov	r2, r0
 8007a7c:	460b      	mov	r3, r1
 8007a7e:	4620      	mov	r0, r4
 8007a80:	4629      	mov	r1, r5
 8007a82:	f7f8 fb69 	bl	8000158 <__aeabi_dsub>
 8007a86:	4642      	mov	r2, r8
 8007a88:	4606      	mov	r6, r0
 8007a8a:	460f      	mov	r7, r1
 8007a8c:	464b      	mov	r3, r9
 8007a8e:	4640      	mov	r0, r8
 8007a90:	4649      	mov	r1, r9
 8007a92:	f7f8 fd19 	bl	80004c8 <__aeabi_dmul>
 8007a96:	a35e      	add	r3, pc, #376	; (adr r3, 8007c10 <__ieee754_pow+0x9f0>)
 8007a98:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a9c:	4604      	mov	r4, r0
 8007a9e:	460d      	mov	r5, r1
 8007aa0:	f7f8 fd12 	bl	80004c8 <__aeabi_dmul>
 8007aa4:	a35c      	add	r3, pc, #368	; (adr r3, 8007c18 <__ieee754_pow+0x9f8>)
 8007aa6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007aaa:	f7f8 fb55 	bl	8000158 <__aeabi_dsub>
 8007aae:	4622      	mov	r2, r4
 8007ab0:	462b      	mov	r3, r5
 8007ab2:	f7f8 fd09 	bl	80004c8 <__aeabi_dmul>
 8007ab6:	a35a      	add	r3, pc, #360	; (adr r3, 8007c20 <__ieee754_pow+0xa00>)
 8007ab8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007abc:	f7f8 fb4e 	bl	800015c <__adddf3>
 8007ac0:	4622      	mov	r2, r4
 8007ac2:	462b      	mov	r3, r5
 8007ac4:	f7f8 fd00 	bl	80004c8 <__aeabi_dmul>
 8007ac8:	a357      	add	r3, pc, #348	; (adr r3, 8007c28 <__ieee754_pow+0xa08>)
 8007aca:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ace:	f7f8 fb43 	bl	8000158 <__aeabi_dsub>
 8007ad2:	4622      	mov	r2, r4
 8007ad4:	462b      	mov	r3, r5
 8007ad6:	f7f8 fcf7 	bl	80004c8 <__aeabi_dmul>
 8007ada:	a355      	add	r3, pc, #340	; (adr r3, 8007c30 <__ieee754_pow+0xa10>)
 8007adc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ae0:	f7f8 fb3c 	bl	800015c <__adddf3>
 8007ae4:	4622      	mov	r2, r4
 8007ae6:	462b      	mov	r3, r5
 8007ae8:	f7f8 fcee 	bl	80004c8 <__aeabi_dmul>
 8007aec:	4602      	mov	r2, r0
 8007aee:	460b      	mov	r3, r1
 8007af0:	4640      	mov	r0, r8
 8007af2:	4649      	mov	r1, r9
 8007af4:	f7f8 fb30 	bl	8000158 <__aeabi_dsub>
 8007af8:	4604      	mov	r4, r0
 8007afa:	460d      	mov	r5, r1
 8007afc:	4602      	mov	r2, r0
 8007afe:	460b      	mov	r3, r1
 8007b00:	4640      	mov	r0, r8
 8007b02:	4649      	mov	r1, r9
 8007b04:	f7f8 fce0 	bl	80004c8 <__aeabi_dmul>
 8007b08:	2200      	movs	r2, #0
 8007b0a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8007b0e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8007b12:	4620      	mov	r0, r4
 8007b14:	4629      	mov	r1, r5
 8007b16:	f7f8 fb1f 	bl	8000158 <__aeabi_dsub>
 8007b1a:	4602      	mov	r2, r0
 8007b1c:	460b      	mov	r3, r1
 8007b1e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8007b22:	f7f8 fdfb 	bl	800071c <__aeabi_ddiv>
 8007b26:	4632      	mov	r2, r6
 8007b28:	4604      	mov	r4, r0
 8007b2a:	460d      	mov	r5, r1
 8007b2c:	463b      	mov	r3, r7
 8007b2e:	4640      	mov	r0, r8
 8007b30:	4649      	mov	r1, r9
 8007b32:	f7f8 fcc9 	bl	80004c8 <__aeabi_dmul>
 8007b36:	4632      	mov	r2, r6
 8007b38:	463b      	mov	r3, r7
 8007b3a:	f7f8 fb0f 	bl	800015c <__adddf3>
 8007b3e:	4602      	mov	r2, r0
 8007b40:	460b      	mov	r3, r1
 8007b42:	4620      	mov	r0, r4
 8007b44:	4629      	mov	r1, r5
 8007b46:	f7f8 fb07 	bl	8000158 <__aeabi_dsub>
 8007b4a:	4642      	mov	r2, r8
 8007b4c:	464b      	mov	r3, r9
 8007b4e:	f7f8 fb03 	bl	8000158 <__aeabi_dsub>
 8007b52:	4602      	mov	r2, r0
 8007b54:	460b      	mov	r3, r1
 8007b56:	2000      	movs	r0, #0
 8007b58:	4939      	ldr	r1, [pc, #228]	; (8007c40 <__ieee754_pow+0xa20>)
 8007b5a:	f7f8 fafd 	bl	8000158 <__aeabi_dsub>
 8007b5e:	eb01 540a 	add.w	r4, r1, sl, lsl #20
 8007b62:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 8007b66:	da29      	bge.n	8007bbc <__ieee754_pow+0x99c>
 8007b68:	4652      	mov	r2, sl
 8007b6a:	f000 f955 	bl	8007e18 <scalbn>
 8007b6e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8007b72:	f7ff bbfe 	b.w	8007372 <__ieee754_pow+0x152>
 8007b76:	4b33      	ldr	r3, [pc, #204]	; (8007c44 <__ieee754_pow+0xa24>)
 8007b78:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
 8007b7c:	429f      	cmp	r7, r3
 8007b7e:	f77f af13 	ble.w	80079a8 <__ieee754_pow+0x788>
 8007b82:	4b31      	ldr	r3, [pc, #196]	; (8007c48 <__ieee754_pow+0xa28>)
 8007b84:	440b      	add	r3, r1
 8007b86:	4303      	orrs	r3, r0
 8007b88:	d009      	beq.n	8007b9e <__ieee754_pow+0x97e>
 8007b8a:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007b8e:	2200      	movs	r2, #0
 8007b90:	2300      	movs	r3, #0
 8007b92:	f7f8 ff0b 	bl	80009ac <__aeabi_dcmplt>
 8007b96:	3800      	subs	r0, #0
 8007b98:	bf18      	it	ne
 8007b9a:	2001      	movne	r0, #1
 8007b9c:	e453      	b.n	8007446 <__ieee754_pow+0x226>
 8007b9e:	4622      	mov	r2, r4
 8007ba0:	462b      	mov	r3, r5
 8007ba2:	f7f8 fad9 	bl	8000158 <__aeabi_dsub>
 8007ba6:	4642      	mov	r2, r8
 8007ba8:	464b      	mov	r3, r9
 8007baa:	f7f8 ff13 	bl	80009d4 <__aeabi_dcmpge>
 8007bae:	2800      	cmp	r0, #0
 8007bb0:	f43f aefa 	beq.w	80079a8 <__ieee754_pow+0x788>
 8007bb4:	e7e9      	b.n	8007b8a <__ieee754_pow+0x96a>
 8007bb6:	f04f 0a00 	mov.w	sl, #0
 8007bba:	e720      	b.n	80079fe <__ieee754_pow+0x7de>
 8007bbc:	4621      	mov	r1, r4
 8007bbe:	e7d6      	b.n	8007b6e <__ieee754_pow+0x94e>
 8007bc0:	f04f 0b00 	mov.w	fp, #0
 8007bc4:	f8df c078 	ldr.w	ip, [pc, #120]	; 8007c40 <__ieee754_pow+0xa20>
 8007bc8:	f7ff bbba 	b.w	8007340 <__ieee754_pow+0x120>
 8007bcc:	f04f 0b00 	mov.w	fp, #0
 8007bd0:	f04f 0c00 	mov.w	ip, #0
 8007bd4:	f7ff bbb4 	b.w	8007340 <__ieee754_pow+0x120>
 8007bd8:	4640      	mov	r0, r8
 8007bda:	4649      	mov	r1, r9
 8007bdc:	f7ff bb3d 	b.w	800725a <__ieee754_pow+0x3a>
 8007be0:	9200      	str	r2, [sp, #0]
 8007be2:	f7ff bb89 	b.w	80072f8 <__ieee754_pow+0xd8>
 8007be6:	2300      	movs	r3, #0
 8007be8:	f7ff bb73 	b.w	80072d2 <__ieee754_pow+0xb2>
 8007bec:	f3af 8000 	nop.w
 8007bf0:	652b82fe 	.word	0x652b82fe
 8007bf4:	3c971547 	.word	0x3c971547
 8007bf8:	00000000 	.word	0x00000000
 8007bfc:	3fe62e43 	.word	0x3fe62e43
 8007c00:	fefa39ef 	.word	0xfefa39ef
 8007c04:	3fe62e42 	.word	0x3fe62e42
 8007c08:	0ca86c39 	.word	0x0ca86c39
 8007c0c:	be205c61 	.word	0xbe205c61
 8007c10:	72bea4d0 	.word	0x72bea4d0
 8007c14:	3e663769 	.word	0x3e663769
 8007c18:	c5d26bf1 	.word	0xc5d26bf1
 8007c1c:	3ebbbd41 	.word	0x3ebbbd41
 8007c20:	af25de2c 	.word	0xaf25de2c
 8007c24:	3f11566a 	.word	0x3f11566a
 8007c28:	16bebd93 	.word	0x16bebd93
 8007c2c:	3f66c16c 	.word	0x3f66c16c
 8007c30:	5555553e 	.word	0x5555553e
 8007c34:	3fc55555 	.word	0x3fc55555
 8007c38:	3fe00000 	.word	0x3fe00000
 8007c3c:	000fffff 	.word	0x000fffff
 8007c40:	3ff00000 	.word	0x3ff00000
 8007c44:	4090cbff 	.word	0x4090cbff
 8007c48:	3f6f3400 	.word	0x3f6f3400

08007c4c <__ieee754_sqrt>:
 8007c4c:	f8df c158 	ldr.w	ip, [pc, #344]	; 8007da8 <__ieee754_sqrt+0x15c>
 8007c50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007c54:	ea3c 0c01 	bics.w	ip, ip, r1
 8007c58:	4606      	mov	r6, r0
 8007c5a:	460d      	mov	r5, r1
 8007c5c:	460c      	mov	r4, r1
 8007c5e:	460a      	mov	r2, r1
 8007c60:	4607      	mov	r7, r0
 8007c62:	4603      	mov	r3, r0
 8007c64:	d10f      	bne.n	8007c86 <__ieee754_sqrt+0x3a>
 8007c66:	4602      	mov	r2, r0
 8007c68:	460b      	mov	r3, r1
 8007c6a:	f7f8 fc2d 	bl	80004c8 <__aeabi_dmul>
 8007c6e:	4602      	mov	r2, r0
 8007c70:	460b      	mov	r3, r1
 8007c72:	4630      	mov	r0, r6
 8007c74:	4629      	mov	r1, r5
 8007c76:	f7f8 fa71 	bl	800015c <__adddf3>
 8007c7a:	4606      	mov	r6, r0
 8007c7c:	460d      	mov	r5, r1
 8007c7e:	4630      	mov	r0, r6
 8007c80:	4629      	mov	r1, r5
 8007c82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007c86:	2900      	cmp	r1, #0
 8007c88:	dc0e      	bgt.n	8007ca8 <__ieee754_sqrt+0x5c>
 8007c8a:	f021 4c00 	bic.w	ip, r1, #2147483648	; 0x80000000
 8007c8e:	ea5c 0707 	orrs.w	r7, ip, r7
 8007c92:	d0f4      	beq.n	8007c7e <__ieee754_sqrt+0x32>
 8007c94:	b141      	cbz	r1, 8007ca8 <__ieee754_sqrt+0x5c>
 8007c96:	4602      	mov	r2, r0
 8007c98:	460b      	mov	r3, r1
 8007c9a:	f7f8 fa5d 	bl	8000158 <__aeabi_dsub>
 8007c9e:	4602      	mov	r2, r0
 8007ca0:	460b      	mov	r3, r1
 8007ca2:	f7f8 fd3b 	bl	800071c <__aeabi_ddiv>
 8007ca6:	e7e8      	b.n	8007c7a <__ieee754_sqrt+0x2e>
 8007ca8:	1521      	asrs	r1, r4, #20
 8007caa:	d075      	beq.n	8007d98 <__ieee754_sqrt+0x14c>
 8007cac:	07cc      	lsls	r4, r1, #31
 8007cae:	f04f 0400 	mov.w	r4, #0
 8007cb2:	f3c2 0213 	ubfx	r2, r2, #0, #20
 8007cb6:	f2a1 37ff 	subw	r7, r1, #1023	; 0x3ff
 8007cba:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8007cbe:	bf5e      	ittt	pl
 8007cc0:	0fd9      	lsrpl	r1, r3, #31
 8007cc2:	005b      	lslpl	r3, r3, #1
 8007cc4:	eb01 0242 	addpl.w	r2, r1, r2, lsl #1
 8007cc8:	0fd9      	lsrs	r1, r3, #31
 8007cca:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8007cce:	2516      	movs	r5, #22
 8007cd0:	4620      	mov	r0, r4
 8007cd2:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8007cd6:	107f      	asrs	r7, r7, #1
 8007cd8:	005b      	lsls	r3, r3, #1
 8007cda:	1846      	adds	r6, r0, r1
 8007cdc:	4296      	cmp	r6, r2
 8007cde:	bfde      	ittt	le
 8007ce0:	1b92      	suble	r2, r2, r6
 8007ce2:	1870      	addle	r0, r6, r1
 8007ce4:	1864      	addle	r4, r4, r1
 8007ce6:	0052      	lsls	r2, r2, #1
 8007ce8:	3d01      	subs	r5, #1
 8007cea:	eb02 72d3 	add.w	r2, r2, r3, lsr #31
 8007cee:	ea4f 0151 	mov.w	r1, r1, lsr #1
 8007cf2:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007cf6:	d1f0      	bne.n	8007cda <__ieee754_sqrt+0x8e>
 8007cf8:	4629      	mov	r1, r5
 8007cfa:	f04f 0e20 	mov.w	lr, #32
 8007cfe:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8007d02:	4282      	cmp	r2, r0
 8007d04:	eb06 0c05 	add.w	ip, r6, r5
 8007d08:	dc02      	bgt.n	8007d10 <__ieee754_sqrt+0xc4>
 8007d0a:	d113      	bne.n	8007d34 <__ieee754_sqrt+0xe8>
 8007d0c:	459c      	cmp	ip, r3
 8007d0e:	d811      	bhi.n	8007d34 <__ieee754_sqrt+0xe8>
 8007d10:	f1bc 0f00 	cmp.w	ip, #0
 8007d14:	eb0c 0506 	add.w	r5, ip, r6
 8007d18:	da43      	bge.n	8007da2 <__ieee754_sqrt+0x156>
 8007d1a:	2d00      	cmp	r5, #0
 8007d1c:	db41      	blt.n	8007da2 <__ieee754_sqrt+0x156>
 8007d1e:	f100 0801 	add.w	r8, r0, #1
 8007d22:	1a12      	subs	r2, r2, r0
 8007d24:	4640      	mov	r0, r8
 8007d26:	459c      	cmp	ip, r3
 8007d28:	bf88      	it	hi
 8007d2a:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8007d2e:	eba3 030c 	sub.w	r3, r3, ip
 8007d32:	4431      	add	r1, r6
 8007d34:	ea4f 7cd3 	mov.w	ip, r3, lsr #31
 8007d38:	f1be 0e01 	subs.w	lr, lr, #1
 8007d3c:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 8007d40:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007d44:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8007d48:	d1db      	bne.n	8007d02 <__ieee754_sqrt+0xb6>
 8007d4a:	4313      	orrs	r3, r2
 8007d4c:	d006      	beq.n	8007d5c <__ieee754_sqrt+0x110>
 8007d4e:	1c48      	adds	r0, r1, #1
 8007d50:	bf0b      	itete	eq
 8007d52:	4671      	moveq	r1, lr
 8007d54:	3101      	addne	r1, #1
 8007d56:	3401      	addeq	r4, #1
 8007d58:	f021 0101 	bicne.w	r1, r1, #1
 8007d5c:	1063      	asrs	r3, r4, #1
 8007d5e:	0849      	lsrs	r1, r1, #1
 8007d60:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 8007d64:	07e2      	lsls	r2, r4, #31
 8007d66:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 8007d6a:	bf48      	it	mi
 8007d6c:	f041 4100 	orrmi.w	r1, r1, #2147483648	; 0x80000000
 8007d70:	460e      	mov	r6, r1
 8007d72:	eb03 5507 	add.w	r5, r3, r7, lsl #20
 8007d76:	e782      	b.n	8007c7e <__ieee754_sqrt+0x32>
 8007d78:	0ada      	lsrs	r2, r3, #11
 8007d7a:	3815      	subs	r0, #21
 8007d7c:	055b      	lsls	r3, r3, #21
 8007d7e:	2a00      	cmp	r2, #0
 8007d80:	d0fa      	beq.n	8007d78 <__ieee754_sqrt+0x12c>
 8007d82:	02d5      	lsls	r5, r2, #11
 8007d84:	d50a      	bpl.n	8007d9c <__ieee754_sqrt+0x150>
 8007d86:	f1c1 0420 	rsb	r4, r1, #32
 8007d8a:	fa23 f404 	lsr.w	r4, r3, r4
 8007d8e:	1e4d      	subs	r5, r1, #1
 8007d90:	408b      	lsls	r3, r1
 8007d92:	4322      	orrs	r2, r4
 8007d94:	1b41      	subs	r1, r0, r5
 8007d96:	e789      	b.n	8007cac <__ieee754_sqrt+0x60>
 8007d98:	4608      	mov	r0, r1
 8007d9a:	e7f0      	b.n	8007d7e <__ieee754_sqrt+0x132>
 8007d9c:	0052      	lsls	r2, r2, #1
 8007d9e:	3101      	adds	r1, #1
 8007da0:	e7ef      	b.n	8007d82 <__ieee754_sqrt+0x136>
 8007da2:	4680      	mov	r8, r0
 8007da4:	e7bd      	b.n	8007d22 <__ieee754_sqrt+0xd6>
 8007da6:	bf00      	nop
 8007da8:	7ff00000 	.word	0x7ff00000

08007dac <with_errno>:
 8007dac:	b570      	push	{r4, r5, r6, lr}
 8007dae:	4604      	mov	r4, r0
 8007db0:	460d      	mov	r5, r1
 8007db2:	4616      	mov	r6, r2
 8007db4:	f000 f8ae 	bl	8007f14 <__errno>
 8007db8:	4629      	mov	r1, r5
 8007dba:	6006      	str	r6, [r0, #0]
 8007dbc:	4620      	mov	r0, r4
 8007dbe:	bd70      	pop	{r4, r5, r6, pc}

08007dc0 <xflow>:
 8007dc0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007dc2:	4615      	mov	r5, r2
 8007dc4:	461c      	mov	r4, r3
 8007dc6:	b180      	cbz	r0, 8007dea <xflow+0x2a>
 8007dc8:	4610      	mov	r0, r2
 8007dca:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8007dce:	e9cd 0100 	strd	r0, r1, [sp]
 8007dd2:	e9dd 2300 	ldrd	r2, r3, [sp]
 8007dd6:	4628      	mov	r0, r5
 8007dd8:	4621      	mov	r1, r4
 8007dda:	f7f8 fb75 	bl	80004c8 <__aeabi_dmul>
 8007dde:	2222      	movs	r2, #34	; 0x22
 8007de0:	b003      	add	sp, #12
 8007de2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8007de6:	f7ff bfe1 	b.w	8007dac <with_errno>
 8007dea:	4610      	mov	r0, r2
 8007dec:	4619      	mov	r1, r3
 8007dee:	e7ee      	b.n	8007dce <xflow+0xe>

08007df0 <__math_uflow>:
 8007df0:	2200      	movs	r2, #0
 8007df2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007df6:	f7ff bfe3 	b.w	8007dc0 <xflow>

08007dfa <__math_oflow>:
 8007dfa:	2200      	movs	r2, #0
 8007dfc:	f04f 43e0 	mov.w	r3, #1879048192	; 0x70000000
 8007e00:	f7ff bfde 	b.w	8007dc0 <xflow>

08007e04 <fabs>:
 8007e04:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8007e08:	4770      	bx	lr

08007e0a <finite>:
 8007e0a:	f041 4000 	orr.w	r0, r1, #2147483648	; 0x80000000
 8007e0e:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 8007e12:	0fc0      	lsrs	r0, r0, #31
 8007e14:	4770      	bx	lr
	...

08007e18 <scalbn>:
 8007e18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007e1a:	f3c1 560a 	ubfx	r6, r1, #20, #11
 8007e1e:	4604      	mov	r4, r0
 8007e20:	460d      	mov	r5, r1
 8007e22:	4617      	mov	r7, r2
 8007e24:	460b      	mov	r3, r1
 8007e26:	b996      	cbnz	r6, 8007e4e <scalbn+0x36>
 8007e28:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8007e2c:	4303      	orrs	r3, r0
 8007e2e:	d039      	beq.n	8007ea4 <scalbn+0x8c>
 8007e30:	4b33      	ldr	r3, [pc, #204]	; (8007f00 <scalbn+0xe8>)
 8007e32:	2200      	movs	r2, #0
 8007e34:	f7f8 fb48 	bl	80004c8 <__aeabi_dmul>
 8007e38:	4b32      	ldr	r3, [pc, #200]	; (8007f04 <scalbn+0xec>)
 8007e3a:	4604      	mov	r4, r0
 8007e3c:	429f      	cmp	r7, r3
 8007e3e:	460d      	mov	r5, r1
 8007e40:	da0f      	bge.n	8007e62 <scalbn+0x4a>
 8007e42:	a32b      	add	r3, pc, #172	; (adr r3, 8007ef0 <scalbn+0xd8>)
 8007e44:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e48:	f7f8 fb3e 	bl	80004c8 <__aeabi_dmul>
 8007e4c:	e006      	b.n	8007e5c <scalbn+0x44>
 8007e4e:	f240 72ff 	movw	r2, #2047	; 0x7ff
 8007e52:	4296      	cmp	r6, r2
 8007e54:	d10a      	bne.n	8007e6c <scalbn+0x54>
 8007e56:	4602      	mov	r2, r0
 8007e58:	f7f8 f980 	bl	800015c <__adddf3>
 8007e5c:	4604      	mov	r4, r0
 8007e5e:	460d      	mov	r5, r1
 8007e60:	e020      	b.n	8007ea4 <scalbn+0x8c>
 8007e62:	460b      	mov	r3, r1
 8007e64:	f3c1 510a 	ubfx	r1, r1, #20, #11
 8007e68:	f1a1 0636 	sub.w	r6, r1, #54	; 0x36
 8007e6c:	f240 72fe 	movw	r2, #2046	; 0x7fe
 8007e70:	19b9      	adds	r1, r7, r6
 8007e72:	4291      	cmp	r1, r2
 8007e74:	dd0e      	ble.n	8007e94 <scalbn+0x7c>
 8007e76:	f005 4400 	and.w	r4, r5, #2147483648	; 0x80000000
 8007e7a:	f044 41fc 	orr.w	r1, r4, #2113929216	; 0x7e000000
 8007e7e:	f441 115f 	orr.w	r1, r1, #3653632	; 0x37c000
 8007e82:	f441 5110 	orr.w	r1, r1, #9216	; 0x2400
 8007e86:	4820      	ldr	r0, [pc, #128]	; (8007f08 <scalbn+0xf0>)
 8007e88:	f041 013c 	orr.w	r1, r1, #60	; 0x3c
 8007e8c:	a31a      	add	r3, pc, #104	; (adr r3, 8007ef8 <scalbn+0xe0>)
 8007e8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e92:	e7d9      	b.n	8007e48 <scalbn+0x30>
 8007e94:	2900      	cmp	r1, #0
 8007e96:	dd08      	ble.n	8007eaa <scalbn+0x92>
 8007e98:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8007e9c:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8007ea0:	ea43 5501 	orr.w	r5, r3, r1, lsl #20
 8007ea4:	4620      	mov	r0, r4
 8007ea6:	4629      	mov	r1, r5
 8007ea8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007eaa:	f111 0f35 	cmn.w	r1, #53	; 0x35
 8007eae:	da12      	bge.n	8007ed6 <scalbn+0xbe>
 8007eb0:	f24c 3350 	movw	r3, #50000	; 0xc350
 8007eb4:	429f      	cmp	r7, r3
 8007eb6:	ea4f 73d5 	mov.w	r3, r5, lsr #31
 8007eba:	ea4f 74c3 	mov.w	r4, r3, lsl #31
 8007ebe:	dcdc      	bgt.n	8007e7a <scalbn+0x62>
 8007ec0:	a30b      	add	r3, pc, #44	; (adr r3, 8007ef0 <scalbn+0xd8>)
 8007ec2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ec6:	f044 71d2 	orr.w	r1, r4, #27525120	; 0x1a40000
 8007eca:	f441 31b7 	orr.w	r1, r1, #93696	; 0x16e00
 8007ece:	480f      	ldr	r0, [pc, #60]	; (8007f0c <scalbn+0xf4>)
 8007ed0:	f041 011f 	orr.w	r1, r1, #31
 8007ed4:	e7b8      	b.n	8007e48 <scalbn+0x30>
 8007ed6:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8007eda:	3136      	adds	r1, #54	; 0x36
 8007edc:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8007ee0:	ea43 5501 	orr.w	r5, r3, r1, lsl #20
 8007ee4:	4620      	mov	r0, r4
 8007ee6:	4629      	mov	r1, r5
 8007ee8:	2200      	movs	r2, #0
 8007eea:	4b09      	ldr	r3, [pc, #36]	; (8007f10 <scalbn+0xf8>)
 8007eec:	e7ac      	b.n	8007e48 <scalbn+0x30>
 8007eee:	bf00      	nop
 8007ef0:	c2f8f359 	.word	0xc2f8f359
 8007ef4:	01a56e1f 	.word	0x01a56e1f
 8007ef8:	8800759c 	.word	0x8800759c
 8007efc:	7e37e43c 	.word	0x7e37e43c
 8007f00:	43500000 	.word	0x43500000
 8007f04:	ffff3cb0 	.word	0xffff3cb0
 8007f08:	8800759c 	.word	0x8800759c
 8007f0c:	c2f8f359 	.word	0xc2f8f359
 8007f10:	3c900000 	.word	0x3c900000

08007f14 <__errno>:
 8007f14:	4b01      	ldr	r3, [pc, #4]	; (8007f1c <__errno+0x8>)
 8007f16:	6818      	ldr	r0, [r3, #0]
 8007f18:	4770      	bx	lr
 8007f1a:	bf00      	nop
 8007f1c:	20000048 	.word	0x20000048

08007f20 <__libc_init_array>:
 8007f20:	b570      	push	{r4, r5, r6, lr}
 8007f22:	2600      	movs	r6, #0
 8007f24:	4d0c      	ldr	r5, [pc, #48]	; (8007f58 <__libc_init_array+0x38>)
 8007f26:	4c0d      	ldr	r4, [pc, #52]	; (8007f5c <__libc_init_array+0x3c>)
 8007f28:	1b64      	subs	r4, r4, r5
 8007f2a:	10a4      	asrs	r4, r4, #2
 8007f2c:	42a6      	cmp	r6, r4
 8007f2e:	d109      	bne.n	8007f44 <__libc_init_array+0x24>
 8007f30:	f000 f822 	bl	8007f78 <_init>
 8007f34:	2600      	movs	r6, #0
 8007f36:	4d0a      	ldr	r5, [pc, #40]	; (8007f60 <__libc_init_array+0x40>)
 8007f38:	4c0a      	ldr	r4, [pc, #40]	; (8007f64 <__libc_init_array+0x44>)
 8007f3a:	1b64      	subs	r4, r4, r5
 8007f3c:	10a4      	asrs	r4, r4, #2
 8007f3e:	42a6      	cmp	r6, r4
 8007f40:	d105      	bne.n	8007f4e <__libc_init_array+0x2e>
 8007f42:	bd70      	pop	{r4, r5, r6, pc}
 8007f44:	f855 3b04 	ldr.w	r3, [r5], #4
 8007f48:	4798      	blx	r3
 8007f4a:	3601      	adds	r6, #1
 8007f4c:	e7ee      	b.n	8007f2c <__libc_init_array+0xc>
 8007f4e:	f855 3b04 	ldr.w	r3, [r5], #4
 8007f52:	4798      	blx	r3
 8007f54:	3601      	adds	r6, #1
 8007f56:	e7f2      	b.n	8007f3e <__libc_init_array+0x1e>
 8007f58:	08007fe8 	.word	0x08007fe8
 8007f5c:	08007fe8 	.word	0x08007fe8
 8007f60:	08007fe8 	.word	0x08007fe8
 8007f64:	08007fec 	.word	0x08007fec

08007f68 <memset>:
 8007f68:	4603      	mov	r3, r0
 8007f6a:	4402      	add	r2, r0
 8007f6c:	4293      	cmp	r3, r2
 8007f6e:	d100      	bne.n	8007f72 <memset+0xa>
 8007f70:	4770      	bx	lr
 8007f72:	f803 1b01 	strb.w	r1, [r3], #1
 8007f76:	e7f9      	b.n	8007f6c <memset+0x4>

08007f78 <_init>:
 8007f78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007f7a:	bf00      	nop
 8007f7c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007f7e:	bc08      	pop	{r3}
 8007f80:	469e      	mov	lr, r3
 8007f82:	4770      	bx	lr

08007f84 <_fini>:
 8007f84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007f86:	bf00      	nop
 8007f88:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007f8a:	bc08      	pop	{r3}
 8007f8c:	469e      	mov	lr, r3
 8007f8e:	4770      	bx	lr
